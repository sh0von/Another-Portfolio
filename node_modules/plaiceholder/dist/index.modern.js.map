{"version":3,"file":"index.modern.js","sources":["../src/base64.ts","../../../node_modules/blurhash/dist/esm/base83.js","../../../node_modules/blurhash/dist/esm/utils.js","../../../node_modules/blurhash/dist/esm/error.js","../../../node_modules/blurhash/dist/esm/encode.js","../src/blurhash.ts","../src/css.ts","../../../node_modules/clone/clone.js","../../../node_modules/node-cache/lib/node_cache.js","../../../node_modules/node-cache/index.js","../../../node_modules/node-fetch/node_modules/webidl-conversions/lib/index.js","../../../node_modules/node-fetch/node_modules/whatwg-url/lib/utils.js","../../../node_modules/node-fetch/node_modules/tr46/index.js","../../../node_modules/node-fetch/node_modules/whatwg-url/lib/url-state-machine.js","../../../node_modules/node-fetch/node_modules/whatwg-url/lib/URL-impl.js","../../../node_modules/node-fetch/node_modules/whatwg-url/lib/URL.js","../../../node_modules/node-fetch/node_modules/whatwg-url/lib/public-api.js","../../../node_modules/node-fetch/lib/index.mjs","../../../node_modules/inherits/inherits_browser.js","../../../node_modules/inherits/inherits.js","../../../node_modules/queue/index.js","../../../node_modules/image-size/dist/types/bmp.js","../../../node_modules/image-size/dist/types/ico.js","../../../node_modules/image-size/dist/types/cur.js","../../../node_modules/image-size/dist/types/dds.js","../../../node_modules/image-size/dist/types/gif.js","../../../node_modules/image-size/dist/types/icns.js","../../../node_modules/image-size/dist/types/j2c.js","../../../node_modules/image-size/dist/types/jp2.js","../../../node_modules/image-size/dist/readUInt.js","../../../node_modules/image-size/dist/types/jpg.js","../../../node_modules/image-size/dist/types/ktx.js","../../../node_modules/image-size/dist/types/png.js","../../../node_modules/image-size/dist/types/pnm.js","../../../node_modules/image-size/dist/types/psd.js","../../../node_modules/image-size/dist/types/svg.js","../../../node_modules/image-size/dist/types/tiff.js","../../../node_modules/image-size/dist/types/webp.js","../../../node_modules/image-size/dist/types.js","../../../node_modules/image-size/dist/detector.js","../../../node_modules/image-size/dist/index.js","../src/utils.ts","../src/get-image.ts","../src/svg.ts","../src/plaiceholder.ts","../src/types.ts"],"sourcesContent":["import type { IGetImageReturn } from \"./get-image\";\n\ntype TGetImageReturnBase64 = IGetImageReturn[\"optimizedForBase64\"];\n\nexport interface IGetBase64Options extends TGetImageReturnBase64 {}\nexport type TGetBase64Return = string;\n\nexport interface IGetBase64 {\n  (options: IGetBase64Options): TGetBase64Return;\n}\n\nexport const getBase64: IGetBase64 = ({ data, info }) =>\n  `data:image/${info.format};base64,${data.toString(\"base64\")}`;\n","const digitCharacters = [\n    \"0\",\n    \"1\",\n    \"2\",\n    \"3\",\n    \"4\",\n    \"5\",\n    \"6\",\n    \"7\",\n    \"8\",\n    \"9\",\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"E\",\n    \"F\",\n    \"G\",\n    \"H\",\n    \"I\",\n    \"J\",\n    \"K\",\n    \"L\",\n    \"M\",\n    \"N\",\n    \"O\",\n    \"P\",\n    \"Q\",\n    \"R\",\n    \"S\",\n    \"T\",\n    \"U\",\n    \"V\",\n    \"W\",\n    \"X\",\n    \"Y\",\n    \"Z\",\n    \"a\",\n    \"b\",\n    \"c\",\n    \"d\",\n    \"e\",\n    \"f\",\n    \"g\",\n    \"h\",\n    \"i\",\n    \"j\",\n    \"k\",\n    \"l\",\n    \"m\",\n    \"n\",\n    \"o\",\n    \"p\",\n    \"q\",\n    \"r\",\n    \"s\",\n    \"t\",\n    \"u\",\n    \"v\",\n    \"w\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"#\",\n    \"$\",\n    \"%\",\n    \"*\",\n    \"+\",\n    \",\",\n    \"-\",\n    \".\",\n    \":\",\n    \";\",\n    \"=\",\n    \"?\",\n    \"@\",\n    \"[\",\n    \"]\",\n    \"^\",\n    \"_\",\n    \"{\",\n    \"|\",\n    \"}\",\n    \"~\"\n];\nexport const decode83 = (str) => {\n    let value = 0;\n    for (let i = 0; i < str.length; i++) {\n        const c = str[i];\n        const digit = digitCharacters.indexOf(c);\n        value = value * 83 + digit;\n    }\n    return value;\n};\nexport const encode83 = (n, length) => {\n    var result = \"\";\n    for (let i = 1; i <= length; i++) {\n        let digit = (Math.floor(n) / Math.pow(83, length - i)) % 83;\n        result += digitCharacters[Math.floor(digit)];\n    }\n    return result;\n};\n//# sourceMappingURL=base83.js.map","export const sRGBToLinear = (value) => {\n    let v = value / 255;\n    if (v <= 0.04045) {\n        return v / 12.92;\n    }\n    else {\n        return Math.pow((v + 0.055) / 1.055, 2.4);\n    }\n};\nexport const linearTosRGB = (value) => {\n    let v = Math.max(0, Math.min(1, value));\n    if (v <= 0.0031308) {\n        return Math.round(v * 12.92 * 255 + 0.5);\n    }\n    else {\n        return Math.round((1.055 * Math.pow(v, 1 / 2.4) - 0.055) * 255 + 0.5);\n    }\n};\nexport const sign = (n) => (n < 0 ? -1 : 1);\nexport const signPow = (val, exp) => sign(val) * Math.pow(Math.abs(val), exp);\n//# sourceMappingURL=utils.js.map","export class ValidationError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = \"ValidationError\";\n        this.message = message;\n    }\n}\n//# sourceMappingURL=error.js.map","import { encode83 } from \"./base83\";\nimport { sRGBToLinear, signPow, linearTosRGB } from \"./utils\";\nimport { ValidationError } from \"./error\";\nconst bytesPerPixel = 4;\nconst multiplyBasisFunction = (pixels, width, height, basisFunction) => {\n    let r = 0;\n    let g = 0;\n    let b = 0;\n    const bytesPerRow = width * bytesPerPixel;\n    for (let x = 0; x < width; x++) {\n        for (let y = 0; y < height; y++) {\n            const basis = basisFunction(x, y);\n            r +=\n                basis * sRGBToLinear(pixels[bytesPerPixel * x + 0 + y * bytesPerRow]);\n            g +=\n                basis * sRGBToLinear(pixels[bytesPerPixel * x + 1 + y * bytesPerRow]);\n            b +=\n                basis * sRGBToLinear(pixels[bytesPerPixel * x + 2 + y * bytesPerRow]);\n        }\n    }\n    let scale = 1 / (width * height);\n    return [r * scale, g * scale, b * scale];\n};\nconst encodeDC = (value) => {\n    const roundedR = linearTosRGB(value[0]);\n    const roundedG = linearTosRGB(value[1]);\n    const roundedB = linearTosRGB(value[2]);\n    return (roundedR << 16) + (roundedG << 8) + roundedB;\n};\nconst encodeAC = (value, maximumValue) => {\n    let quantR = Math.floor(Math.max(0, Math.min(18, Math.floor(signPow(value[0] / maximumValue, 0.5) * 9 + 9.5))));\n    let quantG = Math.floor(Math.max(0, Math.min(18, Math.floor(signPow(value[1] / maximumValue, 0.5) * 9 + 9.5))));\n    let quantB = Math.floor(Math.max(0, Math.min(18, Math.floor(signPow(value[2] / maximumValue, 0.5) * 9 + 9.5))));\n    return quantR * 19 * 19 + quantG * 19 + quantB;\n};\nconst encode = (pixels, width, height, componentX, componentY) => {\n    if (componentX < 1 || componentX > 9 || componentY < 1 || componentY > 9) {\n        throw new ValidationError(\"BlurHash must have between 1 and 9 components\");\n    }\n    if (width * height * 4 !== pixels.length) {\n        throw new ValidationError(\"Width and height must match the pixels array\");\n    }\n    let factors = [];\n    for (let y = 0; y < componentY; y++) {\n        for (let x = 0; x < componentX; x++) {\n            const normalisation = x == 0 && y == 0 ? 1 : 2;\n            const factor = multiplyBasisFunction(pixels, width, height, (i, j) => normalisation *\n                Math.cos((Math.PI * x * i) / width) *\n                Math.cos((Math.PI * y * j) / height));\n            factors.push(factor);\n        }\n    }\n    const dc = factors[0];\n    const ac = factors.slice(1);\n    let hash = \"\";\n    let sizeFlag = componentX - 1 + (componentY - 1) * 9;\n    hash += encode83(sizeFlag, 1);\n    let maximumValue;\n    if (ac.length > 0) {\n        let actualMaximumValue = Math.max(...ac.map(val => Math.max(...val)));\n        let quantisedMaximumValue = Math.floor(Math.max(0, Math.min(82, Math.floor(actualMaximumValue * 166 - 0.5))));\n        maximumValue = (quantisedMaximumValue + 1) / 166;\n        hash += encode83(quantisedMaximumValue, 1);\n    }\n    else {\n        maximumValue = 1;\n        hash += encode83(0, 1);\n    }\n    hash += encode83(encodeDC(dc), 4);\n    ac.forEach(factor => {\n        hash += encode83(encodeAC(factor, maximumValue), 2);\n    });\n    return hash;\n};\nexport default encode;\n//# sourceMappingURL=encode.js.map","import { encode } from \"blurhash\";\nimport type { IGetImageReturn } from \"./get-image\";\n\ntype TGetImageReturnBlurhash = IGetImageReturn[\"optimizedForBlurhash\"];\n\nexport interface IGetBlurhashOptions extends TGetImageReturnBlurhash {}\n\nexport type IGetBlurhashReturn = {\n  hash: string;\n} & Record<\"width\" | \"height\", number>;\n\nexport interface IGetBlurhash {\n  (options: IGetBlurhashOptions): IGetBlurhashReturn;\n}\n\nexport const getBlurhash: IGetBlurhash = ({ data, info }) => {\n  const { width, height } = info;\n\n  const hash = encode(new Uint8ClampedArray(data), width, height, 4, 4);\n\n  return {\n    width,\n    height,\n    hash,\n  };\n};\n","import type { IGetImageReturn } from \"./get-image\";\n\ntype TGetImageReturnCSS = IGetImageReturn[\"optimizedForCSS\"];\n\nconst rgb = (channels: (number | string)[]) =>\n  `rgb${channels.length === 4 ? \"a\" : \"\"}(${channels.join(\",\")})`;\n\nexport interface IGetCSSOptions extends TGetImageReturnCSS {}\nexport interface IGetCSSReturn\n  extends Record<\n    | \"backgroundImage\"\n    | \"backgroundPosition\"\n    | \"backgroundSize\"\n    | \"backgroundRepeat\",\n    string\n  > {}\n\nexport interface IGetCSS {\n  (options: IGetCSSOptions): IGetCSSReturn;\n}\n\nexport const getCSS: IGetCSS = ({ info, rows }) => {\n  const linearGradients = rows.map((row) => {\n    const pixels = row.map((pixel) => rgb(pixel));\n\n    const gradient = pixels\n      .map((pixel, i) => {\n        const start = i === 0 ? \"\" : ` ${(i / pixels.length) * 100}%`;\n        const end =\n          i === pixels.length ? \"\" : ` ${((i + 1) / pixels.length) * 100}%`;\n\n        return `${pixel}${start}${end}`;\n      })\n      .join(\",\");\n\n    return `linear-gradient(90deg, ${gradient})`;\n  });\n\n  if (linearGradients.length !== info.height) {\n    console.error(\n      \"Woops! Something went wrong here and caused the color height to differ from the source height.\"\n    );\n  }\n\n  const backgroundPosition = linearGradients\n    .map((_, i) =>\n      i === 0 ? \"0 0 \" : `0 ${(i / (linearGradients.length - 1)) * 100}%`\n    )\n    .join(\",\");\n\n  const backgroundSize = `100% ${100 / linearGradients.length}%`;\n\n  return {\n    backgroundImage: linearGradients.join(\",\"),\n    backgroundPosition,\n    backgroundSize,\n    backgroundRepeat: \"no-repeat\",\n  };\n};\n","var clone = (function() {\n'use strict';\n\nfunction _instanceof(obj, type) {\n  return type != null && obj instanceof type;\n}\n\nvar nativeMap;\ntry {\n  nativeMap = Map;\n} catch(_) {\n  // maybe a reference error because no `Map`. Give it a dummy value that no\n  // value will ever be an instanceof.\n  nativeMap = function() {};\n}\n\nvar nativeSet;\ntry {\n  nativeSet = Set;\n} catch(_) {\n  nativeSet = function() {};\n}\n\nvar nativePromise;\ntry {\n  nativePromise = Promise;\n} catch(_) {\n  nativePromise = function() {};\n}\n\n/**\n * Clones (copies) an Object using deep copying.\n *\n * This function supports circular references by default, but if you are certain\n * there are no circular references in your object, you can save some CPU time\n * by calling clone(obj, false).\n *\n * Caution: if `circular` is false and `parent` contains circular references,\n * your program may enter an infinite loop and crash.\n *\n * @param `parent` - the object to be cloned\n * @param `circular` - set to true if the object to be cloned may contain\n *    circular references. (optional - true by default)\n * @param `depth` - set to a number if the object is only to be cloned to\n *    a particular depth. (optional - defaults to Infinity)\n * @param `prototype` - sets the prototype to be used when cloning an object.\n *    (optional - defaults to parent prototype).\n * @param `includeNonEnumerable` - set to true if the non-enumerable properties\n *    should be cloned as well. Non-enumerable properties on the prototype\n *    chain will be ignored. (optional - false by default)\n*/\nfunction clone(parent, circular, depth, prototype, includeNonEnumerable) {\n  if (typeof circular === 'object') {\n    depth = circular.depth;\n    prototype = circular.prototype;\n    includeNonEnumerable = circular.includeNonEnumerable;\n    circular = circular.circular;\n  }\n  // maintain two arrays for circular references, where corresponding parents\n  // and children have the same index\n  var allParents = [];\n  var allChildren = [];\n\n  var useBuffer = typeof Buffer != 'undefined';\n\n  if (typeof circular == 'undefined')\n    circular = true;\n\n  if (typeof depth == 'undefined')\n    depth = Infinity;\n\n  // recurse this function so we don't reset allParents and allChildren\n  function _clone(parent, depth) {\n    // cloning null always returns null\n    if (parent === null)\n      return null;\n\n    if (depth === 0)\n      return parent;\n\n    var child;\n    var proto;\n    if (typeof parent != 'object') {\n      return parent;\n    }\n\n    if (_instanceof(parent, nativeMap)) {\n      child = new nativeMap();\n    } else if (_instanceof(parent, nativeSet)) {\n      child = new nativeSet();\n    } else if (_instanceof(parent, nativePromise)) {\n      child = new nativePromise(function (resolve, reject) {\n        parent.then(function(value) {\n          resolve(_clone(value, depth - 1));\n        }, function(err) {\n          reject(_clone(err, depth - 1));\n        });\n      });\n    } else if (clone.__isArray(parent)) {\n      child = [];\n    } else if (clone.__isRegExp(parent)) {\n      child = new RegExp(parent.source, __getRegExpFlags(parent));\n      if (parent.lastIndex) child.lastIndex = parent.lastIndex;\n    } else if (clone.__isDate(parent)) {\n      child = new Date(parent.getTime());\n    } else if (useBuffer && Buffer.isBuffer(parent)) {\n      if (Buffer.allocUnsafe) {\n        // Node.js >= 4.5.0\n        child = Buffer.allocUnsafe(parent.length);\n      } else {\n        // Older Node.js versions\n        child = new Buffer(parent.length);\n      }\n      parent.copy(child);\n      return child;\n    } else if (_instanceof(parent, Error)) {\n      child = Object.create(parent);\n    } else {\n      if (typeof prototype == 'undefined') {\n        proto = Object.getPrototypeOf(parent);\n        child = Object.create(proto);\n      }\n      else {\n        child = Object.create(prototype);\n        proto = prototype;\n      }\n    }\n\n    if (circular) {\n      var index = allParents.indexOf(parent);\n\n      if (index != -1) {\n        return allChildren[index];\n      }\n      allParents.push(parent);\n      allChildren.push(child);\n    }\n\n    if (_instanceof(parent, nativeMap)) {\n      parent.forEach(function(value, key) {\n        var keyChild = _clone(key, depth - 1);\n        var valueChild = _clone(value, depth - 1);\n        child.set(keyChild, valueChild);\n      });\n    }\n    if (_instanceof(parent, nativeSet)) {\n      parent.forEach(function(value) {\n        var entryChild = _clone(value, depth - 1);\n        child.add(entryChild);\n      });\n    }\n\n    for (var i in parent) {\n      var attrs;\n      if (proto) {\n        attrs = Object.getOwnPropertyDescriptor(proto, i);\n      }\n\n      if (attrs && attrs.set == null) {\n        continue;\n      }\n      child[i] = _clone(parent[i], depth - 1);\n    }\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(parent);\n      for (var i = 0; i < symbols.length; i++) {\n        // Don't need to worry about cloning a symbol because it is a primitive,\n        // like a number or string.\n        var symbol = symbols[i];\n        var descriptor = Object.getOwnPropertyDescriptor(parent, symbol);\n        if (descriptor && !descriptor.enumerable && !includeNonEnumerable) {\n          continue;\n        }\n        child[symbol] = _clone(parent[symbol], depth - 1);\n        if (!descriptor.enumerable) {\n          Object.defineProperty(child, symbol, {\n            enumerable: false\n          });\n        }\n      }\n    }\n\n    if (includeNonEnumerable) {\n      var allPropertyNames = Object.getOwnPropertyNames(parent);\n      for (var i = 0; i < allPropertyNames.length; i++) {\n        var propertyName = allPropertyNames[i];\n        var descriptor = Object.getOwnPropertyDescriptor(parent, propertyName);\n        if (descriptor && descriptor.enumerable) {\n          continue;\n        }\n        child[propertyName] = _clone(parent[propertyName], depth - 1);\n        Object.defineProperty(child, propertyName, {\n          enumerable: false\n        });\n      }\n    }\n\n    return child;\n  }\n\n  return _clone(parent, depth);\n}\n\n/**\n * Simple flat clone using prototype, accepts only objects, usefull for property\n * override on FLAT configuration object (no nested props).\n *\n * USE WITH CAUTION! This may not behave as you wish if you do not know how this\n * works.\n */\nclone.clonePrototype = function clonePrototype(parent) {\n  if (parent === null)\n    return null;\n\n  var c = function () {};\n  c.prototype = parent;\n  return new c();\n};\n\n// private utility functions\n\nfunction __objToStr(o) {\n  return Object.prototype.toString.call(o);\n}\nclone.__objToStr = __objToStr;\n\nfunction __isDate(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Date]';\n}\nclone.__isDate = __isDate;\n\nfunction __isArray(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Array]';\n}\nclone.__isArray = __isArray;\n\nfunction __isRegExp(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object RegExp]';\n}\nclone.__isRegExp = __isRegExp;\n\nfunction __getRegExpFlags(re) {\n  var flags = '';\n  if (re.global) flags += 'g';\n  if (re.ignoreCase) flags += 'i';\n  if (re.multiline) flags += 'm';\n  return flags;\n}\nclone.__getRegExpFlags = __getRegExpFlags;\n\nreturn clone;\n})();\n\nif (typeof module === 'object' && module.exports) {\n  module.exports = clone;\n}\n","/*\n * node-cache 5.1.2 ( 2020-07-01 )\n * https://github.com/node-cache/node-cache\n *\n * Released under the MIT license\n * https://github.com/node-cache/node-cache/blob/master/LICENSE\n *\n * Maintained by  (  )\n*/\n(function() {\n  var EventEmitter, NodeCache, clone,\n    splice = [].splice,\n    boundMethodCheck = function(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new Error('Bound instance method accessed before binding'); } },\n    indexOf = [].indexOf;\n\n  clone = require(\"clone\");\n\n  EventEmitter = require('events').EventEmitter;\n\n  // generate superclass\n  module.exports = NodeCache = (function() {\n    class NodeCache extends EventEmitter {\n      constructor(options = {}) {\n        super();\n        // ## get\n\n        // get a cached key and change the stats\n\n        // **Parameters:**\n\n        // * `key` ( String | Number ): cache key\n\n        // **Example:**\n\n        //\tmyCache.get \"myKey\", ( err, val )\n\n        this.get = this.get.bind(this);\n        // ## mget\n\n        // get multiple cached keys at once and change the stats\n\n        // **Parameters:**\n\n        // * `keys` ( String|Number[] ): an array of keys\n\n        // **Example:**\n\n        //\tmyCache.mget [ \"foo\", \"bar\" ]\n\n        this.mget = this.mget.bind(this);\n        // ## set\n\n        // set a cached key and change the stats\n\n        // **Parameters:**\n\n        // * `key` ( String | Number ): cache key\n        // * `value` ( Any ): A element to cache. If the option `option.forceString` is `true` the module trys to translate it to a serialized JSON\n        // * `[ ttl ]` ( Number | String ): ( optional ) The time to live in seconds.\n\n        // **Example:**\n\n        //\tmyCache.set \"myKey\", \"my_String Value\"\n\n        //\tmyCache.set \"myKey\", \"my_String Value\", 10\n\n        this.set = this.set.bind(this);\n        \n        // ## mset\n\n        // set multiple keys at once\n\n        // **Parameters:**\n\n        // * `keyValueSet` ( Object[] ): an array of object which includes key,value and ttl\n\n        // **Example:**\n\n        //\tmyCache.mset(\n        //\t\t[\n        //\t\t\t{\n        //\t\t\t\tkey: \"myKey\",\n        //\t\t\t\tval: \"myValue\",\n        //\t\t\t\tttl: [ttl in seconds]\n        //\t\t\t}\n        //\t\t])\n\n        this.mset = this.mset.bind(this);\n        // ## del\n\n        // remove keys\n\n        // **Parameters:**\n\n        // * `keys` ( String | Number | String|Number[] ): cache key to delete or a array of cache keys\n\n        // **Return**\n\n        // ( Number ): Number of deleted keys\n\n        // **Example:**\n\n        //\tmyCache.del( \"myKey\" )\n\n        this.del = this.del.bind(this);\n        // ## take\n\n        // get the cached value and remove the key from the cache.\n        // Equivalent to calling `get(key)` + `del(key)`.\n        // Useful for implementing `single use` mechanism such as OTP, where once a value is read it will become obsolete.\n\n        // **Parameters:**\n\n        // * `key` ( String | Number ): cache key\n\n        // **Example:**\n\n        //\tmyCache.take \"myKey\", ( err, val )\n\n        this.take = this.take.bind(this);\n        // ## ttl\n\n        // reset or redefine the ttl of a key. `ttl` = 0 means infinite lifetime.\n        // If `ttl` is not passed the default ttl is used.\n        // If `ttl` < 0 the key will be deleted.\n\n        // **Parameters:**\n\n        // * `key` ( String | Number ): cache key to reset the ttl value\n        // * `ttl` ( Number ): ( optional -> options.stdTTL || 0 ) The time to live in seconds\n\n        // **Return**\n\n        // ( Boolen ): key found and ttl set\n\n        // **Example:**\n\n        //\tmyCache.ttl( \"myKey\" ) // will set ttl to default ttl\n\n        //\tmyCache.ttl( \"myKey\", 1000 )\n\n        this.ttl = this.ttl.bind(this);\n        // ## getTtl\n\n        // receive the ttl of a key.\n\n        // **Parameters:**\n\n        // * `key` ( String | Number ): cache key to check the ttl value\n\n        // **Return**\n\n        // ( Number|undefined ): The timestamp in ms when the key will expire, 0 if it will never expire or undefined if it not exists\n\n        // **Example:**\n\n        //\tmyCache.getTtl( \"myKey\" )\n\n        this.getTtl = this.getTtl.bind(this);\n        // ## keys\n\n        // list all keys within this cache\n\n        // **Return**\n\n        // ( Array ): An array of all keys\n\n        // **Example:**\n\n        //     _keys = myCache.keys()\n\n        //     # [ \"foo\", \"bar\", \"fizz\", \"buzz\", \"anotherKeys\" ]\n\n        this.keys = this.keys.bind(this);\n        // ## has\n\n        // Check if a key is cached\n\n        // **Parameters:**\n\n        // * `key` ( String | Number ): cache key to check the ttl value\n\n        // **Return**\n\n        // ( Boolean ): A boolean that indicates if the key is cached\n\n        // **Example:**\n\n        //     _exists = myCache.has('myKey')\n\n        //     # true\n\n        this.has = this.has.bind(this);\n        // ## getStats\n\n        // get the stats\n\n        // **Parameters:**\n\n        // -\n\n        // **Return**\n\n        // ( Object ): Stats data\n\n        // **Example:**\n\n        //     myCache.getStats()\n        //     # {\n        //     # hits: 0,\n        //     # misses: 0,\n        //     # keys: 0,\n        //     # ksize: 0,\n        //     # vsize: 0\n        //     # }\n\n        this.getStats = this.getStats.bind(this);\n        // ## flushAll\n\n        // flush the whole data and reset the stats\n\n        // **Example:**\n\n        //     myCache.flushAll()\n\n        //     myCache.getStats()\n        //     # {\n        //     # hits: 0,\n        //     # misses: 0,\n        //     # keys: 0,\n        //     # ksize: 0,\n        //     # vsize: 0\n        //     # }\n\n        this.flushAll = this.flushAll.bind(this);\n        \n        // ## flushStats\n\n        // flush the stats and reset all counters to 0\n\n        // **Example:**\n\n        //     myCache.flushStats()\n\n        //     myCache.getStats()\n        //     # {\n        //     # hits: 0,\n        //     # misses: 0,\n        //     # keys: 0,\n        //     # ksize: 0,\n        //     # vsize: 0\n        //     # }\n\n        this.flushStats = this.flushStats.bind(this);\n        // ## close\n\n        // This will clear the interval timeout which is set on checkperiod option.\n\n        // **Example:**\n\n        //     myCache.close()\n\n        this.close = this.close.bind(this);\n        // ## _checkData\n\n        // internal housekeeping method.\n        // Check all the cached data and delete the invalid values\n        this._checkData = this._checkData.bind(this);\n        // ## _check\n\n        // internal method the check the value. If it's not valid any more delete it\n        this._check = this._check.bind(this);\n        // ## _isInvalidKey\n\n        // internal method to check if the type of a key is either `number` or `string`\n        this._isInvalidKey = this._isInvalidKey.bind(this);\n        // ## _wrap\n\n        // internal method to wrap a value in an object with some metadata\n        this._wrap = this._wrap.bind(this);\n        // ## _getValLength\n\n        // internal method to calculate the value length\n        this._getValLength = this._getValLength.bind(this);\n        // ## _error\n\n        // internal method to handle an error message\n        this._error = this._error.bind(this);\n        // ## _initErrors\n\n        // internal method to generate error message templates\n        this._initErrors = this._initErrors.bind(this);\n        this.options = options;\n        this._initErrors();\n        // container for cached data\n        this.data = {};\n        // module options\n        this.options = Object.assign({\n          // convert all elements to string\n          forceString: false,\n          // used standard size for calculating value size\n          objectValueSize: 80,\n          promiseValueSize: 80,\n          arrayValueSize: 40,\n          // standard time to live in seconds. 0 = infinity;\n          stdTTL: 0,\n          // time in seconds to check all data and delete expired keys\n          checkperiod: 600,\n          // en/disable cloning of variables. If `true` you'll get a copy of the cached variable. If `false` you'll save and get just the reference\n          useClones: true,\n          // whether values should be deleted automatically at expiration\n          deleteOnExpire: true,\n          // enable legacy callbacks\n          enableLegacyCallbacks: false,\n          // max amount of keys that are being stored\n          maxKeys: -1\n        }, this.options);\n        // generate functions with callbacks (legacy)\n        if (this.options.enableLegacyCallbacks) {\n          console.warn(\"WARNING! node-cache legacy callback support will drop in v6.x\");\n          [\"get\", \"mget\", \"set\", \"del\", \"ttl\", \"getTtl\", \"keys\", \"has\"].forEach((methodKey) => {\n            var oldMethod;\n            // reference real function\n            oldMethod = this[methodKey];\n            this[methodKey] = function(...args) {\n              var cb, err, ref, res;\n              ref = args, [...args] = ref, [cb] = splice.call(args, -1);\n              // return a callback if cb is defined and a function\n              if (typeof cb === \"function\") {\n                try {\n                  res = oldMethod(...args);\n                  cb(null, res);\n                } catch (error1) {\n                  err = error1;\n                  cb(err);\n                }\n              } else {\n                return oldMethod(...args, cb);\n              }\n            };\n          });\n        }\n        // statistics container\n        this.stats = {\n          hits: 0,\n          misses: 0,\n          keys: 0,\n          ksize: 0,\n          vsize: 0\n        };\n        // pre allocate valid keytypes array\n        this.validKeyTypes = [\"string\", \"number\"];\n        // initalize checking period\n        this._checkData();\n        return;\n      }\n\n      get(key) {\n        var _ret, err;\n        boundMethodCheck(this, NodeCache);\n        // handle invalid key types\n        if ((err = this._isInvalidKey(key)) != null) {\n          throw err;\n        }\n        // get data and incremet stats\n        if ((this.data[key] != null) && this._check(key, this.data[key])) {\n          this.stats.hits++;\n          _ret = this._unwrap(this.data[key]);\n          // return data\n          return _ret;\n        } else {\n          // if not found return undefined\n          this.stats.misses++;\n          return void 0;\n        }\n      }\n\n      mget(keys) {\n        var _err, err, i, key, len, oRet;\n        boundMethodCheck(this, NodeCache);\n        // convert a string to an array of one key\n        if (!Array.isArray(keys)) {\n          _err = this._error(\"EKEYSTYPE\");\n          throw _err;\n        }\n        // define return\n        oRet = {};\n        for (i = 0, len = keys.length; i < len; i++) {\n          key = keys[i];\n          // handle invalid key types\n          if ((err = this._isInvalidKey(key)) != null) {\n            throw err;\n          }\n          // get data and increment stats\n          if ((this.data[key] != null) && this._check(key, this.data[key])) {\n            this.stats.hits++;\n            oRet[key] = this._unwrap(this.data[key]);\n          } else {\n            // if not found return a error\n            this.stats.misses++;\n          }\n        }\n        // return all found keys\n        return oRet;\n      }\n\n      set(key, value, ttl) {\n        var _err, err, existent;\n        boundMethodCheck(this, NodeCache);\n        // check if cache is overflowing\n        if (this.options.maxKeys > -1 && this.stats.keys >= this.options.maxKeys) {\n          _err = this._error(\"ECACHEFULL\");\n          throw _err;\n        }\n        // force the data to string\n        if (this.options.forceString && !typeof value === \"string\") {\n          value = JSON.stringify(value);\n        }\n        // set default ttl if not passed\n        if (ttl == null) {\n          ttl = this.options.stdTTL;\n        }\n        // handle invalid key types\n        if ((err = this._isInvalidKey(key)) != null) {\n          throw err;\n        }\n        // internal helper variables\n        existent = false;\n        // remove existing data from stats\n        if (this.data[key]) {\n          existent = true;\n          this.stats.vsize -= this._getValLength(this._unwrap(this.data[key], false));\n        }\n        // set the value\n        this.data[key] = this._wrap(value, ttl);\n        this.stats.vsize += this._getValLength(value);\n        // only add the keys and key-size if the key is new\n        if (!existent) {\n          this.stats.ksize += this._getKeyLength(key);\n          this.stats.keys++;\n        }\n        this.emit(\"set\", key, value);\n        // return true\n        return true;\n      }\n\n      mset(keyValueSet) {\n        var _err, err, i, j, key, keyValuePair, len, len1, ttl, val;\n        boundMethodCheck(this, NodeCache);\n        // check if cache is overflowing\n        if (this.options.maxKeys > -1 && this.stats.keys + keyValueSet.length >= this.options.maxKeys) {\n          _err = this._error(\"ECACHEFULL\");\n          throw _err;\n        }\n\n// loop over keyValueSet to validate key and ttl\n        for (i = 0, len = keyValueSet.length; i < len; i++) {\n          keyValuePair = keyValueSet[i];\n          ({key, val, ttl} = keyValuePair);\n          // check if there is ttl and it's a number\n          if (ttl && typeof ttl !== \"number\") {\n            _err = this._error(\"ETTLTYPE\");\n            throw _err;\n          }\n          // handle invalid key types\n          if ((err = this._isInvalidKey(key)) != null) {\n            throw err;\n          }\n        }\n        for (j = 0, len1 = keyValueSet.length; j < len1; j++) {\n          keyValuePair = keyValueSet[j];\n          ({key, val, ttl} = keyValuePair);\n          this.set(key, val, ttl);\n        }\n        return true;\n      }\n\n      del(keys) {\n        var delCount, err, i, key, len, oldVal;\n        boundMethodCheck(this, NodeCache);\n        // convert keys to an array of itself\n        if (!Array.isArray(keys)) {\n          keys = [keys];\n        }\n        delCount = 0;\n        for (i = 0, len = keys.length; i < len; i++) {\n          key = keys[i];\n          // handle invalid key types\n          if ((err = this._isInvalidKey(key)) != null) {\n            throw err;\n          }\n          // only delete if existent\n          if (this.data[key] != null) {\n            // calc the stats\n            this.stats.vsize -= this._getValLength(this._unwrap(this.data[key], false));\n            this.stats.ksize -= this._getKeyLength(key);\n            this.stats.keys--;\n            delCount++;\n            // delete the value\n            oldVal = this.data[key];\n            delete this.data[key];\n            // return true\n            this.emit(\"del\", key, oldVal.v);\n          }\n        }\n        return delCount;\n      }\n\n      take(key) {\n        var _ret;\n        boundMethodCheck(this, NodeCache);\n        _ret = this.get(key);\n        if ((_ret != null)) {\n          this.del(key);\n        }\n        return _ret;\n      }\n\n      ttl(key, ttl) {\n        var err;\n        boundMethodCheck(this, NodeCache);\n        ttl || (ttl = this.options.stdTTL);\n        if (!key) {\n          return false;\n        }\n        // handle invalid key types\n        if ((err = this._isInvalidKey(key)) != null) {\n          throw err;\n        }\n        // check for existent data and update the ttl value\n        if ((this.data[key] != null) && this._check(key, this.data[key])) {\n          // if ttl < 0 delete the key. otherwise reset the value\n          if (ttl >= 0) {\n            this.data[key] = this._wrap(this.data[key].v, ttl, false);\n          } else {\n            this.del(key);\n          }\n          return true;\n        } else {\n          // return false if key has not been found\n          return false;\n        }\n      }\n\n      getTtl(key) {\n        var _ttl, err;\n        boundMethodCheck(this, NodeCache);\n        if (!key) {\n          return void 0;\n        }\n        // handle invalid key types\n        if ((err = this._isInvalidKey(key)) != null) {\n          throw err;\n        }\n        // check for existant data and update the ttl value\n        if ((this.data[key] != null) && this._check(key, this.data[key])) {\n          _ttl = this.data[key].t;\n          return _ttl;\n        } else {\n          // return undefined if key has not been found\n          return void 0;\n        }\n      }\n\n      keys() {\n        var _keys;\n        boundMethodCheck(this, NodeCache);\n        _keys = Object.keys(this.data);\n        return _keys;\n      }\n\n      has(key) {\n        var _exists;\n        boundMethodCheck(this, NodeCache);\n        _exists = (this.data[key] != null) && this._check(key, this.data[key]);\n        return _exists;\n      }\n\n      getStats() {\n        boundMethodCheck(this, NodeCache);\n        return this.stats;\n      }\n\n      flushAll(_startPeriod = true) {\n        boundMethodCheck(this, NodeCache);\n        // parameter just for testing\n\n        // set data empty\n        this.data = {};\n        // reset stats\n        this.stats = {\n          hits: 0,\n          misses: 0,\n          keys: 0,\n          ksize: 0,\n          vsize: 0\n        };\n        // reset check period\n        this._killCheckPeriod();\n        this._checkData(_startPeriod);\n        this.emit(\"flush\");\n      }\n\n      flushStats() {\n        boundMethodCheck(this, NodeCache);\n        // reset stats\n        this.stats = {\n          hits: 0,\n          misses: 0,\n          keys: 0,\n          ksize: 0,\n          vsize: 0\n        };\n        this.emit(\"flush_stats\");\n      }\n\n      close() {\n        boundMethodCheck(this, NodeCache);\n        this._killCheckPeriod();\n      }\n\n      _checkData(startPeriod = true) {\n        var key, ref, value;\n        boundMethodCheck(this, NodeCache);\n        ref = this.data;\n        // run the housekeeping method\n        for (key in ref) {\n          value = ref[key];\n          this._check(key, value);\n        }\n        if (startPeriod && this.options.checkperiod > 0) {\n          this.checkTimeout = setTimeout(this._checkData, this.options.checkperiod * 1000, startPeriod);\n          if ((this.checkTimeout != null) && (this.checkTimeout.unref != null)) {\n            this.checkTimeout.unref();\n          }\n        }\n      }\n\n      // ## _killCheckPeriod\n\n      // stop the checkdata period. Only needed to abort the script in testing mode.\n      _killCheckPeriod() {\n        if (this.checkTimeout != null) {\n          return clearTimeout(this.checkTimeout);\n        }\n      }\n\n      _check(key, data) {\n        var _retval;\n        boundMethodCheck(this, NodeCache);\n        _retval = true;\n        // data is invalid if the ttl is too old and is not 0\n        // console.log data.t < Date.now(), data.t, Date.now()\n        if (data.t !== 0 && data.t < Date.now()) {\n          if (this.options.deleteOnExpire) {\n            _retval = false;\n            this.del(key);\n          }\n          this.emit(\"expired\", key, this._unwrap(data));\n        }\n        return _retval;\n      }\n\n      _isInvalidKey(key) {\n        var ref;\n        boundMethodCheck(this, NodeCache);\n        if (ref = typeof key, indexOf.call(this.validKeyTypes, ref) < 0) {\n          return this._error(\"EKEYTYPE\", {\n            type: typeof key\n          });\n        }\n      }\n\n      _wrap(value, ttl, asClone = true) {\n        var livetime, now, oReturn, ttlMultiplicator;\n        boundMethodCheck(this, NodeCache);\n        if (!this.options.useClones) {\n          asClone = false;\n        }\n        // define the time to live\n        now = Date.now();\n        livetime = 0;\n        ttlMultiplicator = 1000;\n        // use given ttl\n        if (ttl === 0) {\n          livetime = 0;\n        } else if (ttl) {\n          livetime = now + (ttl * ttlMultiplicator);\n        } else {\n          // use standard ttl\n          if (this.options.stdTTL === 0) {\n            livetime = this.options.stdTTL;\n          } else {\n            livetime = now + (this.options.stdTTL * ttlMultiplicator);\n          }\n        }\n        // return the wrapped value\n        return oReturn = {\n          t: livetime,\n          v: asClone ? clone(value) : value\n        };\n      }\n\n      // ## _unwrap\n\n      // internal method to extract get the value out of the wrapped value\n      _unwrap(value, asClone = true) {\n        if (!this.options.useClones) {\n          asClone = false;\n        }\n        if (value.v != null) {\n          if (asClone) {\n            return clone(value.v);\n          } else {\n            return value.v;\n          }\n        }\n        return null;\n      }\n\n      // ## _getKeyLength\n\n      // internal method the calculate the key length\n      _getKeyLength(key) {\n        return key.toString().length;\n      }\n\n      _getValLength(value) {\n        boundMethodCheck(this, NodeCache);\n        if (typeof value === \"string\") {\n          // if the value is a String get the real length\n          return value.length;\n        } else if (this.options.forceString) {\n          // force string if it's defined and not passed\n          return JSON.stringify(value).length;\n        } else if (Array.isArray(value)) {\n          // if the data is an Array multiply each element with a defined default length\n          return this.options.arrayValueSize * value.length;\n        } else if (typeof value === \"number\") {\n          return 8;\n        } else if (typeof (value != null ? value.then : void 0) === \"function\") {\n          // if the data is a Promise, use defined default\n          // (can't calculate actual/resolved value size synchronously)\n          return this.options.promiseValueSize;\n        } else if (typeof Buffer !== \"undefined\" && Buffer !== null ? Buffer.isBuffer(value) : void 0) {\n          return value.length;\n        } else if ((value != null) && typeof value === \"object\") {\n          // if the data is an Object multiply each element with a defined default length\n          return this.options.objectValueSize * Object.keys(value).length;\n        } else if (typeof value === \"boolean\") {\n          return 8;\n        } else {\n          // default fallback\n          return 0;\n        }\n      }\n\n      _error(type, data = {}) {\n        var error;\n        boundMethodCheck(this, NodeCache);\n        // generate the error object\n        error = new Error();\n        error.name = type;\n        error.errorcode = type;\n        error.message = this.ERRORS[type] != null ? this.ERRORS[type](data) : \"-\";\n        error.data = data;\n        // return the error object\n        return error;\n      }\n\n      _initErrors() {\n        var _errMsg, _errT, ref;\n        boundMethodCheck(this, NodeCache);\n        this.ERRORS = {};\n        ref = this._ERRORS;\n        for (_errT in ref) {\n          _errMsg = ref[_errT];\n          this.ERRORS[_errT] = this.createErrorMessage(_errMsg);\n        }\n      }\n\n      createErrorMessage(errMsg) {\n        return function(args) {\n          return errMsg.replace(\"__key\", args.type);\n        };\n      }\n\n    };\n\n    NodeCache.prototype._ERRORS = {\n      \"ENOTFOUND\": \"Key `__key` not found\",\n      \"ECACHEFULL\": \"Cache max keys amount exceeded\",\n      \"EKEYTYPE\": \"The key argument has to be of type `string` or `number`. Found: `__key`\",\n      \"EKEYSTYPE\": \"The keys argument has to be an array.\",\n      \"ETTLTYPE\": \"The ttl argument has to be a number.\"\n    };\n\n    return NodeCache;\n\n  }).call(this);\n\n}).call(this);\n","/*\n * node-cache 5.1.2 ( 2020-07-01 )\n * https://github.com/node-cache/node-cache\n *\n * Released under the MIT license\n * https://github.com/node-cache/node-cache/blob/master/LICENSE\n *\n * Maintained by  (  )\n*/\n(function() {\n  var exports;\n\n  exports = module.exports = require('./lib/node_cache');\n\n  exports.version = '5.1.2';\n\n}).call(this);\n","\"use strict\";\n\nvar conversions = {};\nmodule.exports = conversions;\n\nfunction sign(x) {\n    return x < 0 ? -1 : 1;\n}\n\nfunction evenRound(x) {\n    // Round x to the nearest integer, choosing the even integer if it lies halfway between two.\n    if ((x % 1) === 0.5 && (x & 1) === 0) { // [even number].5; round down (i.e. floor)\n        return Math.floor(x);\n    } else {\n        return Math.round(x);\n    }\n}\n\nfunction createNumberConversion(bitLength, typeOpts) {\n    if (!typeOpts.unsigned) {\n        --bitLength;\n    }\n    const lowerBound = typeOpts.unsigned ? 0 : -Math.pow(2, bitLength);\n    const upperBound = Math.pow(2, bitLength) - 1;\n\n    const moduloVal = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength) : Math.pow(2, bitLength);\n    const moduloBound = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength - 1) : Math.pow(2, bitLength - 1);\n\n    return function(V, opts) {\n        if (!opts) opts = {};\n\n        let x = +V;\n\n        if (opts.enforceRange) {\n            if (!Number.isFinite(x)) {\n                throw new TypeError(\"Argument is not a finite number\");\n            }\n\n            x = sign(x) * Math.floor(Math.abs(x));\n            if (x < lowerBound || x > upperBound) {\n                throw new TypeError(\"Argument is not in byte range\");\n            }\n\n            return x;\n        }\n\n        if (!isNaN(x) && opts.clamp) {\n            x = evenRound(x);\n\n            if (x < lowerBound) x = lowerBound;\n            if (x > upperBound) x = upperBound;\n            return x;\n        }\n\n        if (!Number.isFinite(x) || x === 0) {\n            return 0;\n        }\n\n        x = sign(x) * Math.floor(Math.abs(x));\n        x = x % moduloVal;\n\n        if (!typeOpts.unsigned && x >= moduloBound) {\n            return x - moduloVal;\n        } else if (typeOpts.unsigned) {\n            if (x < 0) {\n              x += moduloVal;\n            } else if (x === -0) { // don't return negative zero\n              return 0;\n            }\n        }\n\n        return x;\n    }\n}\n\nconversions[\"void\"] = function () {\n    return undefined;\n};\n\nconversions[\"boolean\"] = function (val) {\n    return !!val;\n};\n\nconversions[\"byte\"] = createNumberConversion(8, { unsigned: false });\nconversions[\"octet\"] = createNumberConversion(8, { unsigned: true });\n\nconversions[\"short\"] = createNumberConversion(16, { unsigned: false });\nconversions[\"unsigned short\"] = createNumberConversion(16, { unsigned: true });\n\nconversions[\"long\"] = createNumberConversion(32, { unsigned: false });\nconversions[\"unsigned long\"] = createNumberConversion(32, { unsigned: true });\n\nconversions[\"long long\"] = createNumberConversion(32, { unsigned: false, moduloBitLength: 64 });\nconversions[\"unsigned long long\"] = createNumberConversion(32, { unsigned: true, moduloBitLength: 64 });\n\nconversions[\"double\"] = function (V) {\n    const x = +V;\n\n    if (!Number.isFinite(x)) {\n        throw new TypeError(\"Argument is not a finite floating-point value\");\n    }\n\n    return x;\n};\n\nconversions[\"unrestricted double\"] = function (V) {\n    const x = +V;\n\n    if (isNaN(x)) {\n        throw new TypeError(\"Argument is NaN\");\n    }\n\n    return x;\n};\n\n// not quite valid, but good enough for JS\nconversions[\"float\"] = conversions[\"double\"];\nconversions[\"unrestricted float\"] = conversions[\"unrestricted double\"];\n\nconversions[\"DOMString\"] = function (V, opts) {\n    if (!opts) opts = {};\n\n    if (opts.treatNullAsEmptyString && V === null) {\n        return \"\";\n    }\n\n    return String(V);\n};\n\nconversions[\"ByteString\"] = function (V, opts) {\n    const x = String(V);\n    let c = undefined;\n    for (let i = 0; (c = x.codePointAt(i)) !== undefined; ++i) {\n        if (c > 255) {\n            throw new TypeError(\"Argument is not a valid bytestring\");\n        }\n    }\n\n    return x;\n};\n\nconversions[\"USVString\"] = function (V) {\n    const S = String(V);\n    const n = S.length;\n    const U = [];\n    for (let i = 0; i < n; ++i) {\n        const c = S.charCodeAt(i);\n        if (c < 0xD800 || c > 0xDFFF) {\n            U.push(String.fromCodePoint(c));\n        } else if (0xDC00 <= c && c <= 0xDFFF) {\n            U.push(String.fromCodePoint(0xFFFD));\n        } else {\n            if (i === n - 1) {\n                U.push(String.fromCodePoint(0xFFFD));\n            } else {\n                const d = S.charCodeAt(i + 1);\n                if (0xDC00 <= d && d <= 0xDFFF) {\n                    const a = c & 0x3FF;\n                    const b = d & 0x3FF;\n                    U.push(String.fromCodePoint((2 << 15) + (2 << 9) * a + b));\n                    ++i;\n                } else {\n                    U.push(String.fromCodePoint(0xFFFD));\n                }\n            }\n        }\n    }\n\n    return U.join('');\n};\n\nconversions[\"Date\"] = function (V, opts) {\n    if (!(V instanceof Date)) {\n        throw new TypeError(\"Argument is not a Date object\");\n    }\n    if (isNaN(V)) {\n        return undefined;\n    }\n\n    return V;\n};\n\nconversions[\"RegExp\"] = function (V, opts) {\n    if (!(V instanceof RegExp)) {\n        V = new RegExp(V);\n    }\n\n    return V;\n};\n","\"use strict\";\n\nmodule.exports.mixin = function mixin(target, source) {\n  const keys = Object.getOwnPropertyNames(source);\n  for (let i = 0; i < keys.length; ++i) {\n    Object.defineProperty(target, keys[i], Object.getOwnPropertyDescriptor(source, keys[i]));\n  }\n};\n\nmodule.exports.wrapperSymbol = Symbol(\"wrapper\");\nmodule.exports.implSymbol = Symbol(\"impl\");\n\nmodule.exports.wrapperForImpl = function (impl) {\n  return impl[module.exports.wrapperSymbol];\n};\n\nmodule.exports.implForWrapper = function (wrapper) {\n  return wrapper[module.exports.implSymbol];\n};\n\n","\"use strict\";\n\nvar punycode = require(\"punycode\");\nvar mappingTable = require(\"./lib/mappingTable.json\");\n\nvar PROCESSING_OPTIONS = {\n  TRANSITIONAL: 0,\n  NONTRANSITIONAL: 1\n};\n\nfunction normalize(str) { // fix bug in v8\n  return str.split('\\u0000').map(function (s) { return s.normalize('NFC'); }).join('\\u0000');\n}\n\nfunction findStatus(val) {\n  var start = 0;\n  var end = mappingTable.length - 1;\n\n  while (start <= end) {\n    var mid = Math.floor((start + end) / 2);\n\n    var target = mappingTable[mid];\n    if (target[0][0] <= val && target[0][1] >= val) {\n      return target;\n    } else if (target[0][0] > val) {\n      end = mid - 1;\n    } else {\n      start = mid + 1;\n    }\n  }\n\n  return null;\n}\n\nvar regexAstralSymbols = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n\nfunction countSymbols(string) {\n  return string\n    // replace every surrogate pair with a BMP symbol\n    .replace(regexAstralSymbols, '_')\n    // then get the length\n    .length;\n}\n\nfunction mapChars(domain_name, useSTD3, processing_option) {\n  var hasError = false;\n  var processed = \"\";\n\n  var len = countSymbols(domain_name);\n  for (var i = 0; i < len; ++i) {\n    var codePoint = domain_name.codePointAt(i);\n    var status = findStatus(codePoint);\n\n    switch (status[1]) {\n      case \"disallowed\":\n        hasError = true;\n        processed += String.fromCodePoint(codePoint);\n        break;\n      case \"ignored\":\n        break;\n      case \"mapped\":\n        processed += String.fromCodePoint.apply(String, status[2]);\n        break;\n      case \"deviation\":\n        if (processing_option === PROCESSING_OPTIONS.TRANSITIONAL) {\n          processed += String.fromCodePoint.apply(String, status[2]);\n        } else {\n          processed += String.fromCodePoint(codePoint);\n        }\n        break;\n      case \"valid\":\n        processed += String.fromCodePoint(codePoint);\n        break;\n      case \"disallowed_STD3_mapped\":\n        if (useSTD3) {\n          hasError = true;\n          processed += String.fromCodePoint(codePoint);\n        } else {\n          processed += String.fromCodePoint.apply(String, status[2]);\n        }\n        break;\n      case \"disallowed_STD3_valid\":\n        if (useSTD3) {\n          hasError = true;\n        }\n\n        processed += String.fromCodePoint(codePoint);\n        break;\n    }\n  }\n\n  return {\n    string: processed,\n    error: hasError\n  };\n}\n\nvar combiningMarksRegex = /[\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08E4-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B62\\u0B63\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0C00-\\u0C03\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0D01-\\u0D03\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D82\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F\\u109A-\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u180B-\\u180D\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u19B0-\\u19C0\\u19C8\\u19C9\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F\\u1AB0-\\u1ABE\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF2-\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF5\\u1DFC-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA880\\uA881\\uA8B4-\\uA8C4\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9E5\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2D]|\\uD800[\\uDDFD\\uDEE0\\uDF76-\\uDF7A]|\\uD802[\\uDE01-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE0F\\uDE38-\\uDE3A\\uDE3F\\uDEE5\\uDEE6]|\\uD804[\\uDC00-\\uDC02\\uDC38-\\uDC46\\uDC7F-\\uDC82\\uDCB0-\\uDCBA\\uDD00-\\uDD02\\uDD27-\\uDD34\\uDD73\\uDD80-\\uDD82\\uDDB3-\\uDDC0\\uDE2C-\\uDE37\\uDEDF-\\uDEEA\\uDF01-\\uDF03\\uDF3C\\uDF3E-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF57\\uDF62\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDCB0-\\uDCC3\\uDDAF-\\uDDB5\\uDDB8-\\uDDC0\\uDE30-\\uDE40\\uDEAB-\\uDEB7]|\\uD81A[\\uDEF0-\\uDEF4\\uDF30-\\uDF36]|\\uD81B[\\uDF51-\\uDF7E\\uDF8F-\\uDF92]|\\uD82F[\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD83A[\\uDCD0-\\uDCD6]|\\uDB40[\\uDD00-\\uDDEF]/;\n\nfunction validateLabel(label, processing_option) {\n  if (label.substr(0, 4) === \"xn--\") {\n    label = punycode.toUnicode(label);\n    processing_option = PROCESSING_OPTIONS.NONTRANSITIONAL;\n  }\n\n  var error = false;\n\n  if (normalize(label) !== label ||\n      (label[3] === \"-\" && label[4] === \"-\") ||\n      label[0] === \"-\" || label[label.length - 1] === \"-\" ||\n      label.indexOf(\".\") !== -1 ||\n      label.search(combiningMarksRegex) === 0) {\n    error = true;\n  }\n\n  var len = countSymbols(label);\n  for (var i = 0; i < len; ++i) {\n    var status = findStatus(label.codePointAt(i));\n    if ((processing === PROCESSING_OPTIONS.TRANSITIONAL && status[1] !== \"valid\") ||\n        (processing === PROCESSING_OPTIONS.NONTRANSITIONAL &&\n         status[1] !== \"valid\" && status[1] !== \"deviation\")) {\n      error = true;\n      break;\n    }\n  }\n\n  return {\n    label: label,\n    error: error\n  };\n}\n\nfunction processing(domain_name, useSTD3, processing_option) {\n  var result = mapChars(domain_name, useSTD3, processing_option);\n  result.string = normalize(result.string);\n\n  var labels = result.string.split(\".\");\n  for (var i = 0; i < labels.length; ++i) {\n    try {\n      var validation = validateLabel(labels[i]);\n      labels[i] = validation.label;\n      result.error = result.error || validation.error;\n    } catch(e) {\n      result.error = true;\n    }\n  }\n\n  return {\n    string: labels.join(\".\"),\n    error: result.error\n  };\n}\n\nmodule.exports.toASCII = function(domain_name, useSTD3, processing_option, verifyDnsLength) {\n  var result = processing(domain_name, useSTD3, processing_option);\n  var labels = result.string.split(\".\");\n  labels = labels.map(function(l) {\n    try {\n      return punycode.toASCII(l);\n    } catch(e) {\n      result.error = true;\n      return l;\n    }\n  });\n\n  if (verifyDnsLength) {\n    var total = labels.slice(0, labels.length - 1).join(\".\").length;\n    if (total.length > 253 || total.length === 0) {\n      result.error = true;\n    }\n\n    for (var i=0; i < labels.length; ++i) {\n      if (labels.length > 63 || labels.length === 0) {\n        result.error = true;\n        break;\n      }\n    }\n  }\n\n  if (result.error) return null;\n  return labels.join(\".\");\n};\n\nmodule.exports.toUnicode = function(domain_name, useSTD3) {\n  var result = processing(domain_name, useSTD3, PROCESSING_OPTIONS.NONTRANSITIONAL);\n\n  return {\n    domain: result.string,\n    error: result.error\n  };\n};\n\nmodule.exports.PROCESSING_OPTIONS = PROCESSING_OPTIONS;\n","\"use strict\";\r\nconst punycode = require(\"punycode\");\r\nconst tr46 = require(\"tr46\");\r\n\r\nconst specialSchemes = {\r\n  ftp: 21,\r\n  file: null,\r\n  gopher: 70,\r\n  http: 80,\r\n  https: 443,\r\n  ws: 80,\r\n  wss: 443\r\n};\r\n\r\nconst failure = Symbol(\"failure\");\r\n\r\nfunction countSymbols(str) {\r\n  return punycode.ucs2.decode(str).length;\r\n}\r\n\r\nfunction at(input, idx) {\r\n  const c = input[idx];\r\n  return isNaN(c) ? undefined : String.fromCodePoint(c);\r\n}\r\n\r\nfunction isASCIIDigit(c) {\r\n  return c >= 0x30 && c <= 0x39;\r\n}\r\n\r\nfunction isASCIIAlpha(c) {\r\n  return (c >= 0x41 && c <= 0x5A) || (c >= 0x61 && c <= 0x7A);\r\n}\r\n\r\nfunction isASCIIAlphanumeric(c) {\r\n  return isASCIIAlpha(c) || isASCIIDigit(c);\r\n}\r\n\r\nfunction isASCIIHex(c) {\r\n  return isASCIIDigit(c) || (c >= 0x41 && c <= 0x46) || (c >= 0x61 && c <= 0x66);\r\n}\r\n\r\nfunction isSingleDot(buffer) {\r\n  return buffer === \".\" || buffer.toLowerCase() === \"%2e\";\r\n}\r\n\r\nfunction isDoubleDot(buffer) {\r\n  buffer = buffer.toLowerCase();\r\n  return buffer === \"..\" || buffer === \"%2e.\" || buffer === \".%2e\" || buffer === \"%2e%2e\";\r\n}\r\n\r\nfunction isWindowsDriveLetterCodePoints(cp1, cp2) {\r\n  return isASCIIAlpha(cp1) && (cp2 === 58 || cp2 === 124);\r\n}\r\n\r\nfunction isWindowsDriveLetterString(string) {\r\n  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && (string[1] === \":\" || string[1] === \"|\");\r\n}\r\n\r\nfunction isNormalizedWindowsDriveLetterString(string) {\r\n  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && string[1] === \":\";\r\n}\r\n\r\nfunction containsForbiddenHostCodePoint(string) {\r\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|%|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\r\n}\r\n\r\nfunction containsForbiddenHostCodePointExcludingPercent(string) {\r\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\r\n}\r\n\r\nfunction isSpecialScheme(scheme) {\r\n  return specialSchemes[scheme] !== undefined;\r\n}\r\n\r\nfunction isSpecial(url) {\r\n  return isSpecialScheme(url.scheme);\r\n}\r\n\r\nfunction defaultPort(scheme) {\r\n  return specialSchemes[scheme];\r\n}\r\n\r\nfunction percentEncode(c) {\r\n  let hex = c.toString(16).toUpperCase();\r\n  if (hex.length === 1) {\r\n    hex = \"0\" + hex;\r\n  }\r\n\r\n  return \"%\" + hex;\r\n}\r\n\r\nfunction utf8PercentEncode(c) {\r\n  const buf = new Buffer(c);\r\n\r\n  let str = \"\";\r\n\r\n  for (let i = 0; i < buf.length; ++i) {\r\n    str += percentEncode(buf[i]);\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\nfunction utf8PercentDecode(str) {\r\n  const input = new Buffer(str);\r\n  const output = [];\r\n  for (let i = 0; i < input.length; ++i) {\r\n    if (input[i] !== 37) {\r\n      output.push(input[i]);\r\n    } else if (input[i] === 37 && isASCIIHex(input[i + 1]) && isASCIIHex(input[i + 2])) {\r\n      output.push(parseInt(input.slice(i + 1, i + 3).toString(), 16));\r\n      i += 2;\r\n    } else {\r\n      output.push(input[i]);\r\n    }\r\n  }\r\n  return new Buffer(output).toString();\r\n}\r\n\r\nfunction isC0ControlPercentEncode(c) {\r\n  return c <= 0x1F || c > 0x7E;\r\n}\r\n\r\nconst extraPathPercentEncodeSet = new Set([32, 34, 35, 60, 62, 63, 96, 123, 125]);\r\nfunction isPathPercentEncode(c) {\r\n  return isC0ControlPercentEncode(c) || extraPathPercentEncodeSet.has(c);\r\n}\r\n\r\nconst extraUserinfoPercentEncodeSet =\r\n  new Set([47, 58, 59, 61, 64, 91, 92, 93, 94, 124]);\r\nfunction isUserinfoPercentEncode(c) {\r\n  return isPathPercentEncode(c) || extraUserinfoPercentEncodeSet.has(c);\r\n}\r\n\r\nfunction percentEncodeChar(c, encodeSetPredicate) {\r\n  const cStr = String.fromCodePoint(c);\r\n\r\n  if (encodeSetPredicate(c)) {\r\n    return utf8PercentEncode(cStr);\r\n  }\r\n\r\n  return cStr;\r\n}\r\n\r\nfunction parseIPv4Number(input) {\r\n  let R = 10;\r\n\r\n  if (input.length >= 2 && input.charAt(0) === \"0\" && input.charAt(1).toLowerCase() === \"x\") {\r\n    input = input.substring(2);\r\n    R = 16;\r\n  } else if (input.length >= 2 && input.charAt(0) === \"0\") {\r\n    input = input.substring(1);\r\n    R = 8;\r\n  }\r\n\r\n  if (input === \"\") {\r\n    return 0;\r\n  }\r\n\r\n  const regex = R === 10 ? /[^0-9]/ : (R === 16 ? /[^0-9A-Fa-f]/ : /[^0-7]/);\r\n  if (regex.test(input)) {\r\n    return failure;\r\n  }\r\n\r\n  return parseInt(input, R);\r\n}\r\n\r\nfunction parseIPv4(input) {\r\n  const parts = input.split(\".\");\r\n  if (parts[parts.length - 1] === \"\") {\r\n    if (parts.length > 1) {\r\n      parts.pop();\r\n    }\r\n  }\r\n\r\n  if (parts.length > 4) {\r\n    return input;\r\n  }\r\n\r\n  const numbers = [];\r\n  for (const part of parts) {\r\n    if (part === \"\") {\r\n      return input;\r\n    }\r\n    const n = parseIPv4Number(part);\r\n    if (n === failure) {\r\n      return input;\r\n    }\r\n\r\n    numbers.push(n);\r\n  }\r\n\r\n  for (let i = 0; i < numbers.length - 1; ++i) {\r\n    if (numbers[i] > 255) {\r\n      return failure;\r\n    }\r\n  }\r\n  if (numbers[numbers.length - 1] >= Math.pow(256, 5 - numbers.length)) {\r\n    return failure;\r\n  }\r\n\r\n  let ipv4 = numbers.pop();\r\n  let counter = 0;\r\n\r\n  for (const n of numbers) {\r\n    ipv4 += n * Math.pow(256, 3 - counter);\r\n    ++counter;\r\n  }\r\n\r\n  return ipv4;\r\n}\r\n\r\nfunction serializeIPv4(address) {\r\n  let output = \"\";\r\n  let n = address;\r\n\r\n  for (let i = 1; i <= 4; ++i) {\r\n    output = String(n % 256) + output;\r\n    if (i !== 4) {\r\n      output = \".\" + output;\r\n    }\r\n    n = Math.floor(n / 256);\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction parseIPv6(input) {\r\n  const address = [0, 0, 0, 0, 0, 0, 0, 0];\r\n  let pieceIndex = 0;\r\n  let compress = null;\r\n  let pointer = 0;\r\n\r\n  input = punycode.ucs2.decode(input);\r\n\r\n  if (input[pointer] === 58) {\r\n    if (input[pointer + 1] !== 58) {\r\n      return failure;\r\n    }\r\n\r\n    pointer += 2;\r\n    ++pieceIndex;\r\n    compress = pieceIndex;\r\n  }\r\n\r\n  while (pointer < input.length) {\r\n    if (pieceIndex === 8) {\r\n      return failure;\r\n    }\r\n\r\n    if (input[pointer] === 58) {\r\n      if (compress !== null) {\r\n        return failure;\r\n      }\r\n      ++pointer;\r\n      ++pieceIndex;\r\n      compress = pieceIndex;\r\n      continue;\r\n    }\r\n\r\n    let value = 0;\r\n    let length = 0;\r\n\r\n    while (length < 4 && isASCIIHex(input[pointer])) {\r\n      value = value * 0x10 + parseInt(at(input, pointer), 16);\r\n      ++pointer;\r\n      ++length;\r\n    }\r\n\r\n    if (input[pointer] === 46) {\r\n      if (length === 0) {\r\n        return failure;\r\n      }\r\n\r\n      pointer -= length;\r\n\r\n      if (pieceIndex > 6) {\r\n        return failure;\r\n      }\r\n\r\n      let numbersSeen = 0;\r\n\r\n      while (input[pointer] !== undefined) {\r\n        let ipv4Piece = null;\r\n\r\n        if (numbersSeen > 0) {\r\n          if (input[pointer] === 46 && numbersSeen < 4) {\r\n            ++pointer;\r\n          } else {\r\n            return failure;\r\n          }\r\n        }\r\n\r\n        if (!isASCIIDigit(input[pointer])) {\r\n          return failure;\r\n        }\r\n\r\n        while (isASCIIDigit(input[pointer])) {\r\n          const number = parseInt(at(input, pointer));\r\n          if (ipv4Piece === null) {\r\n            ipv4Piece = number;\r\n          } else if (ipv4Piece === 0) {\r\n            return failure;\r\n          } else {\r\n            ipv4Piece = ipv4Piece * 10 + number;\r\n          }\r\n          if (ipv4Piece > 255) {\r\n            return failure;\r\n          }\r\n          ++pointer;\r\n        }\r\n\r\n        address[pieceIndex] = address[pieceIndex] * 0x100 + ipv4Piece;\r\n\r\n        ++numbersSeen;\r\n\r\n        if (numbersSeen === 2 || numbersSeen === 4) {\r\n          ++pieceIndex;\r\n        }\r\n      }\r\n\r\n      if (numbersSeen !== 4) {\r\n        return failure;\r\n      }\r\n\r\n      break;\r\n    } else if (input[pointer] === 58) {\r\n      ++pointer;\r\n      if (input[pointer] === undefined) {\r\n        return failure;\r\n      }\r\n    } else if (input[pointer] !== undefined) {\r\n      return failure;\r\n    }\r\n\r\n    address[pieceIndex] = value;\r\n    ++pieceIndex;\r\n  }\r\n\r\n  if (compress !== null) {\r\n    let swaps = pieceIndex - compress;\r\n    pieceIndex = 7;\r\n    while (pieceIndex !== 0 && swaps > 0) {\r\n      const temp = address[compress + swaps - 1];\r\n      address[compress + swaps - 1] = address[pieceIndex];\r\n      address[pieceIndex] = temp;\r\n      --pieceIndex;\r\n      --swaps;\r\n    }\r\n  } else if (compress === null && pieceIndex !== 8) {\r\n    return failure;\r\n  }\r\n\r\n  return address;\r\n}\r\n\r\nfunction serializeIPv6(address) {\r\n  let output = \"\";\r\n  const seqResult = findLongestZeroSequence(address);\r\n  const compress = seqResult.idx;\r\n  let ignore0 = false;\r\n\r\n  for (let pieceIndex = 0; pieceIndex <= 7; ++pieceIndex) {\r\n    if (ignore0 && address[pieceIndex] === 0) {\r\n      continue;\r\n    } else if (ignore0) {\r\n      ignore0 = false;\r\n    }\r\n\r\n    if (compress === pieceIndex) {\r\n      const separator = pieceIndex === 0 ? \"::\" : \":\";\r\n      output += separator;\r\n      ignore0 = true;\r\n      continue;\r\n    }\r\n\r\n    output += address[pieceIndex].toString(16);\r\n\r\n    if (pieceIndex !== 7) {\r\n      output += \":\";\r\n    }\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction parseHost(input, isSpecialArg) {\r\n  if (input[0] === \"[\") {\r\n    if (input[input.length - 1] !== \"]\") {\r\n      return failure;\r\n    }\r\n\r\n    return parseIPv6(input.substring(1, input.length - 1));\r\n  }\r\n\r\n  if (!isSpecialArg) {\r\n    return parseOpaqueHost(input);\r\n  }\r\n\r\n  const domain = utf8PercentDecode(input);\r\n  const asciiDomain = tr46.toASCII(domain, false, tr46.PROCESSING_OPTIONS.NONTRANSITIONAL, false);\r\n  if (asciiDomain === null) {\r\n    return failure;\r\n  }\r\n\r\n  if (containsForbiddenHostCodePoint(asciiDomain)) {\r\n    return failure;\r\n  }\r\n\r\n  const ipv4Host = parseIPv4(asciiDomain);\r\n  if (typeof ipv4Host === \"number\" || ipv4Host === failure) {\r\n    return ipv4Host;\r\n  }\r\n\r\n  return asciiDomain;\r\n}\r\n\r\nfunction parseOpaqueHost(input) {\r\n  if (containsForbiddenHostCodePointExcludingPercent(input)) {\r\n    return failure;\r\n  }\r\n\r\n  let output = \"\";\r\n  const decoded = punycode.ucs2.decode(input);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    output += percentEncodeChar(decoded[i], isC0ControlPercentEncode);\r\n  }\r\n  return output;\r\n}\r\n\r\nfunction findLongestZeroSequence(arr) {\r\n  let maxIdx = null;\r\n  let maxLen = 1; // only find elements > 1\r\n  let currStart = null;\r\n  let currLen = 0;\r\n\r\n  for (let i = 0; i < arr.length; ++i) {\r\n    if (arr[i] !== 0) {\r\n      if (currLen > maxLen) {\r\n        maxIdx = currStart;\r\n        maxLen = currLen;\r\n      }\r\n\r\n      currStart = null;\r\n      currLen = 0;\r\n    } else {\r\n      if (currStart === null) {\r\n        currStart = i;\r\n      }\r\n      ++currLen;\r\n    }\r\n  }\r\n\r\n  // if trailing zeros\r\n  if (currLen > maxLen) {\r\n    maxIdx = currStart;\r\n    maxLen = currLen;\r\n  }\r\n\r\n  return {\r\n    idx: maxIdx,\r\n    len: maxLen\r\n  };\r\n}\r\n\r\nfunction serializeHost(host) {\r\n  if (typeof host === \"number\") {\r\n    return serializeIPv4(host);\r\n  }\r\n\r\n  // IPv6 serializer\r\n  if (host instanceof Array) {\r\n    return \"[\" + serializeIPv6(host) + \"]\";\r\n  }\r\n\r\n  return host;\r\n}\r\n\r\nfunction trimControlChars(url) {\r\n  return url.replace(/^[\\u0000-\\u001F\\u0020]+|[\\u0000-\\u001F\\u0020]+$/g, \"\");\r\n}\r\n\r\nfunction trimTabAndNewline(url) {\r\n  return url.replace(/\\u0009|\\u000A|\\u000D/g, \"\");\r\n}\r\n\r\nfunction shortenPath(url) {\r\n  const path = url.path;\r\n  if (path.length === 0) {\r\n    return;\r\n  }\r\n  if (url.scheme === \"file\" && path.length === 1 && isNormalizedWindowsDriveLetter(path[0])) {\r\n    return;\r\n  }\r\n\r\n  path.pop();\r\n}\r\n\r\nfunction includesCredentials(url) {\r\n  return url.username !== \"\" || url.password !== \"\";\r\n}\r\n\r\nfunction cannotHaveAUsernamePasswordPort(url) {\r\n  return url.host === null || url.host === \"\" || url.cannotBeABaseURL || url.scheme === \"file\";\r\n}\r\n\r\nfunction isNormalizedWindowsDriveLetter(string) {\r\n  return /^[A-Za-z]:$/.test(string);\r\n}\r\n\r\nfunction URLStateMachine(input, base, encodingOverride, url, stateOverride) {\r\n  this.pointer = 0;\r\n  this.input = input;\r\n  this.base = base || null;\r\n  this.encodingOverride = encodingOverride || \"utf-8\";\r\n  this.stateOverride = stateOverride;\r\n  this.url = url;\r\n  this.failure = false;\r\n  this.parseError = false;\r\n\r\n  if (!this.url) {\r\n    this.url = {\r\n      scheme: \"\",\r\n      username: \"\",\r\n      password: \"\",\r\n      host: null,\r\n      port: null,\r\n      path: [],\r\n      query: null,\r\n      fragment: null,\r\n\r\n      cannotBeABaseURL: false\r\n    };\r\n\r\n    const res = trimControlChars(this.input);\r\n    if (res !== this.input) {\r\n      this.parseError = true;\r\n    }\r\n    this.input = res;\r\n  }\r\n\r\n  const res = trimTabAndNewline(this.input);\r\n  if (res !== this.input) {\r\n    this.parseError = true;\r\n  }\r\n  this.input = res;\r\n\r\n  this.state = stateOverride || \"scheme start\";\r\n\r\n  this.buffer = \"\";\r\n  this.atFlag = false;\r\n  this.arrFlag = false;\r\n  this.passwordTokenSeenFlag = false;\r\n\r\n  this.input = punycode.ucs2.decode(this.input);\r\n\r\n  for (; this.pointer <= this.input.length; ++this.pointer) {\r\n    const c = this.input[this.pointer];\r\n    const cStr = isNaN(c) ? undefined : String.fromCodePoint(c);\r\n\r\n    // exec state machine\r\n    const ret = this[\"parse \" + this.state](c, cStr);\r\n    if (!ret) {\r\n      break; // terminate algorithm\r\n    } else if (ret === failure) {\r\n      this.failure = true;\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\nURLStateMachine.prototype[\"parse scheme start\"] = function parseSchemeStart(c, cStr) {\r\n  if (isASCIIAlpha(c)) {\r\n    this.buffer += cStr.toLowerCase();\r\n    this.state = \"scheme\";\r\n  } else if (!this.stateOverride) {\r\n    this.state = \"no scheme\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse scheme\"] = function parseScheme(c, cStr) {\r\n  if (isASCIIAlphanumeric(c) || c === 43 || c === 45 || c === 46) {\r\n    this.buffer += cStr.toLowerCase();\r\n  } else if (c === 58) {\r\n    if (this.stateOverride) {\r\n      if (isSpecial(this.url) && !isSpecialScheme(this.buffer)) {\r\n        return false;\r\n      }\r\n\r\n      if (!isSpecial(this.url) && isSpecialScheme(this.buffer)) {\r\n        return false;\r\n      }\r\n\r\n      if ((includesCredentials(this.url) || this.url.port !== null) && this.buffer === \"file\") {\r\n        return false;\r\n      }\r\n\r\n      if (this.url.scheme === \"file\" && (this.url.host === \"\" || this.url.host === null)) {\r\n        return false;\r\n      }\r\n    }\r\n    this.url.scheme = this.buffer;\r\n    this.buffer = \"\";\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n    if (this.url.scheme === \"file\") {\r\n      if (this.input[this.pointer + 1] !== 47 || this.input[this.pointer + 2] !== 47) {\r\n        this.parseError = true;\r\n      }\r\n      this.state = \"file\";\r\n    } else if (isSpecial(this.url) && this.base !== null && this.base.scheme === this.url.scheme) {\r\n      this.state = \"special relative or authority\";\r\n    } else if (isSpecial(this.url)) {\r\n      this.state = \"special authority slashes\";\r\n    } else if (this.input[this.pointer + 1] === 47) {\r\n      this.state = \"path or authority\";\r\n      ++this.pointer;\r\n    } else {\r\n      this.url.cannotBeABaseURL = true;\r\n      this.url.path.push(\"\");\r\n      this.state = \"cannot-be-a-base-URL path\";\r\n    }\r\n  } else if (!this.stateOverride) {\r\n    this.buffer = \"\";\r\n    this.state = \"no scheme\";\r\n    this.pointer = -1;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse no scheme\"] = function parseNoScheme(c) {\r\n  if (this.base === null || (this.base.cannotBeABaseURL && c !== 35)) {\r\n    return failure;\r\n  } else if (this.base.cannotBeABaseURL && c === 35) {\r\n    this.url.scheme = this.base.scheme;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n    this.url.fragment = \"\";\r\n    this.url.cannotBeABaseURL = true;\r\n    this.state = \"fragment\";\r\n  } else if (this.base.scheme === \"file\") {\r\n    this.state = \"file\";\r\n    --this.pointer;\r\n  } else {\r\n    this.state = \"relative\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special relative or authority\"] = function parseSpecialRelativeOrAuthority(c) {\r\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\r\n    this.state = \"special authority ignore slashes\";\r\n    ++this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    this.state = \"relative\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path or authority\"] = function parsePathOrAuthority(c) {\r\n  if (c === 47) {\r\n    this.state = \"authority\";\r\n  } else {\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse relative\"] = function parseRelative(c) {\r\n  this.url.scheme = this.base.scheme;\r\n  if (isNaN(c)) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n  } else if (c === 47) {\r\n    this.state = \"relative slash\";\r\n  } else if (c === 63) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (c === 35) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else if (isSpecial(this.url) && c === 92) {\r\n    this.parseError = true;\r\n    this.state = \"relative slash\";\r\n  } else {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice(0, this.base.path.length - 1);\r\n\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse relative slash\"] = function parseRelativeSlash(c) {\r\n  if (isSpecial(this.url) && (c === 47 || c === 92)) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"special authority ignore slashes\";\r\n  } else if (c === 47) {\r\n    this.state = \"authority\";\r\n  } else {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special authority slashes\"] = function parseSpecialAuthoritySlashes(c) {\r\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\r\n    this.state = \"special authority ignore slashes\";\r\n    ++this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    this.state = \"special authority ignore slashes\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special authority ignore slashes\"] = function parseSpecialAuthorityIgnoreSlashes(c) {\r\n  if (c !== 47 && c !== 92) {\r\n    this.state = \"authority\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse authority\"] = function parseAuthority(c, cStr) {\r\n  if (c === 64) {\r\n    this.parseError = true;\r\n    if (this.atFlag) {\r\n      this.buffer = \"%40\" + this.buffer;\r\n    }\r\n    this.atFlag = true;\r\n\r\n    // careful, this is based on buffer and has its own pointer (this.pointer != pointer) and inner chars\r\n    const len = countSymbols(this.buffer);\r\n    for (let pointer = 0; pointer < len; ++pointer) {\r\n      const codePoint = this.buffer.codePointAt(pointer);\r\n\r\n      if (codePoint === 58 && !this.passwordTokenSeenFlag) {\r\n        this.passwordTokenSeenFlag = true;\r\n        continue;\r\n      }\r\n      const encodedCodePoints = percentEncodeChar(codePoint, isUserinfoPercentEncode);\r\n      if (this.passwordTokenSeenFlag) {\r\n        this.url.password += encodedCodePoints;\r\n      } else {\r\n        this.url.username += encodedCodePoints;\r\n      }\r\n    }\r\n    this.buffer = \"\";\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92)) {\r\n    if (this.atFlag && this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    }\r\n    this.pointer -= countSymbols(this.buffer) + 1;\r\n    this.buffer = \"\";\r\n    this.state = \"host\";\r\n  } else {\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse hostname\"] =\r\nURLStateMachine.prototype[\"parse host\"] = function parseHostName(c, cStr) {\r\n  if (this.stateOverride && this.url.scheme === \"file\") {\r\n    --this.pointer;\r\n    this.state = \"file host\";\r\n  } else if (c === 58 && !this.arrFlag) {\r\n    if (this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    }\r\n\r\n    const host = parseHost(this.buffer, isSpecial(this.url));\r\n    if (host === failure) {\r\n      return failure;\r\n    }\r\n\r\n    this.url.host = host;\r\n    this.buffer = \"\";\r\n    this.state = \"port\";\r\n    if (this.stateOverride === \"hostname\") {\r\n      return false;\r\n    }\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92)) {\r\n    --this.pointer;\r\n    if (isSpecial(this.url) && this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    } else if (this.stateOverride && this.buffer === \"\" &&\r\n               (includesCredentials(this.url) || this.url.port !== null)) {\r\n      this.parseError = true;\r\n      return false;\r\n    }\r\n\r\n    const host = parseHost(this.buffer, isSpecial(this.url));\r\n    if (host === failure) {\r\n      return failure;\r\n    }\r\n\r\n    this.url.host = host;\r\n    this.buffer = \"\";\r\n    this.state = \"path start\";\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n  } else {\r\n    if (c === 91) {\r\n      this.arrFlag = true;\r\n    } else if (c === 93) {\r\n      this.arrFlag = false;\r\n    }\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse port\"] = function parsePort(c, cStr) {\r\n  if (isASCIIDigit(c)) {\r\n    this.buffer += cStr;\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92) ||\r\n             this.stateOverride) {\r\n    if (this.buffer !== \"\") {\r\n      const port = parseInt(this.buffer);\r\n      if (port > Math.pow(2, 16) - 1) {\r\n        this.parseError = true;\r\n        return failure;\r\n      }\r\n      this.url.port = port === defaultPort(this.url.scheme) ? null : port;\r\n      this.buffer = \"\";\r\n    }\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n    this.state = \"path start\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nconst fileOtherwiseCodePoints = new Set([47, 92, 63, 35]);\r\n\r\nURLStateMachine.prototype[\"parse file\"] = function parseFile(c) {\r\n  this.url.scheme = \"file\";\r\n\r\n  if (c === 47 || c === 92) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"file slash\";\r\n  } else if (this.base !== null && this.base.scheme === \"file\") {\r\n    if (isNaN(c)) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = this.base.query;\r\n    } else if (c === 63) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = \"\";\r\n      this.state = \"query\";\r\n    } else if (c === 35) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = this.base.query;\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    } else {\r\n      if (this.input.length - this.pointer - 1 === 0 || // remaining consists of 0 code points\r\n          !isWindowsDriveLetterCodePoints(c, this.input[this.pointer + 1]) ||\r\n          (this.input.length - this.pointer - 1 >= 2 && // remaining has at least 2 code points\r\n           !fileOtherwiseCodePoints.has(this.input[this.pointer + 2]))) {\r\n        this.url.host = this.base.host;\r\n        this.url.path = this.base.path.slice();\r\n        shortenPath(this.url);\r\n      } else {\r\n        this.parseError = true;\r\n      }\r\n\r\n      this.state = \"path\";\r\n      --this.pointer;\r\n    }\r\n  } else {\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse file slash\"] = function parseFileSlash(c) {\r\n  if (c === 47 || c === 92) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"file host\";\r\n  } else {\r\n    if (this.base !== null && this.base.scheme === \"file\") {\r\n      if (isNormalizedWindowsDriveLetterString(this.base.path[0])) {\r\n        this.url.path.push(this.base.path[0]);\r\n      } else {\r\n        this.url.host = this.base.host;\r\n      }\r\n    }\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse file host\"] = function parseFileHost(c, cStr) {\r\n  if (isNaN(c) || c === 47 || c === 92 || c === 63 || c === 35) {\r\n    --this.pointer;\r\n    if (!this.stateOverride && isWindowsDriveLetterString(this.buffer)) {\r\n      this.parseError = true;\r\n      this.state = \"path\";\r\n    } else if (this.buffer === \"\") {\r\n      this.url.host = \"\";\r\n      if (this.stateOverride) {\r\n        return false;\r\n      }\r\n      this.state = \"path start\";\r\n    } else {\r\n      let host = parseHost(this.buffer, isSpecial(this.url));\r\n      if (host === failure) {\r\n        return failure;\r\n      }\r\n      if (host === \"localhost\") {\r\n        host = \"\";\r\n      }\r\n      this.url.host = host;\r\n\r\n      if (this.stateOverride) {\r\n        return false;\r\n      }\r\n\r\n      this.buffer = \"\";\r\n      this.state = \"path start\";\r\n    }\r\n  } else {\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path start\"] = function parsePathStart(c) {\r\n  if (isSpecial(this.url)) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"path\";\r\n\r\n    if (c !== 47 && c !== 92) {\r\n      --this.pointer;\r\n    }\r\n  } else if (!this.stateOverride && c === 63) {\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (!this.stateOverride && c === 35) {\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else if (c !== undefined) {\r\n    this.state = \"path\";\r\n    if (c !== 47) {\r\n      --this.pointer;\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path\"] = function parsePath(c) {\r\n  if (isNaN(c) || c === 47 || (isSpecial(this.url) && c === 92) ||\r\n      (!this.stateOverride && (c === 63 || c === 35))) {\r\n    if (isSpecial(this.url) && c === 92) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (isDoubleDot(this.buffer)) {\r\n      shortenPath(this.url);\r\n      if (c !== 47 && !(isSpecial(this.url) && c === 92)) {\r\n        this.url.path.push(\"\");\r\n      }\r\n    } else if (isSingleDot(this.buffer) && c !== 47 &&\r\n               !(isSpecial(this.url) && c === 92)) {\r\n      this.url.path.push(\"\");\r\n    } else if (!isSingleDot(this.buffer)) {\r\n      if (this.url.scheme === \"file\" && this.url.path.length === 0 && isWindowsDriveLetterString(this.buffer)) {\r\n        if (this.url.host !== \"\" && this.url.host !== null) {\r\n          this.parseError = true;\r\n          this.url.host = \"\";\r\n        }\r\n        this.buffer = this.buffer[0] + \":\";\r\n      }\r\n      this.url.path.push(this.buffer);\r\n    }\r\n    this.buffer = \"\";\r\n    if (this.url.scheme === \"file\" && (c === undefined || c === 63 || c === 35)) {\r\n      while (this.url.path.length > 1 && this.url.path[0] === \"\") {\r\n        this.parseError = true;\r\n        this.url.path.shift();\r\n      }\r\n    }\r\n    if (c === 63) {\r\n      this.url.query = \"\";\r\n      this.state = \"query\";\r\n    }\r\n    if (c === 35) {\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    }\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.buffer += percentEncodeChar(c, isPathPercentEncode);\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse cannot-be-a-base-URL path\"] = function parseCannotBeABaseURLPath(c) {\r\n  if (c === 63) {\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (c === 35) {\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else {\r\n    // TODO: Add: not a URL code point\r\n    if (!isNaN(c) && c !== 37) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (c === 37 &&\r\n        (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n         !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (!isNaN(c)) {\r\n      this.url.path[0] = this.url.path[0] + percentEncodeChar(c, isC0ControlPercentEncode);\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse query\"] = function parseQuery(c, cStr) {\r\n  if (isNaN(c) || (!this.stateOverride && c === 35)) {\r\n    if (!isSpecial(this.url) || this.url.scheme === \"ws\" || this.url.scheme === \"wss\") {\r\n      this.encodingOverride = \"utf-8\";\r\n    }\r\n\r\n    const buffer = new Buffer(this.buffer); // TODO: Use encoding override instead\r\n    for (let i = 0; i < buffer.length; ++i) {\r\n      if (buffer[i] < 0x21 || buffer[i] > 0x7E || buffer[i] === 0x22 || buffer[i] === 0x23 ||\r\n          buffer[i] === 0x3C || buffer[i] === 0x3E) {\r\n        this.url.query += percentEncode(buffer[i]);\r\n      } else {\r\n        this.url.query += String.fromCodePoint(buffer[i]);\r\n      }\r\n    }\r\n\r\n    this.buffer = \"\";\r\n    if (c === 35) {\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    }\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse fragment\"] = function parseFragment(c) {\r\n  if (isNaN(c)) { // do nothing\r\n  } else if (c === 0x0) {\r\n    this.parseError = true;\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.url.fragment += percentEncodeChar(c, isC0ControlPercentEncode);\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nfunction serializeURL(url, excludeFragment) {\r\n  let output = url.scheme + \":\";\r\n  if (url.host !== null) {\r\n    output += \"//\";\r\n\r\n    if (url.username !== \"\" || url.password !== \"\") {\r\n      output += url.username;\r\n      if (url.password !== \"\") {\r\n        output += \":\" + url.password;\r\n      }\r\n      output += \"@\";\r\n    }\r\n\r\n    output += serializeHost(url.host);\r\n\r\n    if (url.port !== null) {\r\n      output += \":\" + url.port;\r\n    }\r\n  } else if (url.host === null && url.scheme === \"file\") {\r\n    output += \"//\";\r\n  }\r\n\r\n  if (url.cannotBeABaseURL) {\r\n    output += url.path[0];\r\n  } else {\r\n    for (const string of url.path) {\r\n      output += \"/\" + string;\r\n    }\r\n  }\r\n\r\n  if (url.query !== null) {\r\n    output += \"?\" + url.query;\r\n  }\r\n\r\n  if (!excludeFragment && url.fragment !== null) {\r\n    output += \"#\" + url.fragment;\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction serializeOrigin(tuple) {\r\n  let result = tuple.scheme + \"://\";\r\n  result += serializeHost(tuple.host);\r\n\r\n  if (tuple.port !== null) {\r\n    result += \":\" + tuple.port;\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nmodule.exports.serializeURL = serializeURL;\r\n\r\nmodule.exports.serializeURLOrigin = function (url) {\r\n  // https://url.spec.whatwg.org/#concept-url-origin\r\n  switch (url.scheme) {\r\n    case \"blob\":\r\n      try {\r\n        return module.exports.serializeURLOrigin(module.exports.parseURL(url.path[0]));\r\n      } catch (e) {\r\n        // serializing an opaque origin returns \"null\"\r\n        return \"null\";\r\n      }\r\n    case \"ftp\":\r\n    case \"gopher\":\r\n    case \"http\":\r\n    case \"https\":\r\n    case \"ws\":\r\n    case \"wss\":\r\n      return serializeOrigin({\r\n        scheme: url.scheme,\r\n        host: url.host,\r\n        port: url.port\r\n      });\r\n    case \"file\":\r\n      // spec says \"exercise to the reader\", chrome says \"file://\"\r\n      return \"file://\";\r\n    default:\r\n      // serializing an opaque origin returns \"null\"\r\n      return \"null\";\r\n  }\r\n};\r\n\r\nmodule.exports.basicURLParse = function (input, options) {\r\n  if (options === undefined) {\r\n    options = {};\r\n  }\r\n\r\n  const usm = new URLStateMachine(input, options.baseURL, options.encodingOverride, options.url, options.stateOverride);\r\n  if (usm.failure) {\r\n    return \"failure\";\r\n  }\r\n\r\n  return usm.url;\r\n};\r\n\r\nmodule.exports.setTheUsername = function (url, username) {\r\n  url.username = \"\";\r\n  const decoded = punycode.ucs2.decode(username);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    url.username += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\r\n  }\r\n};\r\n\r\nmodule.exports.setThePassword = function (url, password) {\r\n  url.password = \"\";\r\n  const decoded = punycode.ucs2.decode(password);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    url.password += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\r\n  }\r\n};\r\n\r\nmodule.exports.serializeHost = serializeHost;\r\n\r\nmodule.exports.cannotHaveAUsernamePasswordPort = cannotHaveAUsernamePasswordPort;\r\n\r\nmodule.exports.serializeInteger = function (integer) {\r\n  return String(integer);\r\n};\r\n\r\nmodule.exports.parseURL = function (input, options) {\r\n  if (options === undefined) {\r\n    options = {};\r\n  }\r\n\r\n  // We don't handle blobs, so this just delegates:\r\n  return module.exports.basicURLParse(input, { baseURL: options.baseURL, encodingOverride: options.encodingOverride });\r\n};\r\n","\"use strict\";\nconst usm = require(\"./url-state-machine\");\n\nexports.implementation = class URLImpl {\n  constructor(constructorArgs) {\n    const url = constructorArgs[0];\n    const base = constructorArgs[1];\n\n    let parsedBase = null;\n    if (base !== undefined) {\n      parsedBase = usm.basicURLParse(base);\n      if (parsedBase === \"failure\") {\n        throw new TypeError(\"Invalid base URL\");\n      }\n    }\n\n    const parsedURL = usm.basicURLParse(url, { baseURL: parsedBase });\n    if (parsedURL === \"failure\") {\n      throw new TypeError(\"Invalid URL\");\n    }\n\n    this._url = parsedURL;\n\n    // TODO: query stuff\n  }\n\n  get href() {\n    return usm.serializeURL(this._url);\n  }\n\n  set href(v) {\n    const parsedURL = usm.basicURLParse(v);\n    if (parsedURL === \"failure\") {\n      throw new TypeError(\"Invalid URL\");\n    }\n\n    this._url = parsedURL;\n  }\n\n  get origin() {\n    return usm.serializeURLOrigin(this._url);\n  }\n\n  get protocol() {\n    return this._url.scheme + \":\";\n  }\n\n  set protocol(v) {\n    usm.basicURLParse(v + \":\", { url: this._url, stateOverride: \"scheme start\" });\n  }\n\n  get username() {\n    return this._url.username;\n  }\n\n  set username(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setTheUsername(this._url, v);\n  }\n\n  get password() {\n    return this._url.password;\n  }\n\n  set password(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setThePassword(this._url, v);\n  }\n\n  get host() {\n    const url = this._url;\n\n    if (url.host === null) {\n      return \"\";\n    }\n\n    if (url.port === null) {\n      return usm.serializeHost(url.host);\n    }\n\n    return usm.serializeHost(url.host) + \":\" + usm.serializeInteger(url.port);\n  }\n\n  set host(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"host\" });\n  }\n\n  get hostname() {\n    if (this._url.host === null) {\n      return \"\";\n    }\n\n    return usm.serializeHost(this._url.host);\n  }\n\n  set hostname(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"hostname\" });\n  }\n\n  get port() {\n    if (this._url.port === null) {\n      return \"\";\n    }\n\n    return usm.serializeInteger(this._url.port);\n  }\n\n  set port(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    if (v === \"\") {\n      this._url.port = null;\n    } else {\n      usm.basicURLParse(v, { url: this._url, stateOverride: \"port\" });\n    }\n  }\n\n  get pathname() {\n    if (this._url.cannotBeABaseURL) {\n      return this._url.path[0];\n    }\n\n    if (this._url.path.length === 0) {\n      return \"\";\n    }\n\n    return \"/\" + this._url.path.join(\"/\");\n  }\n\n  set pathname(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    this._url.path = [];\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"path start\" });\n  }\n\n  get search() {\n    if (this._url.query === null || this._url.query === \"\") {\n      return \"\";\n    }\n\n    return \"?\" + this._url.query;\n  }\n\n  set search(v) {\n    // TODO: query stuff\n\n    const url = this._url;\n\n    if (v === \"\") {\n      url.query = null;\n      return;\n    }\n\n    const input = v[0] === \"?\" ? v.substring(1) : v;\n    url.query = \"\";\n    usm.basicURLParse(input, { url, stateOverride: \"query\" });\n  }\n\n  get hash() {\n    if (this._url.fragment === null || this._url.fragment === \"\") {\n      return \"\";\n    }\n\n    return \"#\" + this._url.fragment;\n  }\n\n  set hash(v) {\n    if (v === \"\") {\n      this._url.fragment = null;\n      return;\n    }\n\n    const input = v[0] === \"#\" ? v.substring(1) : v;\n    this._url.fragment = \"\";\n    usm.basicURLParse(input, { url: this._url, stateOverride: \"fragment\" });\n  }\n\n  toJSON() {\n    return this.href;\n  }\n};\n","\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\nconst Impl = require(\".//URL-impl.js\");\n\nconst impl = utils.implSymbol;\n\nfunction URL(url) {\n  if (!this || this[impl] || !(this instanceof URL)) {\n    throw new TypeError(\"Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.\");\n  }\n  if (arguments.length < 1) {\n    throw new TypeError(\"Failed to construct 'URL': 1 argument required, but only \" + arguments.length + \" present.\");\n  }\n  const args = [];\n  for (let i = 0; i < arguments.length && i < 2; ++i) {\n    args[i] = arguments[i];\n  }\n  args[0] = conversions[\"USVString\"](args[0]);\n  if (args[1] !== undefined) {\n  args[1] = conversions[\"USVString\"](args[1]);\n  }\n\n  module.exports.setup(this, args);\n}\n\nURL.prototype.toJSON = function toJSON() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  const args = [];\n  for (let i = 0; i < arguments.length && i < 0; ++i) {\n    args[i] = arguments[i];\n  }\n  return this[impl].toJSON.apply(this[impl], args);\n};\nObject.defineProperty(URL.prototype, \"href\", {\n  get() {\n    return this[impl].href;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].href = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nURL.prototype.toString = function () {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  return this.href;\n};\n\nObject.defineProperty(URL.prototype, \"origin\", {\n  get() {\n    return this[impl].origin;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"protocol\", {\n  get() {\n    return this[impl].protocol;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].protocol = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"username\", {\n  get() {\n    return this[impl].username;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].username = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"password\", {\n  get() {\n    return this[impl].password;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].password = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"host\", {\n  get() {\n    return this[impl].host;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].host = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"hostname\", {\n  get() {\n    return this[impl].hostname;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].hostname = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"port\", {\n  get() {\n    return this[impl].port;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].port = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"pathname\", {\n  get() {\n    return this[impl].pathname;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].pathname = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"search\", {\n  get() {\n    return this[impl].search;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].search = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"hash\", {\n  get() {\n    return this[impl].hash;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].hash = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\n\nmodule.exports = {\n  is(obj) {\n    return !!obj && obj[impl] instanceof Impl.implementation;\n  },\n  create(constructorArgs, privateData) {\n    let obj = Object.create(URL.prototype);\n    this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    obj[impl] = new Impl.implementation(constructorArgs, privateData);\n    obj[impl][utils.wrapperSymbol] = obj;\n  },\n  interface: URL,\n  expose: {\n    Window: { URL: URL },\n    Worker: { URL: URL }\n  }\n};\n\n","\"use strict\";\n\nexports.URL = require(\"./URL\").interface;\nexports.serializeURL = require(\"./url-state-machine\").serializeURL;\nexports.serializeURLOrigin = require(\"./url-state-machine\").serializeURLOrigin;\nexports.basicURLParse = require(\"./url-state-machine\").basicURLParse;\nexports.setTheUsername = require(\"./url-state-machine\").setTheUsername;\nexports.setThePassword = require(\"./url-state-machine\").setThePassword;\nexports.serializeHost = require(\"./url-state-machine\").serializeHost;\nexports.serializeInteger = require(\"./url-state-machine\").serializeInteger;\nexports.parseURL = require(\"./url-state-machine\").parseURL;\n","import Stream from 'stream';\nimport http from 'http';\nimport Url from 'url';\nimport whatwgUrl from 'whatwg-url';\nimport https from 'https';\nimport zlib from 'zlib';\n\n// Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js\n\n// fix for \"Readable\" isn't a named export issue\nconst Readable = Stream.Readable;\n\nconst BUFFER = Symbol('buffer');\nconst TYPE = Symbol('type');\n\nclass Blob {\n\tconstructor() {\n\t\tthis[TYPE] = '';\n\n\t\tconst blobParts = arguments[0];\n\t\tconst options = arguments[1];\n\n\t\tconst buffers = [];\n\t\tlet size = 0;\n\n\t\tif (blobParts) {\n\t\t\tconst a = blobParts;\n\t\t\tconst length = Number(a.length);\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tconst element = a[i];\n\t\t\t\tlet buffer;\n\t\t\t\tif (element instanceof Buffer) {\n\t\t\t\t\tbuffer = element;\n\t\t\t\t} else if (ArrayBuffer.isView(element)) {\n\t\t\t\t\tbuffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);\n\t\t\t\t} else if (element instanceof ArrayBuffer) {\n\t\t\t\t\tbuffer = Buffer.from(element);\n\t\t\t\t} else if (element instanceof Blob) {\n\t\t\t\t\tbuffer = element[BUFFER];\n\t\t\t\t} else {\n\t\t\t\t\tbuffer = Buffer.from(typeof element === 'string' ? element : String(element));\n\t\t\t\t}\n\t\t\t\tsize += buffer.length;\n\t\t\t\tbuffers.push(buffer);\n\t\t\t}\n\t\t}\n\n\t\tthis[BUFFER] = Buffer.concat(buffers);\n\n\t\tlet type = options && options.type !== undefined && String(options.type).toLowerCase();\n\t\tif (type && !/[^\\u0020-\\u007E]/.test(type)) {\n\t\t\tthis[TYPE] = type;\n\t\t}\n\t}\n\tget size() {\n\t\treturn this[BUFFER].length;\n\t}\n\tget type() {\n\t\treturn this[TYPE];\n\t}\n\ttext() {\n\t\treturn Promise.resolve(this[BUFFER].toString());\n\t}\n\tarrayBuffer() {\n\t\tconst buf = this[BUFFER];\n\t\tconst ab = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\treturn Promise.resolve(ab);\n\t}\n\tstream() {\n\t\tconst readable = new Readable();\n\t\treadable._read = function () {};\n\t\treadable.push(this[BUFFER]);\n\t\treadable.push(null);\n\t\treturn readable;\n\t}\n\ttoString() {\n\t\treturn '[object Blob]';\n\t}\n\tslice() {\n\t\tconst size = this.size;\n\n\t\tconst start = arguments[0];\n\t\tconst end = arguments[1];\n\t\tlet relativeStart, relativeEnd;\n\t\tif (start === undefined) {\n\t\t\trelativeStart = 0;\n\t\t} else if (start < 0) {\n\t\t\trelativeStart = Math.max(size + start, 0);\n\t\t} else {\n\t\t\trelativeStart = Math.min(start, size);\n\t\t}\n\t\tif (end === undefined) {\n\t\t\trelativeEnd = size;\n\t\t} else if (end < 0) {\n\t\t\trelativeEnd = Math.max(size + end, 0);\n\t\t} else {\n\t\t\trelativeEnd = Math.min(end, size);\n\t\t}\n\t\tconst span = Math.max(relativeEnd - relativeStart, 0);\n\n\t\tconst buffer = this[BUFFER];\n\t\tconst slicedBuffer = buffer.slice(relativeStart, relativeStart + span);\n\t\tconst blob = new Blob([], { type: arguments[2] });\n\t\tblob[BUFFER] = slicedBuffer;\n\t\treturn blob;\n\t}\n}\n\nObject.defineProperties(Blob.prototype, {\n\tsize: { enumerable: true },\n\ttype: { enumerable: true },\n\tslice: { enumerable: true }\n});\n\nObject.defineProperty(Blob.prototype, Symbol.toStringTag, {\n\tvalue: 'Blob',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * fetch-error.js\n *\n * FetchError interface for operational errors\n */\n\n/**\n * Create FetchError instance\n *\n * @param   String      message      Error message for human\n * @param   String      type         Error type for machine\n * @param   String      systemError  For Node.js system error\n * @return  FetchError\n */\nfunction FetchError(message, type, systemError) {\n  Error.call(this, message);\n\n  this.message = message;\n  this.type = type;\n\n  // when err.type is `system`, err.code contains system error code\n  if (systemError) {\n    this.code = this.errno = systemError.code;\n  }\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nFetchError.prototype = Object.create(Error.prototype);\nFetchError.prototype.constructor = FetchError;\nFetchError.prototype.name = 'FetchError';\n\nlet convert;\ntry {\n\tconvert = require('encoding').convert;\n} catch (e) {}\n\nconst INTERNALS = Symbol('Body internals');\n\n// fix an issue where \"PassThrough\" isn't a named export for node <10\nconst PassThrough = Stream.PassThrough;\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nfunction Body(body) {\n\tvar _this = this;\n\n\tvar _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t    _ref$size = _ref.size;\n\n\tlet size = _ref$size === undefined ? 0 : _ref$size;\n\tvar _ref$timeout = _ref.timeout;\n\tlet timeout = _ref$timeout === undefined ? 0 : _ref$timeout;\n\n\tif (body == null) {\n\t\t// body is undefined or null\n\t\tbody = null;\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\tbody = Buffer.from(body.toString());\n\t} else if (isBlob(body)) ; else if (Buffer.isBuffer(body)) ; else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\tbody = Buffer.from(body);\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\tbody = Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n\t} else if (body instanceof Stream) ; else {\n\t\t// none of the above\n\t\t// coerce to string then buffer\n\t\tbody = Buffer.from(String(body));\n\t}\n\tthis[INTERNALS] = {\n\t\tbody,\n\t\tdisturbed: false,\n\t\terror: null\n\t};\n\tthis.size = size;\n\tthis.timeout = timeout;\n\n\tif (body instanceof Stream) {\n\t\tbody.on('error', function (err) {\n\t\t\tconst error = err.name === 'AbortError' ? err : new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, 'system', err);\n\t\t\t_this[INTERNALS].error = error;\n\t\t});\n\t}\n}\n\nBody.prototype = {\n\tget body() {\n\t\treturn this[INTERNALS].body;\n\t},\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t},\n\n\t/**\n  * Decode response as ArrayBuffer\n  *\n  * @return  Promise\n  */\n\tarrayBuffer() {\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\t});\n\t},\n\n\t/**\n  * Return raw response as Blob\n  *\n  * @return Promise\n  */\n\tblob() {\n\t\tlet ct = this.headers && this.headers.get('content-type') || '';\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn Object.assign(\n\t\t\t// Prevent copying\n\t\t\tnew Blob([], {\n\t\t\t\ttype: ct.toLowerCase()\n\t\t\t}), {\n\t\t\t\t[BUFFER]: buf\n\t\t\t});\n\t\t});\n\t},\n\n\t/**\n  * Decode response as json\n  *\n  * @return  Promise\n  */\n\tjson() {\n\t\tvar _this2 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(buffer.toString());\n\t\t\t} catch (err) {\n\t\t\t\treturn Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, 'invalid-json'));\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n  * Decode response as text\n  *\n  * @return  Promise\n  */\n\ttext() {\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn buffer.toString();\n\t\t});\n\t},\n\n\t/**\n  * Decode response as buffer (non-spec api)\n  *\n  * @return  Promise\n  */\n\tbuffer() {\n\t\treturn consumeBody.call(this);\n\t},\n\n\t/**\n  * Decode response as text, while automatically detecting the encoding and\n  * trying to decode to UTF-8 (non-spec api)\n  *\n  * @return  Promise\n  */\n\ttextConverted() {\n\t\tvar _this3 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn convertBody(buffer, _this3.headers);\n\t\t});\n\t}\n};\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: { enumerable: true },\n\tbodyUsed: { enumerable: true },\n\tarrayBuffer: { enumerable: true },\n\tblob: { enumerable: true },\n\tjson: { enumerable: true },\n\ttext: { enumerable: true }\n});\n\nBody.mixIn = function (proto) {\n\tfor (const name of Object.getOwnPropertyNames(Body.prototype)) {\n\t\t// istanbul ignore else: future proof\n\t\tif (!(name in proto)) {\n\t\t\tconst desc = Object.getOwnPropertyDescriptor(Body.prototype, name);\n\t\t\tObject.defineProperty(proto, name, desc);\n\t\t}\n\t}\n};\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return  Promise\n */\nfunction consumeBody() {\n\tvar _this4 = this;\n\n\tif (this[INTERNALS].disturbed) {\n\t\treturn Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));\n\t}\n\n\tthis[INTERNALS].disturbed = true;\n\n\tif (this[INTERNALS].error) {\n\t\treturn Body.Promise.reject(this[INTERNALS].error);\n\t}\n\n\tlet body = this.body;\n\n\t// body is null\n\tif (body === null) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is blob\n\tif (isBlob(body)) {\n\t\tbody = body.stream();\n\t}\n\n\t// body is buffer\n\tif (Buffer.isBuffer(body)) {\n\t\treturn Body.Promise.resolve(body);\n\t}\n\n\t// istanbul ignore if: should never happen\n\tif (!(body instanceof Stream)) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is stream\n\t// get ready to actually consume the body\n\tlet accum = [];\n\tlet accumBytes = 0;\n\tlet abort = false;\n\n\treturn new Body.Promise(function (resolve, reject) {\n\t\tlet resTimeout;\n\n\t\t// allow timeout on slow response body\n\t\tif (_this4.timeout) {\n\t\t\tresTimeout = setTimeout(function () {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, 'body-timeout'));\n\t\t\t}, _this4.timeout);\n\t\t}\n\n\t\t// handle stream errors\n\t\tbody.on('error', function (err) {\n\t\t\tif (err.name === 'AbortError') {\n\t\t\t\t// if the request was aborted, reject with this Error\n\t\t\t\tabort = true;\n\t\t\t\treject(err);\n\t\t\t} else {\n\t\t\t\t// other errors, such as incorrect content-encoding\n\t\t\t\treject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\n\t\tbody.on('data', function (chunk) {\n\t\t\tif (abort || chunk === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (_this4.size && accumBytes + chunk.length > _this4.size) {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, 'max-size'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t});\n\n\t\tbody.on('end', function () {\n\t\t\tif (abort) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclearTimeout(resTimeout);\n\n\t\t\ttry {\n\t\t\t\tresolve(Buffer.concat(accum, accumBytes));\n\t\t\t} catch (err) {\n\t\t\t\t// handle streams that have accumulated too much data (issue #414)\n\t\t\t\treject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Detect buffer encoding and convert to target encoding\n * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding\n *\n * @param   Buffer  buffer    Incoming buffer\n * @param   String  encoding  Target encoding\n * @return  String\n */\nfunction convertBody(buffer, headers) {\n\tif (typeof convert !== 'function') {\n\t\tthrow new Error('The package `encoding` must be installed to use the textConverted() function');\n\t}\n\n\tconst ct = headers.get('content-type');\n\tlet charset = 'utf-8';\n\tlet res, str;\n\n\t// header\n\tif (ct) {\n\t\tres = /charset=([^;]*)/i.exec(ct);\n\t}\n\n\t// no charset in content type, peek at response body for at most 1024 bytes\n\tstr = buffer.slice(0, 1024).toString();\n\n\t// html5\n\tif (!res && str) {\n\t\tres = /<meta.+?charset=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// html4\n\tif (!res && str) {\n\t\tres = /<meta[\\s]+?http-equiv=(['\"])content-type\\1[\\s]+?content=(['\"])(.+?)\\2/i.exec(str);\n\t\tif (!res) {\n\t\t\tres = /<meta[\\s]+?content=(['\"])(.+?)\\1[\\s]+?http-equiv=(['\"])content-type\\3/i.exec(str);\n\t\t\tif (res) {\n\t\t\t\tres.pop(); // drop last quote\n\t\t\t}\n\t\t}\n\n\t\tif (res) {\n\t\t\tres = /charset=(.*)/i.exec(res.pop());\n\t\t}\n\t}\n\n\t// xml\n\tif (!res && str) {\n\t\tres = /<\\?xml.+?encoding=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// found charset\n\tif (res) {\n\t\tcharset = res.pop();\n\n\t\t// prevent decode issues when sites use incorrect encoding\n\t\t// ref: https://hsivonen.fi/encoding-menu/\n\t\tif (charset === 'gb2312' || charset === 'gbk') {\n\t\t\tcharset = 'gb18030';\n\t\t}\n\t}\n\n\t// turn raw buffers into a single utf-8 buffer\n\treturn convert(buffer, 'UTF-8', charset).toString();\n}\n\n/**\n * Detect a URLSearchParams object\n * ref: https://github.com/bitinn/node-fetch/issues/296#issuecomment-307598143\n *\n * @param   Object  obj     Object to detect by type or brand\n * @return  String\n */\nfunction isURLSearchParams(obj) {\n\t// Duck-typing as a necessary condition.\n\tif (typeof obj !== 'object' || typeof obj.append !== 'function' || typeof obj.delete !== 'function' || typeof obj.get !== 'function' || typeof obj.getAll !== 'function' || typeof obj.has !== 'function' || typeof obj.set !== 'function') {\n\t\treturn false;\n\t}\n\n\t// Brand-checking and more duck-typing as optional condition.\n\treturn obj.constructor.name === 'URLSearchParams' || Object.prototype.toString.call(obj) === '[object URLSearchParams]' || typeof obj.sort === 'function';\n}\n\n/**\n * Check if `obj` is a W3C `Blob` object (which `File` inherits from)\n * @param  {*} obj\n * @return {boolean}\n */\nfunction isBlob(obj) {\n\treturn typeof obj === 'object' && typeof obj.arrayBuffer === 'function' && typeof obj.type === 'string' && typeof obj.stream === 'function' && typeof obj.constructor === 'function' && typeof obj.constructor.name === 'string' && /^(Blob|File)$/.test(obj.constructor.name) && /^(Blob|File)$/.test(obj[Symbol.toStringTag]);\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed  instance  Response or Request instance\n * @return  Mixed\n */\nfunction clone(instance) {\n\tlet p1, p2;\n\tlet body = instance.body;\n\n\t// don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif (body instanceof Stream && typeof body.getBoundary !== 'function') {\n\t\t// tee instance body\n\t\tp1 = new PassThrough();\n\t\tp2 = new PassThrough();\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS].body = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n}\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param   Mixed  instance  Any options.body input\n */\nfunction extractContentType(body) {\n\tif (body === null) {\n\t\t// body is null\n\t\treturn null;\n\t} else if (typeof body === 'string') {\n\t\t// body is string\n\t\treturn 'text/plain;charset=UTF-8';\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t} else if (isBlob(body)) {\n\t\t// body is blob\n\t\treturn body.type || null;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn null;\n\t} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\treturn null;\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\treturn null;\n\t} else if (typeof body.getBoundary === 'function') {\n\t\t// detect form data input from form-data module\n\t\treturn `multipart/form-data;boundary=${body.getBoundary()}`;\n\t} else if (body instanceof Stream) {\n\t\t// body is stream\n\t\t// can't really do much about this\n\t\treturn null;\n\t} else {\n\t\t// Body constructor defaults other things to string\n\t\treturn 'text/plain;charset=UTF-8';\n\t}\n}\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param   Body    instance   Instance of Body\n * @return  Number?            Number of bytes, or null if not possible\n */\nfunction getTotalBytes(instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\treturn 0;\n\t} else if (isBlob(body)) {\n\t\treturn body.size;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn body.length;\n\t} else if (body && typeof body.getLengthSync === 'function') {\n\t\t// detect form data input from form-data module\n\t\tif (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x\n\t\tbody.hasKnownLength && body.hasKnownLength()) {\n\t\t\t// 2.x\n\t\t\treturn body.getLengthSync();\n\t\t}\n\t\treturn null;\n\t} else {\n\t\t// body is stream\n\t\treturn null;\n\t}\n}\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param   Body    instance   Instance of Body\n * @return  Void\n */\nfunction writeToStream(dest, instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\tdest.end();\n\t} else if (isBlob(body)) {\n\t\tbody.stream().pipe(dest);\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\tdest.write(body);\n\t\tdest.end();\n\t} else {\n\t\t// body is stream\n\t\tbody.pipe(dest);\n\t}\n}\n\n// expose Promise\nBody.Promise = global.Promise;\n\n/**\n * headers.js\n *\n * Headers class offers convenient helpers\n */\n\nconst invalidTokenRegex = /[^\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]/;\nconst invalidHeaderCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\n\nfunction validateName(name) {\n\tname = `${name}`;\n\tif (invalidTokenRegex.test(name) || name === '') {\n\t\tthrow new TypeError(`${name} is not a legal HTTP header name`);\n\t}\n}\n\nfunction validateValue(value) {\n\tvalue = `${value}`;\n\tif (invalidHeaderCharRegex.test(value)) {\n\t\tthrow new TypeError(`${value} is not a legal HTTP header value`);\n\t}\n}\n\n/**\n * Find the key in the map object given a header name.\n *\n * Returns undefined if not found.\n *\n * @param   String  name  Header name\n * @return  String|Undefined\n */\nfunction find(map, name) {\n\tname = name.toLowerCase();\n\tfor (const key in map) {\n\t\tif (key.toLowerCase() === name) {\n\t\t\treturn key;\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst MAP = Symbol('map');\nclass Headers {\n\t/**\n  * Headers class\n  *\n  * @param   Object  headers  Response headers\n  * @return  Void\n  */\n\tconstructor() {\n\t\tlet init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n\t\tthis[MAP] = Object.create(null);\n\n\t\tif (init instanceof Headers) {\n\t\t\tconst rawHeaders = init.raw();\n\t\t\tconst headerNames = Object.keys(rawHeaders);\n\n\t\t\tfor (const headerName of headerNames) {\n\t\t\t\tfor (const value of rawHeaders[headerName]) {\n\t\t\t\t\tthis.append(headerName, value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// We don't worry about converting prop to ByteString here as append()\n\t\t// will handle it.\n\t\tif (init == null) ; else if (typeof init === 'object') {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\tif (method != null) {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tconst pairs = [];\n\t\t\t\tfor (const pair of init) {\n\t\t\t\t\tif (typeof pair !== 'object' || typeof pair[Symbol.iterator] !== 'function') {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be iterable');\n\t\t\t\t\t}\n\t\t\t\t\tpairs.push(Array.from(pair));\n\t\t\t\t}\n\n\t\t\t\tfor (const pair of pairs) {\n\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t}\n\t\t\t\t\tthis.append(pair[0], pair[1]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// record<ByteString, ByteString>\n\t\t\t\tfor (const key of Object.keys(init)) {\n\t\t\t\t\tconst value = init[key];\n\t\t\t\t\tthis.append(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Provided initializer must be an object');\n\t\t}\n\t}\n\n\t/**\n  * Return combined header value given name\n  *\n  * @param   String  name  Header name\n  * @return  Mixed\n  */\n\tget(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key === undefined) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this[MAP][key].join(', ');\n\t}\n\n\t/**\n  * Iterate over all headers\n  *\n  * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)\n  * @param   Boolean   thisArg   `this` context for callback function\n  * @return  Void\n  */\n\tforEach(callback) {\n\t\tlet thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n\t\tlet pairs = getHeaders(this);\n\t\tlet i = 0;\n\t\twhile (i < pairs.length) {\n\t\t\tvar _pairs$i = pairs[i];\n\t\t\tconst name = _pairs$i[0],\n\t\t\t      value = _pairs$i[1];\n\n\t\t\tcallback.call(thisArg, value, name, this);\n\t\t\tpairs = getHeaders(this);\n\t\t\ti++;\n\t\t}\n\t}\n\n\t/**\n  * Overwrite header values given name\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tset(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tthis[MAP][key !== undefined ? key : name] = [value];\n\t}\n\n\t/**\n  * Append a value onto existing header\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tappend(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tthis[MAP][key].push(value);\n\t\t} else {\n\t\t\tthis[MAP][name] = [value];\n\t\t}\n\t}\n\n\t/**\n  * Check for header name existence\n  *\n  * @param   String   name  Header name\n  * @return  Boolean\n  */\n\thas(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\treturn find(this[MAP], name) !== undefined;\n\t}\n\n\t/**\n  * Delete all header values given name\n  *\n  * @param   String  name  Header name\n  * @return  Void\n  */\n\tdelete(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tdelete this[MAP][key];\n\t\t}\n\t}\n\n\t/**\n  * Return raw headers (non-spec api)\n  *\n  * @return  Object\n  */\n\traw() {\n\t\treturn this[MAP];\n\t}\n\n\t/**\n  * Get an iterator on keys.\n  *\n  * @return  Iterator\n  */\n\tkeys() {\n\t\treturn createHeadersIterator(this, 'key');\n\t}\n\n\t/**\n  * Get an iterator on values.\n  *\n  * @return  Iterator\n  */\n\tvalues() {\n\t\treturn createHeadersIterator(this, 'value');\n\t}\n\n\t/**\n  * Get an iterator on entries.\n  *\n  * This is the default iterator of the Headers object.\n  *\n  * @return  Iterator\n  */\n\t[Symbol.iterator]() {\n\t\treturn createHeadersIterator(this, 'key+value');\n\t}\n}\nHeaders.prototype.entries = Headers.prototype[Symbol.iterator];\n\nObject.defineProperty(Headers.prototype, Symbol.toStringTag, {\n\tvalue: 'Headers',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Headers.prototype, {\n\tget: { enumerable: true },\n\tforEach: { enumerable: true },\n\tset: { enumerable: true },\n\tappend: { enumerable: true },\n\thas: { enumerable: true },\n\tdelete: { enumerable: true },\n\tkeys: { enumerable: true },\n\tvalues: { enumerable: true },\n\tentries: { enumerable: true }\n});\n\nfunction getHeaders(headers) {\n\tlet kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key+value';\n\n\tconst keys = Object.keys(headers[MAP]).sort();\n\treturn keys.map(kind === 'key' ? function (k) {\n\t\treturn k.toLowerCase();\n\t} : kind === 'value' ? function (k) {\n\t\treturn headers[MAP][k].join(', ');\n\t} : function (k) {\n\t\treturn [k.toLowerCase(), headers[MAP][k].join(', ')];\n\t});\n}\n\nconst INTERNAL = Symbol('internal');\n\nfunction createHeadersIterator(target, kind) {\n\tconst iterator = Object.create(HeadersIteratorPrototype);\n\titerator[INTERNAL] = {\n\t\ttarget,\n\t\tkind,\n\t\tindex: 0\n\t};\n\treturn iterator;\n}\n\nconst HeadersIteratorPrototype = Object.setPrototypeOf({\n\tnext() {\n\t\t// istanbul ignore if\n\t\tif (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {\n\t\t\tthrow new TypeError('Value of `this` is not a HeadersIterator');\n\t\t}\n\n\t\tvar _INTERNAL = this[INTERNAL];\n\t\tconst target = _INTERNAL.target,\n\t\t      kind = _INTERNAL.kind,\n\t\t      index = _INTERNAL.index;\n\n\t\tconst values = getHeaders(target, kind);\n\t\tconst len = values.length;\n\t\tif (index >= len) {\n\t\t\treturn {\n\t\t\t\tvalue: undefined,\n\t\t\t\tdone: true\n\t\t\t};\n\t\t}\n\n\t\tthis[INTERNAL].index = index + 1;\n\n\t\treturn {\n\t\t\tvalue: values[index],\n\t\t\tdone: false\n\t\t};\n\t}\n}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));\n\nObject.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {\n\tvalue: 'HeadersIterator',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * Export the Headers object in a form that Node.js can consume.\n *\n * @param   Headers  headers\n * @return  Object\n */\nfunction exportNodeCompatibleHeaders(headers) {\n\tconst obj = Object.assign({ __proto__: null }, headers[MAP]);\n\n\t// http.request() only supports string as Host header. This hack makes\n\t// specifying custom Host header possible.\n\tconst hostHeaderKey = find(headers[MAP], 'Host');\n\tif (hostHeaderKey !== undefined) {\n\t\tobj[hostHeaderKey] = obj[hostHeaderKey][0];\n\t}\n\n\treturn obj;\n}\n\n/**\n * Create a Headers object from an object of headers, ignoring those that do\n * not conform to HTTP grammar productions.\n *\n * @param   Object  obj  Object of headers\n * @return  Headers\n */\nfunction createHeadersLenient(obj) {\n\tconst headers = new Headers();\n\tfor (const name of Object.keys(obj)) {\n\t\tif (invalidTokenRegex.test(name)) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (Array.isArray(obj[name])) {\n\t\t\tfor (const val of obj[name]) {\n\t\t\t\tif (invalidHeaderCharRegex.test(val)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (headers[MAP][name] === undefined) {\n\t\t\t\t\theaders[MAP][name] = [val];\n\t\t\t\t} else {\n\t\t\t\t\theaders[MAP][name].push(val);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (!invalidHeaderCharRegex.test(obj[name])) {\n\t\t\theaders[MAP][name] = [obj[name]];\n\t\t}\n\t}\n\treturn headers;\n}\n\nconst INTERNALS$1 = Symbol('Response internals');\n\n// fix an issue where \"STATUS_CODES\" aren't a named export for node <10\nconst STATUS_CODES = http.STATUS_CODES;\n\n/**\n * Response class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nclass Response {\n\tconstructor() {\n\t\tlet body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t\tlet opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tBody.call(this, body, opts);\n\n\t\tconst status = opts.status || 200;\n\t\tconst headers = new Headers(opts.headers);\n\n\t\tif (body != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS$1] = {\n\t\t\turl: opts.url,\n\t\t\tstatus,\n\t\t\tstatusText: opts.statusText || STATUS_CODES[status],\n\t\t\theaders,\n\t\t\tcounter: opts.counter\n\t\t};\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS$1].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS$1].status;\n\t}\n\n\t/**\n  * Convenience property representing if the request ended normally\n  */\n\tget ok() {\n\t\treturn this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS$1].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS$1].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$1].headers;\n\t}\n\n\t/**\n  * Clone this response\n  *\n  * @return  Response\n  */\n\tclone() {\n\t\treturn new Response(clone(this), {\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok,\n\t\t\tredirected: this.redirected\n\t\t});\n\t}\n}\n\nBody.mixIn(Response.prototype);\n\nObject.defineProperties(Response.prototype, {\n\turl: { enumerable: true },\n\tstatus: { enumerable: true },\n\tok: { enumerable: true },\n\tredirected: { enumerable: true },\n\tstatusText: { enumerable: true },\n\theaders: { enumerable: true },\n\tclone: { enumerable: true }\n});\n\nObject.defineProperty(Response.prototype, Symbol.toStringTag, {\n\tvalue: 'Response',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nconst INTERNALS$2 = Symbol('Request internals');\nconst URL = Url.URL || whatwgUrl.URL;\n\n// fix an issue where \"format\", \"parse\" aren't a named export for node <10\nconst parse_url = Url.parse;\nconst format_url = Url.format;\n\n/**\n * Wrapper around `new URL` to handle arbitrary URLs\n *\n * @param  {string} urlStr\n * @return {void}\n */\nfunction parseURL(urlStr) {\n\t/*\n \tCheck whether the URL is absolute or not\n \t\tScheme: https://tools.ietf.org/html/rfc3986#section-3.1\n \tAbsolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\n */\n\tif (/^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.exec(urlStr)) {\n\t\turlStr = new URL(urlStr).toString();\n\t}\n\n\t// Fallback to old implementation for arbitrary URLs\n\treturn parse_url(urlStr);\n}\n\nconst streamDestructionSupported = 'destroy' in Stream.Readable.prototype;\n\n/**\n * Check if a value is an instance of Request.\n *\n * @param   Mixed   input\n * @return  Boolean\n */\nfunction isRequest(input) {\n\treturn typeof input === 'object' && typeof input[INTERNALS$2] === 'object';\n}\n\nfunction isAbortSignal(signal) {\n\tconst proto = signal && typeof signal === 'object' && Object.getPrototypeOf(signal);\n\treturn !!(proto && proto.constructor.name === 'AbortSignal');\n}\n\n/**\n * Request class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nclass Request {\n\tconstructor(input) {\n\t\tlet init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tlet parsedURL;\n\n\t\t// normalize input\n\t\tif (!isRequest(input)) {\n\t\t\tif (input && input.href) {\n\t\t\t\t// in order to support Node.js' Url objects; though WHATWG's URL objects\n\t\t\t\t// will fall into this branch also (since their `toString()` will return\n\t\t\t\t// `href` property anyway)\n\t\t\t\tparsedURL = parseURL(input.href);\n\t\t\t} else {\n\t\t\t\t// coerce input to a string before attempting to parse\n\t\t\t\tparsedURL = parseURL(`${input}`);\n\t\t\t}\n\t\t\tinput = {};\n\t\t} else {\n\t\t\tparsedURL = parseURL(input.url);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tmethod = method.toUpperCase();\n\n\t\tif ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tlet inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;\n\n\t\tBody.call(this, inputBody, {\n\t\t\ttimeout: init.timeout || input.timeout || 0,\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ? input.signal : null;\n\t\tif ('signal' in init) signal = init.signal;\n\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal');\n\t\t}\n\n\t\tthis[INTERNALS$2] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal\n\t\t};\n\n\t\t// node-fetch-only options\n\t\tthis.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;\n\t\tthis.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t}\n\n\tget method() {\n\t\treturn this[INTERNALS$2].method;\n\t}\n\n\tget url() {\n\t\treturn format_url(this[INTERNALS$2].parsedURL);\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$2].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS$2].redirect;\n\t}\n\n\tget signal() {\n\t\treturn this[INTERNALS$2].signal;\n\t}\n\n\t/**\n  * Clone this request\n  *\n  * @return  Request\n  */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n}\n\nBody.mixIn(Request.prototype);\n\nObject.defineProperty(Request.prototype, Symbol.toStringTag, {\n\tvalue: 'Request',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Request.prototype, {\n\tmethod: { enumerable: true },\n\turl: { enumerable: true },\n\theaders: { enumerable: true },\n\tredirect: { enumerable: true },\n\tclone: { enumerable: true },\n\tsignal: { enumerable: true }\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param   Request  A Request instance\n * @return  Object   The options object to be passed to http.request\n */\nfunction getNodeRequestOptions(request) {\n\tconst parsedURL = request[INTERNALS$2].parsedURL;\n\tconst headers = new Headers(request[INTERNALS$2].headers);\n\n\t// fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// Basic fetch\n\tif (!parsedURL.protocol || !parsedURL.hostname) {\n\t\tthrow new TypeError('Only absolute URLs are supported');\n\t}\n\n\tif (!/^https?:$/.test(parsedURL.protocol)) {\n\t\tthrow new TypeError('Only HTTP(S) protocols are supported');\n\t}\n\n\tif (request.signal && request.body instanceof Stream.Readable && !streamDestructionSupported) {\n\t\tthrow new Error('Cancellation of streamed requests with AbortSignal is not supported in node < 8');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body == null && /^(POST|PUT)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\tif (request.body != null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\tif (typeof totalBytes === 'number') {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip,deflate');\n\t}\n\n\tlet agent = request.agent;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\tif (!headers.has('Connection') && !agent) {\n\t\theaders.set('Connection', 'close');\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\treturn Object.assign({}, parsedURL, {\n\t\tmethod: request.method,\n\t\theaders: exportNodeCompatibleHeaders(headers),\n\t\tagent\n\t});\n}\n\n/**\n * abort-error.js\n *\n * AbortError interface for cancelled requests\n */\n\n/**\n * Create AbortError instance\n *\n * @param   String      message      Error message for human\n * @return  AbortError\n */\nfunction AbortError(message) {\n  Error.call(this, message);\n\n  this.type = 'aborted';\n  this.message = message;\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nAbortError.prototype = Object.create(Error.prototype);\nAbortError.prototype.constructor = AbortError;\nAbortError.prototype.name = 'AbortError';\n\nconst URL$1 = Url.URL || whatwgUrl.URL;\n\n// fix an issue where \"PassThrough\", \"resolve\" aren't a named export for node <10\nconst PassThrough$1 = Stream.PassThrough;\n\nconst isDomainOrSubdomain = function isDomainOrSubdomain(destination, original) {\n\tconst orig = new URL$1(original).hostname;\n\tconst dest = new URL$1(destination).hostname;\n\n\treturn orig === dest || orig[orig.length - dest.length - 1] === '.' && orig.endsWith(dest);\n};\n\n/**\n * Fetch function\n *\n * @param   Mixed    url   Absolute url or Request instance\n * @param   Object   opts  Fetch options\n * @return  Promise\n */\nfunction fetch(url, opts) {\n\n\t// allow custom promise\n\tif (!fetch.Promise) {\n\t\tthrow new Error('native promise missing, set fetch.Promise to your favorite alternative');\n\t}\n\n\tBody.Promise = fetch.Promise;\n\n\t// wrap http.request into fetch\n\treturn new fetch.Promise(function (resolve, reject) {\n\t\t// build request object\n\t\tconst request = new Request(url, opts);\n\t\tconst options = getNodeRequestOptions(request);\n\n\t\tconst send = (options.protocol === 'https:' ? https : http).request;\n\t\tconst signal = request.signal;\n\n\t\tlet response = null;\n\n\t\tconst abort = function abort() {\n\t\t\tlet error = new AbortError('The user aborted a request.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof Stream.Readable) {\n\t\t\t\trequest.body.destroy(error);\n\t\t\t}\n\t\t\tif (!response || !response.body) return;\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = function abortAndFinalize() {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// send request\n\t\tconst req = send(options);\n\t\tlet reqTimeout;\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tfunction finalize() {\n\t\t\treq.abort();\n\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\tclearTimeout(reqTimeout);\n\t\t}\n\n\t\tif (request.timeout) {\n\t\t\treq.once('socket', function (socket) {\n\t\t\t\treqTimeout = setTimeout(function () {\n\t\t\t\t\treject(new FetchError(`network timeout at: ${request.url}`, 'request-timeout'));\n\t\t\t\t\tfinalize();\n\t\t\t\t}, request.timeout);\n\t\t\t});\n\t\t}\n\n\t\treq.on('error', function (err) {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));\n\t\t\tfinalize();\n\t\t});\n\n\t\treq.on('response', function (res) {\n\t\t\tclearTimeout(reqTimeout);\n\n\t\t\tconst headers = createHeadersLenient(res.headers);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (fetch.isRedirect(res.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tlet locationURL = null;\n\t\t\t\ttry {\n\t\t\t\t\tlocationURL = location === null ? null : new URL$1(location, request.url).toString();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// error here can only be invalid URL in Location: header\n\t\t\t\t\t// do not throw when options.redirect == manual\n\t\t\t\t\t// let the user extract the errorneous redirect URL\n\t\t\t\t\tif (request.redirect !== 'manual') {\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with an invalid redirect URL: ${location}`, 'invalid-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.\n\t\t\t\t\t\tif (locationURL !== null) {\n\t\t\t\t\t\t\t// handle corrupted header\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\theaders.set('Location', locationURL);\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t// istanbul ignore next: nodejs server prevent invalid response headers, we can't test this through normal request\n\t\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow':\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOpts = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: request.body,\n\t\t\t\t\t\t\tsignal: request.signal,\n\t\t\t\t\t\t\ttimeout: request.timeout,\n\t\t\t\t\t\t\tsize: request.size\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (!isDomainOrSubdomain(request.url, locationURL)) {\n\t\t\t\t\t\t\tfor (const name of ['authorization', 'www-authenticate', 'cookie', 'cookie2']) {\n\t\t\t\t\t\t\t\trequestOpts.headers.delete(name);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === 'POST') {\n\t\t\t\t\t\t\trequestOpts.method = 'GET';\n\t\t\t\t\t\t\trequestOpts.body = undefined;\n\t\t\t\t\t\t\trequestOpts.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOpts)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// prepare response\n\t\t\tres.once('end', function () {\n\t\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\t});\n\t\t\tlet body = res.pipe(new PassThrough$1());\n\n\t\t\tconst response_options = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: res.statusCode,\n\t\t\t\tstatusText: res.statusMessage,\n\t\t\t\theaders: headers,\n\t\t\t\tsize: request.size,\n\t\t\t\ttimeout: request.timeout,\n\t\t\t\tcounter: request.counter\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || res.statusCode === 204 || res.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// for gzip\n\t\t\tif (codings == 'gzip' || codings == 'x-gzip') {\n\t\t\t\tbody = body.pipe(zlib.createGunzip(zlibOptions));\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for deflate\n\t\t\tif (codings == 'deflate' || codings == 'x-deflate') {\n\t\t\t\t// handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = res.pipe(new PassThrough$1());\n\t\t\t\traw.once('data', function (chunk) {\n\t\t\t\t\t// see http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflate());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflateRaw());\n\t\t\t\t\t}\n\t\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for br\n\t\t\tif (codings == 'br' && typeof zlib.createBrotliDecompress === 'function') {\n\t\t\t\tbody = body.pipe(zlib.createBrotliDecompress());\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// otherwise, use response as-is\n\t\t\tresponse = new Response(body, response_options);\n\t\t\tresolve(response);\n\t\t});\n\n\t\twriteToStream(req, request);\n\t});\n}\n/**\n * Redirect code matching\n *\n * @param   Number   code  Status code\n * @return  Boolean\n */\nfetch.isRedirect = function (code) {\n\treturn code === 301 || code === 302 || code === 303 || code === 307 || code === 308;\n};\n\n// expose Promise\nfetch.Promise = global.Promise;\n\nexport default fetch;\nexport { Headers, Request, Response, FetchError };\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","try {\n  var util = require('util');\n  /* istanbul ignore next */\n  if (typeof util.inherits !== 'function') throw '';\n  module.exports = util.inherits;\n} catch (e) {\n  /* istanbul ignore next */\n  module.exports = require('./inherits_browser.js');\n}\n","var inherits = require('inherits')\nvar EventEmitter = require('events').EventEmitter\n\nmodule.exports = Queue\nmodule.exports.default = Queue\n\nfunction Queue (options) {\n  if (!(this instanceof Queue)) {\n    return new Queue(options)\n  }\n\n  EventEmitter.call(this)\n  options = options || {}\n  this.concurrency = options.concurrency || Infinity\n  this.timeout = options.timeout || 0\n  this.autostart = options.autostart || false\n  this.results = options.results || null\n  this.pending = 0\n  this.session = 0\n  this.running = false\n  this.jobs = []\n  this.timers = {}\n}\ninherits(Queue, EventEmitter)\n\nvar arrayMethods = [\n  'pop',\n  'shift',\n  'indexOf',\n  'lastIndexOf'\n]\n\narrayMethods.forEach(function (method) {\n  Queue.prototype[method] = function () {\n    return Array.prototype[method].apply(this.jobs, arguments)\n  }\n})\n\nQueue.prototype.slice = function (begin, end) {\n  this.jobs = this.jobs.slice(begin, end)\n  return this\n}\n\nQueue.prototype.reverse = function () {\n  this.jobs.reverse()\n  return this\n}\n\nvar arrayAddMethods = [\n  'push',\n  'unshift',\n  'splice'\n]\n\narrayAddMethods.forEach(function (method) {\n  Queue.prototype[method] = function () {\n    var methodResult = Array.prototype[method].apply(this.jobs, arguments)\n    if (this.autostart) {\n      this.start()\n    }\n    return methodResult\n  }\n})\n\nObject.defineProperty(Queue.prototype, 'length', {\n  get: function () {\n    return this.pending + this.jobs.length\n  }\n})\n\nQueue.prototype.start = function (cb) {\n  if (cb) {\n    callOnErrorOrEnd.call(this, cb)\n  }\n\n  this.running = true\n\n  if (this.pending >= this.concurrency) {\n    return\n  }\n\n  if (this.jobs.length === 0) {\n    if (this.pending === 0) {\n      done.call(this)\n    }\n    return\n  }\n\n  var self = this\n  var job = this.jobs.shift()\n  var once = true\n  var session = this.session\n  var timeoutId = null\n  var didTimeout = false\n  var resultIndex = null\n  var timeout = job.hasOwnProperty('timeout') ? job.timeout : this.timeout\n\n  function next (err, result) {\n    if (once && self.session === session) {\n      once = false\n      self.pending--\n      if (timeoutId !== null) {\n        delete self.timers[timeoutId]\n        clearTimeout(timeoutId)\n      }\n\n      if (err) {\n        self.emit('error', err, job)\n      } else if (didTimeout === false) {\n        if (resultIndex !== null) {\n          self.results[resultIndex] = Array.prototype.slice.call(arguments, 1)\n        }\n        self.emit('success', result, job)\n      }\n\n      if (self.session === session) {\n        if (self.pending === 0 && self.jobs.length === 0) {\n          done.call(self)\n        } else if (self.running) {\n          self.start()\n        }\n      }\n    }\n  }\n\n  if (timeout) {\n    timeoutId = setTimeout(function () {\n      didTimeout = true\n      if (self.listeners('timeout').length > 0) {\n        self.emit('timeout', next, job)\n      } else {\n        next()\n      }\n    }, timeout)\n    this.timers[timeoutId] = timeoutId\n  }\n\n  if (this.results) {\n    resultIndex = this.results.length\n    this.results[resultIndex] = null\n  }\n\n  this.pending++\n  self.emit('start', job)\n  var promise = job(next)\n  if (promise && promise.then && typeof promise.then === 'function') {\n    promise.then(function (result) {\n      return next(null, result)\n    }).catch(function (err) {\n      return next(err || true)\n    })\n  }\n\n  if (this.running && this.jobs.length > 0) {\n    this.start()\n  }\n}\n\nQueue.prototype.stop = function () {\n  this.running = false\n}\n\nQueue.prototype.end = function (err) {\n  clearTimers.call(this)\n  this.jobs.length = 0\n  this.pending = 0\n  done.call(this, err)\n}\n\nfunction clearTimers () {\n  for (var key in this.timers) {\n    var timeoutId = this.timers[key]\n    delete this.timers[key]\n    clearTimeout(timeoutId)\n  }\n}\n\nfunction callOnErrorOrEnd (cb) {\n  var self = this\n  this.on('error', onerror)\n  this.on('end', onend)\n\n  function onerror (err) { self.end(err) }\n  function onend (err) {\n    self.removeListener('error', onerror)\n    self.removeListener('end', onend)\n    cb(err, this.results)\n  }\n}\n\nfunction done (err) {\n  this.session++\n  this.running = false\n  this.emit('end', err)\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BMP = void 0;\nexports.BMP = {\n    validate(buffer) {\n        return ('BM' === buffer.toString('ascii', 0, 2));\n    },\n    calculate(buffer) {\n        return {\n            height: Math.abs(buffer.readInt32LE(22)),\n            width: buffer.readUInt32LE(18)\n        };\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ICO = void 0;\nconst TYPE_ICON = 1;\n/**\n * ICON Header\n *\n * | Offset | Size | Purpose |\n * | 0\t    | 2    | Reserved. Must always be 0.  |\n * | 2      | 2    | Image type: 1 for icon (.ICO) image, 2 for cursor (.CUR) image. Other values are invalid. |\n * | 4      | 2    | Number of images in the file. |\n *\n */\nconst SIZE_HEADER = 2 + 2 + 2; // 6\n/**\n * Image Entry\n *\n * | Offset | Size | Purpose |\n * | 0\t    | 1    | Image width in pixels. Can be any number between 0 and 255. Value 0 means width is 256 pixels. |\n * | 1      | 1    | Image height in pixels. Can be any number between 0 and 255. Value 0 means height is 256 pixels. |\n * | 2      | 1    | Number of colors in the color palette. Should be 0 if the image does not use a color palette. |\n * | 3      | 1    | Reserved. Should be 0. |\n * | 4      | 2    | ICO format: Color planes. Should be 0 or 1. |\n * |        |      | CUR format: The horizontal coordinates of the hotspot in number of pixels from the left. |\n * | 6      | 2    | ICO format: Bits per pixel. |\n * |        |      | CUR format: The vertical coordinates of the hotspot in number of pixels from the top. |\n * | 8      | 4    | The size of the image's data in bytes |\n * | 12     | 4    | The offset of BMP or PNG data from the beginning of the ICO/CUR file |\n *\n */\nconst SIZE_IMAGE_ENTRY = 1 + 1 + 1 + 1 + 2 + 2 + 4 + 4; // 16\nfunction getSizeFromOffset(buffer, offset) {\n    const value = buffer.readUInt8(offset);\n    return value === 0 ? 256 : value;\n}\nfunction getImageSize(buffer, imageIndex) {\n    const offset = SIZE_HEADER + (imageIndex * SIZE_IMAGE_ENTRY);\n    return {\n        height: getSizeFromOffset(buffer, offset + 1),\n        width: getSizeFromOffset(buffer, offset)\n    };\n}\nexports.ICO = {\n    validate(buffer) {\n        if (buffer.readUInt16LE(0) !== 0) {\n            return false;\n        }\n        return buffer.readUInt16LE(2) === TYPE_ICON;\n    },\n    calculate(buffer) {\n        const nbImages = buffer.readUInt16LE(4);\n        const imageSize = getImageSize(buffer, 0);\n        if (nbImages === 1) {\n            return imageSize;\n        }\n        const imgs = [imageSize];\n        for (let imageIndex = 1; imageIndex < nbImages; imageIndex += 1) {\n            imgs.push(getImageSize(buffer, imageIndex));\n        }\n        const result = {\n            height: imageSize.height,\n            images: imgs,\n            width: imageSize.width\n        };\n        return result;\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CUR = void 0;\nconst ico_1 = require(\"./ico\");\nconst TYPE_CURSOR = 2;\nexports.CUR = {\n    validate(buffer) {\n        if (buffer.readUInt16LE(0) !== 0) {\n            return false;\n        }\n        return buffer.readUInt16LE(2) === TYPE_CURSOR;\n    },\n    calculate(buffer) {\n        return ico_1.ICO.calculate(buffer);\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DDS = void 0;\nexports.DDS = {\n    validate(buffer) {\n        return buffer.readUInt32LE(0) === 0x20534444;\n    },\n    calculate(buffer) {\n        return {\n            height: buffer.readUInt32LE(12),\n            width: buffer.readUInt32LE(16)\n        };\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GIF = void 0;\nconst gifRegexp = /^GIF8[79]a/;\nexports.GIF = {\n    validate(buffer) {\n        const signature = buffer.toString('ascii', 0, 6);\n        return (gifRegexp.test(signature));\n    },\n    calculate(buffer) {\n        return {\n            height: buffer.readUInt16LE(8),\n            width: buffer.readUInt16LE(6)\n        };\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ICNS = void 0;\n/**\n * ICNS Header\n *\n * | Offset | Size | Purpose                                                |\n * | 0\t    | 4    | Magic literal, must be \"icns\" (0x69, 0x63, 0x6e, 0x73) |\n * | 4      | 4    | Length of file, in bytes, msb first.                   |\n *\n */\nconst SIZE_HEADER = 4 + 4; // 8\nconst FILE_LENGTH_OFFSET = 4; // MSB => BIG ENDIAN\n/**\n * Image Entry\n *\n * | Offset | Size | Purpose                                                          |\n * | 0\t    | 4    | Icon type, see OSType below.                                     |\n * | 4      | 4    | Length of data, in bytes (including type and length), msb first. |\n * | 8      | n    | Icon data                                                        |\n */\nconst ENTRY_LENGTH_OFFSET = 4; // MSB => BIG ENDIAN\nconst ICON_TYPE_SIZE = {\n    ICON: 32,\n    'ICN#': 32,\n    // m => 16 x 16\n    'icm#': 16,\n    icm4: 16,\n    icm8: 16,\n    // s => 16 x 16\n    'ics#': 16,\n    ics4: 16,\n    ics8: 16,\n    is32: 16,\n    s8mk: 16,\n    icp4: 16,\n    // l => 32 x 32\n    icl4: 32,\n    icl8: 32,\n    il32: 32,\n    l8mk: 32,\n    icp5: 32,\n    ic11: 32,\n    // h => 48 x 48\n    ich4: 48,\n    ich8: 48,\n    ih32: 48,\n    h8mk: 48,\n    // . => 64 x 64\n    icp6: 64,\n    ic12: 32,\n    // t => 128 x 128\n    it32: 128,\n    t8mk: 128,\n    ic07: 128,\n    // . => 256 x 256\n    ic08: 256,\n    ic13: 256,\n    // . => 512 x 512\n    ic09: 512,\n    ic14: 512,\n    // . => 1024 x 1024\n    ic10: 1024,\n};\nfunction readImageHeader(buffer, imageOffset) {\n    const imageLengthOffset = imageOffset + ENTRY_LENGTH_OFFSET;\n    return [\n        buffer.toString('ascii', imageOffset, imageLengthOffset),\n        buffer.readUInt32BE(imageLengthOffset)\n    ];\n}\nfunction getImageSize(type) {\n    const size = ICON_TYPE_SIZE[type];\n    return { width: size, height: size, type };\n}\nexports.ICNS = {\n    validate(buffer) {\n        return ('icns' === buffer.toString('ascii', 0, 4));\n    },\n    calculate(buffer) {\n        const bufferLength = buffer.length;\n        const fileLength = buffer.readUInt32BE(FILE_LENGTH_OFFSET);\n        let imageOffset = SIZE_HEADER;\n        let imageHeader = readImageHeader(buffer, imageOffset);\n        let imageSize = getImageSize(imageHeader[0]);\n        imageOffset += imageHeader[1];\n        if (imageOffset === fileLength) {\n            return imageSize;\n        }\n        const result = {\n            height: imageSize.height,\n            images: [imageSize],\n            width: imageSize.width\n        };\n        while (imageOffset < fileLength && imageOffset < bufferLength) {\n            imageHeader = readImageHeader(buffer, imageOffset);\n            imageSize = getImageSize(imageHeader[0]);\n            imageOffset += imageHeader[1];\n            result.images.push(imageSize);\n        }\n        return result;\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.J2C = void 0;\nexports.J2C = {\n    validate(buffer) {\n        // TODO: this doesn't seem right. SIZ marker doesn't have to be right after the SOC\n        return buffer.toString('hex', 0, 4) === 'ff4fff51';\n    },\n    calculate(buffer) {\n        return {\n            height: buffer.readUInt32BE(12),\n            width: buffer.readUInt32BE(8),\n        };\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JP2 = void 0;\nconst BoxTypes = {\n    ftyp: '66747970',\n    ihdr: '69686472',\n    jp2h: '6a703268',\n    jp__: '6a502020',\n    rreq: '72726571',\n    xml_: '786d6c20'\n};\nconst calculateRREQLength = (box) => {\n    const unit = box.readUInt8(0);\n    let offset = 1 + (2 * unit);\n    const numStdFlags = box.readUInt16BE(offset);\n    const flagsLength = numStdFlags * (2 + unit);\n    offset = offset + 2 + flagsLength;\n    const numVendorFeatures = box.readUInt16BE(offset);\n    const featuresLength = numVendorFeatures * (16 + unit);\n    return offset + 2 + featuresLength;\n};\nconst parseIHDR = (box) => {\n    return {\n        height: box.readUInt32BE(4),\n        width: box.readUInt32BE(8),\n    };\n};\nexports.JP2 = {\n    validate(buffer) {\n        const signature = buffer.toString('hex', 4, 8);\n        const signatureLength = buffer.readUInt32BE(0);\n        if (signature !== BoxTypes.jp__ || signatureLength < 1) {\n            return false;\n        }\n        const ftypeBoxStart = signatureLength + 4;\n        const ftypBoxLength = buffer.readUInt32BE(signatureLength);\n        const ftypBox = buffer.slice(ftypeBoxStart, ftypeBoxStart + ftypBoxLength);\n        return ftypBox.toString('hex', 0, 4) === BoxTypes.ftyp;\n    },\n    calculate(buffer) {\n        const signatureLength = buffer.readUInt32BE(0);\n        const ftypBoxLength = buffer.readUInt16BE(signatureLength + 2);\n        let offset = signatureLength + 4 + ftypBoxLength;\n        const nextBoxType = buffer.toString('hex', offset, offset + 4);\n        switch (nextBoxType) {\n            case BoxTypes.rreq:\n                // WHAT ARE THESE 4 BYTES?????\n                // eslint-disable-next-line no-case-declarations\n                const MAGIC = 4;\n                offset = offset + 4 + MAGIC + calculateRREQLength(buffer.slice(offset + 4));\n                return parseIHDR(buffer.slice(offset + 8, offset + 24));\n            case BoxTypes.jp2h:\n                return parseIHDR(buffer.slice(offset + 8, offset + 24));\n            default:\n                throw new TypeError('Unsupported header found: ' + buffer.toString('ascii', offset, offset + 4));\n        }\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.readUInt = void 0;\n// Abstract reading multi-byte unsigned integers\nfunction readUInt(buffer, bits, offset, isBigEndian) {\n    offset = offset || 0;\n    const endian = isBigEndian ? 'BE' : 'LE';\n    const methodName = ('readUInt' + bits + endian);\n    return buffer[methodName].call(buffer, offset);\n}\nexports.readUInt = readUInt;\n","\"use strict\";\n// NOTE: we only support baseline and progressive JPGs here\n// due to the structure of the loader class, we only get a buffer\n// with a maximum size of 4096 bytes. so if the SOF marker is outside\n// if this range we can't detect the file size correctly.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JPG = void 0;\nconst readUInt_1 = require(\"../readUInt\");\nconst EXIF_MARKER = '45786966';\nconst APP1_DATA_SIZE_BYTES = 2;\nconst EXIF_HEADER_BYTES = 6;\nconst TIFF_BYTE_ALIGN_BYTES = 2;\nconst BIG_ENDIAN_BYTE_ALIGN = '4d4d';\nconst LITTLE_ENDIAN_BYTE_ALIGN = '4949';\n// Each entry is exactly 12 bytes\nconst IDF_ENTRY_BYTES = 12;\nconst NUM_DIRECTORY_ENTRIES_BYTES = 2;\nfunction isEXIF(buffer) {\n    return (buffer.toString('hex', 2, 6) === EXIF_MARKER);\n}\nfunction extractSize(buffer, index) {\n    return {\n        height: buffer.readUInt16BE(index),\n        width: buffer.readUInt16BE(index + 2)\n    };\n}\nfunction extractOrientation(exifBlock, isBigEndian) {\n    // TODO: assert that this contains 0x002A\n    // let STATIC_MOTOROLA_TIFF_HEADER_BYTES = 2\n    // let TIFF_IMAGE_FILE_DIRECTORY_BYTES = 4\n    // TODO: derive from TIFF_IMAGE_FILE_DIRECTORY_BYTES\n    const idfOffset = 8;\n    // IDF osset works from right after the header bytes\n    // (so the offset includes the tiff byte align)\n    const offset = EXIF_HEADER_BYTES + idfOffset;\n    const idfDirectoryEntries = readUInt_1.readUInt(exifBlock, 16, offset, isBigEndian);\n    for (let directoryEntryNumber = 0; directoryEntryNumber < idfDirectoryEntries; directoryEntryNumber++) {\n        const start = offset + NUM_DIRECTORY_ENTRIES_BYTES + (directoryEntryNumber * IDF_ENTRY_BYTES);\n        const end = start + IDF_ENTRY_BYTES;\n        // Skip on corrupt EXIF blocks\n        if (start > exifBlock.length) {\n            return;\n        }\n        const block = exifBlock.slice(start, end);\n        const tagNumber = readUInt_1.readUInt(block, 16, 0, isBigEndian);\n        // 0x0112 (decimal: 274) is the `orientation` tag ID\n        if (tagNumber === 274) {\n            const dataFormat = readUInt_1.readUInt(block, 16, 2, isBigEndian);\n            if (dataFormat !== 3) {\n                return;\n            }\n            // unsinged int has 2 bytes per component\n            // if there would more than 4 bytes in total it's a pointer\n            const numberOfComponents = readUInt_1.readUInt(block, 32, 4, isBigEndian);\n            if (numberOfComponents !== 1) {\n                return;\n            }\n            return readUInt_1.readUInt(block, 16, 8, isBigEndian);\n        }\n    }\n}\nfunction validateExifBlock(buffer, index) {\n    // Skip APP1 Data Size\n    const exifBlock = buffer.slice(APP1_DATA_SIZE_BYTES, index);\n    // Consider byte alignment\n    const byteAlign = exifBlock.toString('hex', EXIF_HEADER_BYTES, EXIF_HEADER_BYTES + TIFF_BYTE_ALIGN_BYTES);\n    // Ignore Empty EXIF. Validate byte alignment\n    const isBigEndian = byteAlign === BIG_ENDIAN_BYTE_ALIGN;\n    const isLittleEndian = byteAlign === LITTLE_ENDIAN_BYTE_ALIGN;\n    if (isBigEndian || isLittleEndian) {\n        return extractOrientation(exifBlock, isBigEndian);\n    }\n}\nfunction validateBuffer(buffer, index) {\n    // index should be within buffer limits\n    if (index > buffer.length) {\n        throw new TypeError('Corrupt JPG, exceeded buffer limits');\n    }\n    // Every JPEG block must begin with a 0xFF\n    if (buffer[index] !== 0xFF) {\n        throw new TypeError('Invalid JPG, marker table corrupted');\n    }\n}\nexports.JPG = {\n    validate(buffer) {\n        const SOIMarker = buffer.toString('hex', 0, 2);\n        return ('ffd8' === SOIMarker);\n    },\n    calculate(buffer) {\n        // Skip 4 chars, they are for signature\n        buffer = buffer.slice(4);\n        let orientation;\n        let next;\n        while (buffer.length) {\n            // read length of the next block\n            const i = buffer.readUInt16BE(0);\n            if (isEXIF(buffer)) {\n                orientation = validateExifBlock(buffer, i);\n            }\n            // ensure correct format\n            validateBuffer(buffer, i);\n            // 0xFFC0 is baseline standard(SOF)\n            // 0xFFC1 is baseline optimized(SOF)\n            // 0xFFC2 is progressive(SOF2)\n            next = buffer[i + 1];\n            if (next === 0xC0 || next === 0xC1 || next === 0xC2) {\n                const size = extractSize(buffer, i + 5);\n                // TODO: is orientation=0 a valid answer here?\n                if (!orientation) {\n                    return size;\n                }\n                return {\n                    height: size.height,\n                    orientation,\n                    width: size.width\n                };\n            }\n            // move to the next block\n            buffer = buffer.slice(i + 2);\n        }\n        throw new TypeError('Invalid JPG, no size found');\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.KTX = void 0;\nconst SIGNATURE = 'KTX 11';\nexports.KTX = {\n    validate(buffer) {\n        return SIGNATURE === buffer.toString('ascii', 1, 7);\n    },\n    calculate(buffer) {\n        return {\n            height: buffer.readUInt32LE(40),\n            width: buffer.readUInt32LE(36),\n        };\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PNG = void 0;\nconst pngSignature = 'PNG\\r\\n\\x1a\\n';\nconst pngImageHeaderChunkName = 'IHDR';\n// Used to detect \"fried\" png's: http://www.jongware.com/pngdefry.html\nconst pngFriedChunkName = 'CgBI';\nexports.PNG = {\n    validate(buffer) {\n        if (pngSignature === buffer.toString('ascii', 1, 8)) {\n            let chunkName = buffer.toString('ascii', 12, 16);\n            if (chunkName === pngFriedChunkName) {\n                chunkName = buffer.toString('ascii', 28, 32);\n            }\n            if (chunkName !== pngImageHeaderChunkName) {\n                throw new TypeError('Invalid PNG');\n            }\n            return true;\n        }\n        return false;\n    },\n    calculate(buffer) {\n        if (buffer.toString('ascii', 12, 16) === pngFriedChunkName) {\n            return {\n                height: buffer.readUInt32BE(36),\n                width: buffer.readUInt32BE(32)\n            };\n        }\n        return {\n            height: buffer.readUInt32BE(20),\n            width: buffer.readUInt32BE(16)\n        };\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PNM = void 0;\nconst PNMTypes = {\n    P1: 'pbm/ascii',\n    P2: 'pgm/ascii',\n    P3: 'ppm/ascii',\n    P4: 'pbm',\n    P5: 'pgm',\n    P6: 'ppm',\n    P7: 'pam',\n    PF: 'pfm'\n};\nconst Signatures = Object.keys(PNMTypes);\nconst handlers = {\n    default: (lines) => {\n        let dimensions = [];\n        while (lines.length > 0) {\n            const line = lines.shift();\n            if (line[0] === '#') {\n                continue;\n            }\n            dimensions = line.split(' ');\n            break;\n        }\n        if (dimensions.length === 2) {\n            return {\n                height: parseInt(dimensions[1], 10),\n                width: parseInt(dimensions[0], 10),\n            };\n        }\n        else {\n            throw new TypeError('Invalid PNM');\n        }\n    },\n    pam: (lines) => {\n        const size = {};\n        while (lines.length > 0) {\n            const line = lines.shift();\n            if (line.length > 16 || line.charCodeAt(0) > 128) {\n                continue;\n            }\n            const [key, value] = line.split(' ');\n            if (key && value) {\n                size[key.toLowerCase()] = parseInt(value, 10);\n            }\n            if (size.height && size.width) {\n                break;\n            }\n        }\n        if (size.height && size.width) {\n            return {\n                height: size.height,\n                width: size.width\n            };\n        }\n        else {\n            throw new TypeError('Invalid PAM');\n        }\n    }\n};\nexports.PNM = {\n    validate(buffer) {\n        const signature = buffer.toString('ascii', 0, 2);\n        return Signatures.includes(signature);\n    },\n    calculate(buffer) {\n        const signature = buffer.toString('ascii', 0, 2);\n        const type = PNMTypes[signature];\n        // TODO: this probably generates garbage. move to a stream based parser\n        const lines = buffer.toString('ascii', 3).split(/[\\r\\n]+/);\n        const handler = handlers[type] || handlers.default;\n        return handler(lines);\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PSD = void 0;\nexports.PSD = {\n    validate(buffer) {\n        return ('8BPS' === buffer.toString('ascii', 0, 4));\n    },\n    calculate(buffer) {\n        return {\n            height: buffer.readUInt32BE(14),\n            width: buffer.readUInt32BE(18)\n        };\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SVG = void 0;\nconst svgReg = /<svg\\s([^>\"']|\"[^\"]*\"|'[^']*')*>/;\nconst extractorRegExps = {\n    height: /\\sheight=(['\"])([^%]+?)\\1/,\n    root: svgReg,\n    viewbox: /\\sviewBox=(['\"])(.+?)\\1/i,\n    width: /\\swidth=(['\"])([^%]+?)\\1/,\n};\nconst INCH_CM = 2.54;\nconst units = {\n    in: 96,\n    cm: 96 / INCH_CM,\n    em: 16,\n    ex: 8,\n    m: 96 / INCH_CM * 100,\n    mm: 96 / INCH_CM / 10,\n    pc: 96 / 72 / 12,\n    pt: 96 / 72,\n    px: 1\n};\nconst unitsReg = new RegExp(`^([0-9.]+(?:e\\\\d+)?)(${Object.keys(units).join('|')})?$`);\nfunction parseLength(len) {\n    const m = unitsReg.exec(len);\n    if (!m) {\n        return undefined;\n    }\n    return Math.round(Number(m[1]) * (units[m[2]] || 1));\n}\nfunction parseViewbox(viewbox) {\n    const bounds = viewbox.split(' ');\n    return {\n        height: parseLength(bounds[3]),\n        width: parseLength(bounds[2])\n    };\n}\nfunction parseAttributes(root) {\n    const width = root.match(extractorRegExps.width);\n    const height = root.match(extractorRegExps.height);\n    const viewbox = root.match(extractorRegExps.viewbox);\n    return {\n        height: height && parseLength(height[2]),\n        viewbox: viewbox && parseViewbox(viewbox[2]),\n        width: width && parseLength(width[2]),\n    };\n}\nfunction calculateByDimensions(attrs) {\n    return {\n        height: attrs.height,\n        width: attrs.width,\n    };\n}\nfunction calculateByViewbox(attrs, viewbox) {\n    const ratio = viewbox.width / viewbox.height;\n    if (attrs.width) {\n        return {\n            height: Math.floor(attrs.width / ratio),\n            width: attrs.width,\n        };\n    }\n    if (attrs.height) {\n        return {\n            height: attrs.height,\n            width: Math.floor(attrs.height * ratio),\n        };\n    }\n    return {\n        height: viewbox.height,\n        width: viewbox.width,\n    };\n}\nexports.SVG = {\n    validate(buffer) {\n        const str = String(buffer);\n        return svgReg.test(str);\n    },\n    calculate(buffer) {\n        const root = buffer.toString('utf8').match(extractorRegExps.root);\n        if (root) {\n            const attrs = parseAttributes(root[0]);\n            if (attrs.width && attrs.height) {\n                return calculateByDimensions(attrs);\n            }\n            if (attrs.viewbox) {\n                return calculateByViewbox(attrs, attrs.viewbox);\n            }\n        }\n        throw new TypeError('Invalid SVG');\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TIFF = void 0;\n// based on http://www.compix.com/fileformattif.htm\n// TO-DO: support big-endian as well\nconst fs = require(\"fs\");\nconst readUInt_1 = require(\"../readUInt\");\n// Read IFD (image-file-directory) into a buffer\nfunction readIFD(buffer, filepath, isBigEndian) {\n    const ifdOffset = readUInt_1.readUInt(buffer, 32, 4, isBigEndian);\n    // read only till the end of the file\n    let bufferSize = 1024;\n    const fileSize = fs.statSync(filepath).size;\n    if (ifdOffset + bufferSize > fileSize) {\n        bufferSize = fileSize - ifdOffset - 10;\n    }\n    // populate the buffer\n    const endBuffer = Buffer.alloc(bufferSize);\n    const descriptor = fs.openSync(filepath, 'r');\n    fs.readSync(descriptor, endBuffer, 0, bufferSize, ifdOffset);\n    fs.closeSync(descriptor);\n    return endBuffer.slice(2);\n}\n// TIFF values seem to be messed up on Big-Endian, this helps\nfunction readValue(buffer, isBigEndian) {\n    const low = readUInt_1.readUInt(buffer, 16, 8, isBigEndian);\n    const high = readUInt_1.readUInt(buffer, 16, 10, isBigEndian);\n    return (high << 16) + low;\n}\n// move to the next tag\nfunction nextTag(buffer) {\n    if (buffer.length > 24) {\n        return buffer.slice(12);\n    }\n}\n// Extract IFD tags from TIFF metadata\nfunction extractTags(buffer, isBigEndian) {\n    const tags = {};\n    let temp = buffer;\n    while (temp && temp.length) {\n        const code = readUInt_1.readUInt(temp, 16, 0, isBigEndian);\n        const type = readUInt_1.readUInt(temp, 16, 2, isBigEndian);\n        const length = readUInt_1.readUInt(temp, 32, 4, isBigEndian);\n        // 0 means end of IFD\n        if (code === 0) {\n            break;\n        }\n        else {\n            // 256 is width, 257 is height\n            // if (code === 256 || code === 257) {\n            if (length === 1 && (type === 3 || type === 4)) {\n                tags[code] = readValue(temp, isBigEndian);\n            }\n            // move to the next tag\n            temp = nextTag(temp);\n        }\n    }\n    return tags;\n}\n// Test if the TIFF is Big Endian or Little Endian\nfunction determineEndianness(buffer) {\n    const signature = buffer.toString('ascii', 0, 2);\n    if ('II' === signature) {\n        return 'LE';\n    }\n    else if ('MM' === signature) {\n        return 'BE';\n    }\n}\nconst signatures = [\n    // '492049', // currently not supported\n    '49492a00',\n    '4d4d002a', // Big Endian\n    // '4d4d002a', // BigTIFF > 4GB. currently not supported\n];\nexports.TIFF = {\n    validate(buffer) {\n        return signatures.includes(buffer.toString('hex', 0, 4));\n    },\n    calculate(buffer, filepath) {\n        if (!filepath) {\n            throw new TypeError('Tiff doesn\\'t support buffer');\n        }\n        // Determine BE/LE\n        const isBigEndian = determineEndianness(buffer) === 'BE';\n        // read the IFD\n        const ifdBuffer = readIFD(buffer, filepath, isBigEndian);\n        // extract the tags from the IFD\n        const tags = extractTags(ifdBuffer, isBigEndian);\n        const width = tags[256];\n        const height = tags[257];\n        if (!width || !height) {\n            throw new TypeError('Invalid Tiff. Missing tags');\n        }\n        return { height, width };\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WEBP = void 0;\nfunction calculateExtended(buffer) {\n    return {\n        height: 1 + buffer.readUIntLE(7, 3),\n        width: 1 + buffer.readUIntLE(4, 3)\n    };\n}\nfunction calculateLossless(buffer) {\n    return {\n        height: 1 + (((buffer[4] & 0xF) << 10) | (buffer[3] << 2) | ((buffer[2] & 0xC0) >> 6)),\n        width: 1 + (((buffer[2] & 0x3F) << 8) | buffer[1])\n    };\n}\nfunction calculateLossy(buffer) {\n    // `& 0x3fff` returns the last 14 bits\n    // TO-DO: include webp scaling in the calculations\n    return {\n        height: buffer.readInt16LE(8) & 0x3fff,\n        width: buffer.readInt16LE(6) & 0x3fff\n    };\n}\nexports.WEBP = {\n    validate(buffer) {\n        const riffHeader = 'RIFF' === buffer.toString('ascii', 0, 4);\n        const webpHeader = 'WEBP' === buffer.toString('ascii', 8, 12);\n        const vp8Header = 'VP8' === buffer.toString('ascii', 12, 15);\n        return (riffHeader && webpHeader && vp8Header);\n    },\n    calculate(buffer) {\n        const chunkHeader = buffer.toString('ascii', 12, 16);\n        buffer = buffer.slice(20, 30);\n        // Extended webp stream signature\n        if (chunkHeader === 'VP8X') {\n            const extendedHeader = buffer[0];\n            const validStart = (extendedHeader & 0xc0) === 0;\n            const validEnd = (extendedHeader & 0x01) === 0;\n            if (validStart && validEnd) {\n                return calculateExtended(buffer);\n            }\n            else {\n                // TODO: breaking change\n                throw new TypeError('Invalid WebP');\n            }\n        }\n        // Lossless webp stream signature\n        if (chunkHeader === 'VP8 ' && buffer[0] !== 0x2f) {\n            return calculateLossy(buffer);\n        }\n        // Lossy webp stream signature\n        const signature = buffer.toString('hex', 3, 6);\n        if (chunkHeader === 'VP8L' && signature !== '9d012a') {\n            return calculateLossless(buffer);\n        }\n        throw new TypeError('Invalid WebP');\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.typeHandlers = void 0;\n// load all available handlers explicitely for browserify support\nconst bmp_1 = require(\"./types/bmp\");\nconst cur_1 = require(\"./types/cur\");\nconst dds_1 = require(\"./types/dds\");\nconst gif_1 = require(\"./types/gif\");\nconst icns_1 = require(\"./types/icns\");\nconst ico_1 = require(\"./types/ico\");\nconst j2c_1 = require(\"./types/j2c\");\nconst jp2_1 = require(\"./types/jp2\");\nconst jpg_1 = require(\"./types/jpg\");\nconst ktx_1 = require(\"./types/ktx\");\nconst png_1 = require(\"./types/png\");\nconst pnm_1 = require(\"./types/pnm\");\nconst psd_1 = require(\"./types/psd\");\nconst svg_1 = require(\"./types/svg\");\nconst tiff_1 = require(\"./types/tiff\");\nconst webp_1 = require(\"./types/webp\");\nexports.typeHandlers = {\n    bmp: bmp_1.BMP,\n    cur: cur_1.CUR,\n    dds: dds_1.DDS,\n    gif: gif_1.GIF,\n    icns: icns_1.ICNS,\n    ico: ico_1.ICO,\n    j2c: j2c_1.J2C,\n    jp2: jp2_1.JP2,\n    jpg: jpg_1.JPG,\n    ktx: ktx_1.KTX,\n    png: png_1.PNG,\n    pnm: pnm_1.PNM,\n    psd: psd_1.PSD,\n    svg: svg_1.SVG,\n    tiff: tiff_1.TIFF,\n    webp: webp_1.WEBP,\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.detector = void 0;\nconst types_1 = require(\"./types\");\nconst keys = Object.keys(types_1.typeHandlers);\n// This map helps avoid validating for every single image type\nconst firstBytes = {\n    0x38: 'psd',\n    0x42: 'bmp',\n    0x44: 'dds',\n    0x47: 'gif',\n    0x49: 'tiff',\n    0x4d: 'tiff',\n    0x52: 'webp',\n    0x69: 'icns',\n    0x89: 'png',\n    0xff: 'jpg'\n};\nfunction detector(buffer) {\n    const byte = buffer[0];\n    if (byte in firstBytes) {\n        const type = firstBytes[byte];\n        if (type && types_1.typeHandlers[type].validate(buffer)) {\n            return type;\n        }\n    }\n    const finder = (key) => types_1.typeHandlers[key].validate(buffer);\n    return keys.find(finder);\n}\nexports.detector = detector;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.types = exports.setConcurrency = exports.disableTypes = exports.disableFS = exports.imageSize = void 0;\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nconst queue_1 = require(\"queue\");\nconst types_1 = require(\"./types\");\nconst detector_1 = require(\"./detector\");\n// Maximum buffer size, with a default of 512 kilobytes.\n// TO-DO: make this adaptive based on the initial signature of the image\nconst MaxBufferSize = 512 * 1024;\n// This queue is for async `fs` operations, to avoid reaching file-descriptor limits\nconst queue = new queue_1.default({ concurrency: 100, autostart: true });\nconst globalOptions = {\n    disabledFS: false,\n    disabledTypes: []\n};\n/**\n * Return size information based on a buffer\n *\n * @param {Buffer} buffer\n * @param {String} filepath\n * @returns {Object}\n */\nfunction lookup(buffer, filepath) {\n    // detect the file type.. don't rely on the extension\n    const type = detector_1.detector(buffer);\n    if (typeof type !== 'undefined') {\n        if (globalOptions.disabledTypes.indexOf(type) > -1) {\n            throw new TypeError('disabled file type: ' + type);\n        }\n        // find an appropriate handler for this file type\n        if (type in types_1.typeHandlers) {\n            const size = types_1.typeHandlers[type].calculate(buffer, filepath);\n            if (size !== undefined) {\n                size.type = type;\n                return size;\n            }\n        }\n    }\n    // throw up, if we don't understand the file\n    throw new TypeError('unsupported file type: ' + type + ' (file: ' + filepath + ')');\n}\n/**\n * Reads a file into a buffer.\n * @param {String} filepath\n * @returns {Promise<Buffer>}\n */\nfunction asyncFileToBuffer(filepath) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const handle = yield fs.promises.open(filepath, 'r');\n        const { size } = yield handle.stat();\n        if (size <= 0) {\n            yield handle.close();\n            throw new Error('Empty file');\n        }\n        const bufferSize = Math.min(size, MaxBufferSize);\n        const buffer = Buffer.alloc(bufferSize);\n        yield handle.read(buffer, 0, bufferSize, 0);\n        yield handle.close();\n        return buffer;\n    });\n}\n/**\n * Synchronously reads a file into a buffer, blocking the nodejs process.\n *\n * @param {String} filepath\n * @returns {Buffer}\n */\nfunction syncFileToBuffer(filepath) {\n    // read from the file, synchronously\n    const descriptor = fs.openSync(filepath, 'r');\n    const { size } = fs.fstatSync(descriptor);\n    if (size <= 0) {\n        fs.closeSync(descriptor);\n        throw new Error('Empty file');\n    }\n    const bufferSize = Math.min(size, MaxBufferSize);\n    const buffer = Buffer.alloc(bufferSize);\n    fs.readSync(descriptor, buffer, 0, bufferSize, 0);\n    fs.closeSync(descriptor);\n    return buffer;\n}\n// eslint-disable-next-line @typescript-eslint/no-use-before-define\nmodule.exports = exports = imageSize; // backwards compatibility\nexports.default = imageSize;\n/**\n * @param {Buffer|string} input - buffer or relative/absolute path of the image file\n * @param {Function=} [callback] - optional function for async detection\n */\nfunction imageSize(input, callback) {\n    // Handle buffer input\n    if (Buffer.isBuffer(input)) {\n        return lookup(input);\n    }\n    // input should be a string at this point\n    if (typeof input !== 'string' || globalOptions.disabledFS) {\n        throw new TypeError('invalid invocation. input should be a Buffer');\n    }\n    // resolve the file path\n    const filepath = path.resolve(input);\n    if (typeof callback === 'function') {\n        queue.push(() => asyncFileToBuffer(filepath)\n            .then((buffer) => process.nextTick(callback, null, lookup(buffer, filepath)))\n            .catch(callback));\n    }\n    else {\n        const buffer = syncFileToBuffer(filepath);\n        return lookup(buffer, filepath);\n    }\n}\nexports.imageSize = imageSize;\nconst disableFS = (v) => { globalOptions.disabledFS = v; };\nexports.disableFS = disableFS;\nconst disableTypes = (types) => { globalOptions.disabledTypes = types; };\nexports.disableTypes = disableTypes;\nconst setConcurrency = (c) => { queue.concurrency = c; };\nexports.setConcurrency = setConcurrency;\nexports.types = Object.keys(types_1.typeHandlers);\n","export const arrayChunk = (arr, size) =>\n  arr.length > size\n    ? [arr.slice(0, size), ...arrayChunk(arr.slice(size), size)]\n    : [arr];\n","import fs from \"fs\";\nimport path from \"path\";\nimport NodeCache from \"node-cache\";\nimport fetch from \"node-fetch\";\nimport sizeOf from \"image-size\";\nimport sharp from \"sharp\";\nimport { arrayChunk } from \"./utils\";\n\ntype TImage = Buffer | string;\n\n/* getImageSize\n   =========================================== */\n\ntype TGetImageSizeParam = TImage;\ninterface IGetImageSizeReturn {\n  height: number;\n  width: number;\n  type?: string;\n}\n\ninterface IGetImageSize {\n  (file: TGetImageSizeParam): IGetImageSizeReturn;\n}\n\nconst getImageSize: IGetImageSize = (file) => {\n  const { width, height, type } = sizeOf(file);\n\n  return {\n    width,\n    height,\n    type,\n  };\n};\n\n/* loadImage\n   =========================================== */\n\nconst remoteImageCache = new NodeCache();\n\ninterface ILoadRemoteImage {\n  (src: string): Promise<Buffer>;\n}\n\nconst loadRemoteImage: ILoadRemoteImage = async (src) => {\n  const cachedImage = remoteImageCache.get(src);\n\n  if (typeof cachedImage === \"undefined\") {\n    const response = await fetch(src);\n    const buffer = await response.buffer();\n\n    remoteImageCache.set(src, buffer);\n\n    return buffer;\n  }\n\n  if (!Buffer.isBuffer(cachedImage))\n    throw Error(`Cached value for ${src} is invalid.`);\n\n  return cachedImage;\n};\n\ninterface ILoadImageImg extends IGetImageSizeReturn {\n  src: string;\n}\ninterface ILoadImageReturn {\n  img: ILoadImageImg;\n  file: TImage;\n}\n\ninterface ILoadImage {\n  (imagePath: TImage): Promise<ILoadImageReturn>;\n}\n\nconst loadImage: ILoadImage = async (imagePath) => {\n  if (Buffer.isBuffer(imagePath)) {\n    const imageSize = getImageSize(imagePath);\n\n    return {\n      file: imagePath,\n      img: {\n        src: null,\n        ...imageSize,\n      },\n    };\n  }\n\n  if (imagePath.startsWith(\"http\")) {\n    const buffer = await loadRemoteImage(imagePath);\n    const imageSize = getImageSize(buffer);\n\n    return {\n      file: buffer,\n      img: {\n        src: imagePath,\n        ...imageSize,\n      },\n    };\n  }\n\n  if (!imagePath.startsWith(\"/\"))\n    throw new Error(\n      `Failed to parse src \\\"${imagePath}\\\", if using relative image it must start with a leading slash \"/\"`\n    );\n\n  const file = path.join(\"./public/\", imagePath);\n  const imageSize = getImageSize(file);\n\n  return {\n    file,\n    img: {\n      src: imagePath,\n      ...imageSize,\n    },\n  };\n};\n\n/* optimizeImage\n   =========================================== */\n\ninterface IOptimizeImageOptions {\n  size?: number;\n}\ninterface IOptimizeImageReturn\n  extends Record<\n    | \"optimizedForBase64\"\n    | \"optimizedForBlurhash\"\n    | \"optimizedForCSS\"\n    | \"optimizedForSVG\",\n    {\n      data: Buffer;\n      info: sharp.OutputInfo;\n      rawBuffer: number[];\n      rows: number[][][];\n    }\n  > {}\n\ninterface IOptimizeImage {\n  (src: TImage, options?: IOptimizeImageOptions): Promise<IOptimizeImageReturn>;\n}\n\nconst optimizeImage: IOptimizeImage = async (src, options = { size: 4 }) => {\n  const sizeMin = 4;\n  const sizeMax = 64;\n\n  const isSizeValid = sizeMin <= options.size && options.size <= sizeMax;\n  !isSizeValid &&\n    console.error(\n      [\"Please enter a `size` value between\", sizeMin, \"and\", sizeMax].join(\" \")\n    );\n\n  const size = isSizeValid ? options.size : 4;\n\n  const pipeline = sharp(src).resize(size, size, {\n    fit: \"inside\",\n  });\n\n  const getOptimizedForBase64 = pipeline\n    .clone()\n    .normalise()\n    .modulate({ saturation: 1.2, brightness: 1 })\n    .removeAlpha()\n    .toBuffer({ resolveWithObject: true });\n\n  const getOptimizedForBlurhash = pipeline\n    .clone()\n    .raw()\n    .ensureAlpha()\n    .toBuffer({ resolveWithObject: true });\n\n  const getOptimizedForPixels = pipeline\n    .clone()\n    .raw()\n    .toBuffer({ resolveWithObject: true });\n\n  return Promise.all([\n    getOptimizedForBase64,\n    getOptimizedForBlurhash,\n    getOptimizedForPixels,\n  ])\n\n    .then((values) =>\n      values.map((value) => {\n        const { channels, width } = value.info;\n\n        const rawBuffer = [].concat(...value.data) as number[];\n        const pixels = arrayChunk(rawBuffer, channels);\n        const rows = arrayChunk(pixels, width);\n\n        return {\n          ...value,\n          rawBuffer,\n          rows,\n        };\n      })\n    )\n    .then((values) => ({\n      optimizedForBase64: values[0],\n      optimizedForBlurhash: values[1],\n      optimizedForCSS: values[2],\n      optimizedForSVG: values[2],\n    }))\n    .catch((err) => {\n      console.error(\"transform failed\", err);\n      throw err;\n    });\n};\n\n/* getImage\n   =========================================== */\n\nexport type TGetImageSrc = TImage;\nexport interface IGetImageOptions extends IOptimizeImageOptions {}\nexport interface IGetImageReturn\n  extends Omit<ILoadImageReturn, \"file\">,\n    IOptimizeImageReturn {}\n\nexport interface IGetImage {\n  (src: TGetImageSrc, options?: IGetImageOptions): Promise<IGetImageReturn>;\n}\n\nexport const getImage: IGetImage = async (src, options) => {\n  const { file, img } = await loadImage(src);\n  const optimized = await optimizeImage(file, options);\n\n  return {\n    img,\n    ...optimized,\n  };\n};\n","import { arrayChunk } from \"./utils\";\nimport type { IGetImageReturn } from \"./get-image\";\n\ntype TRects = [\n  \"rect\",\n  Record<\"width\" | \"height\" | \"x\" | \"y\" | \"fillOpacity\", {} & number> &\n    Record<\"fill\", {} & string>\n];\n\nconst rgb = (channels: string[]) => `rgb(${channels.slice(0, 3).join(\",\")})`;\nconst alphaToOpacity = (alpha: number) => ((alpha / 255) * 100) / 100;\n\ntype TGetImageReturnSVG = IGetImageReturn[\"optimizedForSVG\"];\n\nexport interface IGetSVGOptions extends TGetImageReturnSVG {}\nexport type TGetSVGReturn = [\n  \"svg\",\n  {\n    viewBox: string;\n    width: string;\n    height: string;\n    shapeRendering: string;\n    preserveAspectRatio: string;\n    style: any;\n    xmlns: string;\n  },\n  TRects[]\n];\n\nexport interface IGetSVG {\n  (options: IGetSVGOptions): TGetSVGReturn;\n}\n\nexport const getSVG: IGetSVG = ({ data, info, rawBuffer }) => {\n  const { channels, width, height } = info;\n\n  const pixels = arrayChunk(rawBuffer, channels).map((value) => {\n    const channelToProps = {\n      3: { fill: rgb(value), fillOpacity: 1 },\n      4: {\n        fill: rgb(value),\n        fillOpacity: alphaToOpacity(value[3]),\n      },\n    };\n\n    if (!channelToProps.hasOwnProperty(channels)) {\n      throw new Error(\n        `Images with ${channels} channels aren't currently supported`\n      );\n    }\n\n    return channelToProps[channels];\n  });\n\n  const chunkRects = arrayChunk(pixels, width).map((row, y) =>\n    row.map((col, x): TRects[] => [\n      \"rect\",\n      {\n        ...col,\n        width: 1,\n        height: 1,\n        x,\n        y,\n      },\n    ])\n  );\n\n  if (chunkRects.length !== height) {\n    console.error(\n      \"Woops! Something went wrong here and caused the color height to differ from the source height.\"\n    );\n  }\n\n  const rects: TRects[] = [].concat(...chunkRects);\n\n  return [\n    \"svg\",\n    {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      width: \"100%\",\n      height: \"100%\",\n      shapeRendering: \"crispEdges\",\n      preserveAspectRatio: \"none\",\n      viewBox: `0 0 ${width} ${height}`,\n      style: {\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        transformOrigin: \"top left\",\n        transform: \"translate(-50%, -50%)\",\n        right: 0,\n        bottom: 0,\n      },\n    },\n    rects,\n  ];\n};\n","import { getBase64, TGetBase64Return } from \"./base64\";\nimport { getBlurhash, IGetBlurhashReturn } from \"./blurhash\";\nimport { getCSS, IGetCSSReturn } from \"./css\";\nimport {\n  getImage,\n  TGetImageSrc,\n  IGetImageOptions,\n  IGetImageReturn,\n} from \"./get-image\";\nimport { getSVG, TGetSVGReturn } from \"./svg\";\n\nexport type TGetPlaiceholderSrc = TGetImageSrc;\nexport interface IGetPlaiceholderOptions extends IGetImageOptions {}\nexport interface IGetPlaiceholderReturn extends Pick<IGetImageReturn, \"img\"> {\n  base64: TGetBase64Return;\n  blurhash: IGetBlurhashReturn;\n  css: IGetCSSReturn;\n  svg: TGetSVGReturn;\n}\n\nexport interface IGetPlaiceholder {\n  (\n    src: TGetPlaiceholderSrc,\n    options?: IGetPlaiceholderOptions\n  ): Promise<IGetPlaiceholderReturn>;\n}\n\nexport const getPlaiceholder: IGetPlaiceholder = async (src, options) => {\n  const {\n    img,\n    optimizedForBase64,\n    optimizedForBlurhash,\n    optimizedForCSS,\n    optimizedForSVG,\n  } = await getImage(src, options);\n\n  return Promise.all([\n    getBase64(optimizedForBase64),\n    getBlurhash(optimizedForBlurhash),\n    getCSS(optimizedForCSS),\n    getSVG(optimizedForSVG),\n  ]).then((values) => {\n    const [base64, blurhash, css, svg] = values;\n\n    return {\n      img,\n      css,\n      base64,\n      blurhash,\n      svg,\n    };\n  });\n};\n","export const ACCEPTED_FILE_TYPES = [\"jpeg\", \"png\"] as const;\n"],"names":["getBase64","data","info","format","toString","sign","getBlurhash","width","height","hash","encode","Uint8ClampedArray","rgb","channels","length","join","getCSS","rows","linearGradients","map","row","pixels","pixel","gradient","i","start","end","console","error","backgroundPosition","_","backgroundSize","backgroundImage","backgroundRepeat","clone","_instanceof","obj","type","nativeMap","Map","nativeSet","Set","nativePromise","Promise","parent","circular","depth","prototype","includeNonEnumerable","allParents","allChildren","useBuffer","Buffer","Infinity","_clone","child","proto","resolve","reject","then","value","err","__isArray","__isRegExp","RegExp","source","__getRegExpFlags","lastIndex","__isDate","Date","getTime","isBuffer","allocUnsafe","copy","Error","Object","create","getPrototypeOf","index","indexOf","push","forEach","key","keyChild","valueChild","set","entryChild","add","attrs","getOwnPropertyDescriptor","getOwnPropertySymbols","symbols","symbol","descriptor","enumerable","defineProperty","allPropertyNames","getOwnPropertyNames","propertyName","clonePrototype","c","__objToStr","o","call","re","flags","global","ignoreCase","multiline","module","exports","EventEmitter","splice","boundMethodCheck","instance","Constructor","require$$0","require$$1","NodeCache","constructor","options","get","bind","mget","mset","del","take","ttl","getTtl","keys","has","getStats","flushAll","flushStats","close","_checkData","_check","_isInvalidKey","_wrap","_getValLength","_error","_initErrors","assign","forceString","objectValueSize","promiseValueSize","arrayValueSize","stdTTL","checkperiod","useClones","deleteOnExpire","enableLegacyCallbacks","maxKeys","warn","methodKey","oldMethod","args","cb","ref","res","error1","stats","hits","misses","ksize","vsize","validKeyTypes","_ret","_unwrap","_err","len","oRet","Array","isArray","existent","JSON","stringify","_getKeyLength","emit","keyValueSet","j","keyValuePair","len1","val","delCount","oldVal","v","_ttl","t","_keys","_exists","_startPeriod","_killCheckPeriod","startPeriod","checkTimeout","setTimeout","unref","clearTimeout","_retval","now","asClone","livetime","ttlMultiplicator","name","errorcode","message","ERRORS","_errMsg","_errT","_ERRORS","createErrorMessage","errMsg","replace","this","version","conversions","x","evenRound","Math","floor","round","createNumberConversion","bitLength","typeOpts","unsigned","lowerBound","pow","upperBound","moduloVal","moduloBitLength","moduloBound","V","opts","enforceRange","Number","isFinite","TypeError","abs","isNaN","clamp","undefined","treatNullAsEmptyString","String","codePointAt","S","n","U","charCodeAt","fromCodePoint","d","a","b","mixin","target","Symbol","impl","wrapperSymbol","wrapper","implSymbol","PROCESSING_OPTIONS","TRANSITIONAL","NONTRANSITIONAL","normalize","str","split","s","findStatus","mappingTable","mid","regexAstralSymbols","countSymbols","string","mapChars","domain_name","useSTD3","processing_option","hasError","processed","codePoint","status","apply","combiningMarksRegex","validateLabel","label","substr","punycode","toUnicode","search","processing","result","labels","validation","e","verifyDnsLength","l","toASCII","total","slice","domain","specialSchemes","ftp","file","gopher","http","https","ws","wss","failure","ucs2","decode","at","input","idx","isASCIIDigit","isASCIIAlpha","isASCIIAlphanumeric","isASCIIHex","isSingleDot","buffer","toLowerCase","isDoubleDot","isWindowsDriveLetterCodePoints","cp1","cp2","isWindowsDriveLetterString","isNormalizedWindowsDriveLetterString","containsForbiddenHostCodePoint","containsForbiddenHostCodePointExcludingPercent","isSpecialScheme","scheme","isSpecial","url","defaultPort","percentEncode","hex","toUpperCase","utf8PercentEncode","buf","utf8PercentDecode","output","parseInt","isC0ControlPercentEncode","extraPathPercentEncodeSet","isPathPercentEncode","extraUserinfoPercentEncodeSet","isUserinfoPercentEncode","percentEncodeChar","encodeSetPredicate","cStr","parseIPv4Number","R","charAt","substring","regex","test","parseIPv4","parts","pop","numbers","part","ipv4","counter","serializeIPv4","address","parseIPv6","pieceIndex","compress","pointer","numbersSeen","ipv4Piece","number","swaps","temp","serializeIPv6","seqResult","findLongestZeroSequence","ignore0","separator","parseHost","isSpecialArg","parseOpaqueHost","asciiDomain","tr46","ipv4Host","decoded","arr","maxIdx","maxLen","currStart","currLen","serializeHost","host","trimControlChars","trimTabAndNewline","shortenPath","path","isNormalizedWindowsDriveLetter","includesCredentials","username","password","cannotHaveAUsernamePasswordPort","cannotBeABaseURL","URLStateMachine","base","encodingOverride","stateOverride","parseError","port","query","fragment","state","atFlag","arrFlag","passwordTokenSeenFlag","ret","parseSchemeStart","parseScheme","parseNoScheme","parseSpecialRelativeOrAuthority","parsePathOrAuthority","parseRelative","parseRelativeSlash","parseSpecialAuthoritySlashes","parseSpecialAuthorityIgnoreSlashes","parseAuthority","encodedCodePoints","parseHostName","parsePort","fileOtherwiseCodePoints","parseFile","parseFileSlash","parseFileHost","parsePathStart","parsePath","shift","parseCannotBeABaseURLPath","parseQuery","parseFragment","serializeURL","excludeFragment","serializeOrigin","tuple","serializeURLOrigin","parseURL","usm","baseURL","integer","basicURLParse","URLImpl","constructorArgs","parsedBase","parsedURL","_url","href","origin","protocol","setTheUsername","setThePassword","serializeInteger","hostname","pathname","toJSON","utils","URL","arguments","setup","is","configurable","Impl","implementation","privateData","interface","expose","Window","Worker","Readable","Stream","BUFFER","TYPE","Blob","blobParts","buffers","element","ArrayBuffer","isView","from","byteOffset","byteLength","concat","size","text","arrayBuffer","ab","stream","readable","_read","relativeStart","relativeEnd","max","min","span","slicedBuffer","blob","defineProperties","toStringTag","writable","FetchError","systemError","code","errno","captureStackTrace","convert","require","INTERNALS","PassThrough","Body","body","_this","_ref","_ref$size","_ref$timeout","timeout","isURLSearchParams","isBlob","disturbed","on","bodyUsed","consumeBody","ct","headers","json","_this2","parse","textConverted","_this3","convertBody","mixIn","desc","_this4","alloc","accum","accumBytes","abort","resTimeout","chunk","charset","exec","append","delete","getAll","sort","p1","p2","getBoundary","pipe","extractContentType","getTotalBytes","getLengthSync","_lengthRetrievers","hasKnownLength","writeToStream","dest","write","invalidTokenRegex","invalidHeaderCharRegex","validateName","validateValue","find","MAP","Headers","init","rawHeaders","raw","headerNames","headerName","method","iterator","pairs","pair","callback","thisArg","getHeaders","_pairs$i","createHeadersIterator","values","entries","kind","k","INTERNAL","HeadersIteratorPrototype","setPrototypeOf","next","_INTERNAL","done","exportNodeCompatibleHeaders","__proto__","hostHeaderKey","createHeadersLenient","INTERNALS$1","STATUS_CODES","Response","contentType","statusText","ok","redirected","INTERNALS$2","Url","whatwgUrl","parse_url","format_url","urlStr","streamDestructionSupported","isRequest","isAbortSignal","signal","Request","inputBody","redirect","follow","agent","getNodeRequestOptions","request","contentLengthValue","totalBytes","AbortError","URL$1","PassThrough$1","isDomainOrSubdomain","destination","original","orig","endsWith","fetch","send","response","destroy","aborted","abortAndFinalize","finalize","req","reqTimeout","addEventListener","removeEventListener","once","socket","isRedirect","statusCode","location","locationURL","requestOpts","response_options","statusMessage","codings","zlibOptions","flush","zlib","Z_SYNC_FLUSH","finishFlush","createGunzip","createInflate","createInflateRaw","createBrotliDecompress","inherits","ctor","superCtor","super_","TempCtor","util","Queue","concurrency","autostart","results","pending","session","running","jobs","timers","arrayMethods","begin","reverse","arrayAddMethods","methodResult","callOnErrorOrEnd","self","job","timeoutId","didTimeout","resultIndex","hasOwnProperty","listeners","promise","catch","stop","clearTimers","onerror","onend","removeListener","validate","calculate","readInt32LE","readUInt32LE","TYPE_ICON","SIZE_HEADER","SIZE_IMAGE_ENTRY","getSizeFromOffset","offset","readUInt8","getImageSize","imageIndex","readUInt16LE","nbImages","imageSize","imgs","images","TYPE_CURSOR","ico_1","ICO","gifRegexp","signature","FILE_LENGTH_OFFSET","ENTRY_LENGTH_OFFSET","ICON_TYPE_SIZE","ICON","icm4","icm8","ics4","ics8","is32","s8mk","icp4","icl4","icl8","il32","l8mk","icp5","ic11","ich4","ich8","ih32","h8mk","icp6","ic12","it32","t8mk","ic07","ic08","ic13","ic09","ic14","ic10","readImageHeader","imageOffset","imageLengthOffset","readUInt32BE","bufferLength","fileLength","imageHeader","BoxTypes","ftyp","ihdr","jp2h","jp__","rreq","xml_","calculateRREQLength","box","unit","numStdFlags","readUInt16BE","flagsLength","numVendorFeatures","featuresLength","parseIHDR","signatureLength","ftypeBoxStart","ftypBoxLength","ftypBox","nextBoxType","MAGIC","readUInt","bits","isBigEndian","endian","methodName","EXIF_MARKER","APP1_DATA_SIZE_BYTES","EXIF_HEADER_BYTES","TIFF_BYTE_ALIGN_BYTES","BIG_ENDIAN_BYTE_ALIGN","LITTLE_ENDIAN_BYTE_ALIGN","IDF_ENTRY_BYTES","NUM_DIRECTORY_ENTRIES_BYTES","isEXIF","extractSize","extractOrientation","exifBlock","idfOffset","idfDirectoryEntries","readUInt_1","directoryEntryNumber","block","tagNumber","dataFormat","numberOfComponents","validateExifBlock","byteAlign","isLittleEndian","validateBuffer","SOIMarker","orientation","SIGNATURE","pngSignature","pngImageHeaderChunkName","pngFriedChunkName","chunkName","PNMTypes","P1","P2","P3","P4","P5","P6","P7","PF","Signatures","handlers","default","lines","dimensions","line","pam","includes","handler","svgReg","extractorRegExps","root","viewbox","INCH_CM","units","in","cm","em","ex","m","mm","pc","pt","px","unitsReg","parseLength","parseViewbox","bounds","parseAttributes","match","calculateByDimensions","calculateByViewbox","ratio","readIFD","filepath","ifdOffset","bufferSize","fileSize","fs","statSync","endBuffer","openSync","readSync","closeSync","readValue","low","high","nextTag","extractTags","tags","determineEndianness","signatures","ifdBuffer","calculateExtended","readUIntLE","calculateLossless","calculateLossy","readInt16LE","riffHeader","webpHeader","vp8Header","chunkHeader","extendedHeader","validStart","validEnd","bmp","bmp_1","BMP","cur","cur_1","CUR","dds","dds_1","DDS","gif","gif_1","GIF","icns","icns_1","ICNS","ico","j2c","j2c_1","J2C","jp2","jp2_1","JP2","jpg","jpg_1","JPG","ktx","ktx_1","KTX","png","png_1","PNG","pnm","pnm_1","PNM","psd","psd_1","PSD","svg","svg_1","SVG","tiff","tiff_1","TIFF","webp","webp_1","WEBP","types_1","typeHandlers","firstBytes","detector","byte","finder","__awaiter","_arguments","P","generator","adopt","fulfilled","step","rejected","MaxBufferSize","queue","queue_1","globalOptions","disabledFS","disabledTypes","lookup","detector_1","asyncFileToBuffer","handle","promises","open","stat","read","syncFileToBuffer","fstatSync","process","nextTick","disableFS","disableTypes","types","setConcurrency","arrayChunk","sizeOf","remoteImageCache","loadRemoteImage","src","cachedImage","loadImage","imagePath","img","startsWith","optimizeImage","sizeMin","sizeMax","isSizeValid","pipeline","sharp","resize","fit","getOptimizedForBase64","normalise","modulate","saturation","brightness","removeAlpha","toBuffer","resolveWithObject","getOptimizedForBlurhash","ensureAlpha","getOptimizedForPixels","all","rawBuffer","optimizedForBase64","optimizedForBlurhash","optimizedForCSS","optimizedForSVG","getImage","optimized","alphaToOpacity","alpha","getSVG","channelToProps","fill","fillOpacity","chunkRects","y","col","rects","xmlns","shapeRendering","preserveAspectRatio","viewBox","style","position","top","left","transformOrigin","transform","right","bottom","getPlaiceholder","base64","blurhash","css","ACCEPTED_FILE_TYPES"],"mappings":"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;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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"}