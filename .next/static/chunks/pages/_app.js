/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["pages/_app"],{

/***/ "./node_modules/@liveblocks/client/lib/esm/authentication.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@liveblocks/client/lib/esm/authentication.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ auth; },\n/* harmony export */   \"parseToken\": function() { return /* binding */ parseToken; }\n/* harmony export */ });\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nfunction fetchAuthorize(endpoint, room) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const res = yield fetch(endpoint, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                room,\n            }),\n        });\n        if (!res.ok) {\n            throw new AuthenticationError(`Authentication error. Liveblocks could not parse the response of your authentication \"${endpoint}\"`);\n        }\n        let authResponse = null;\n        try {\n            authResponse = yield res.json();\n        }\n        catch (er) {\n            throw new AuthenticationError(`Authentication error. Liveblocks could not parse the response of your authentication \"${endpoint}\"`);\n        }\n        if (typeof authResponse.token !== \"string\") {\n            throw new AuthenticationError(`Authentication error. Liveblocks could not parse the response of your authentication \"${endpoint}\"`);\n        }\n        return authResponse.token;\n    });\n}\nfunction auth(endpoint, room) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (typeof endpoint === \"string\") {\n            return fetchAuthorize(endpoint, room);\n        }\n        if (typeof endpoint === \"function\") {\n            const { token } = yield endpoint(room);\n            // TODO: Validation\n            return token;\n        }\n        throw new Error(\"Authentication error. Liveblocks could not parse the response of your authentication endpoint\");\n    });\n}\nclass AuthenticationError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\nfunction parseToken(token) {\n    const tokenParts = token.split(\".\");\n    if (tokenParts.length !== 3) {\n        throw new AuthenticationError(`Authentication error. Liveblocks could not parse the response of your authentication endpoint`);\n    }\n    const data = JSON.parse(atob(tokenParts[1]));\n    if (typeof data.actor !== \"number\") {\n        throw new AuthenticationError(`Authentication error. Liveblocks could not parse the response of your authentication endpoint`);\n    }\n    return data;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGxpdmVibG9ja3MvY2xpZW50L2xpYi9lc20vYXV0aGVudGljYXRpb24uanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxpQkFBaUIsU0FBSSxJQUFJLFNBQUk7QUFDN0IsNEJBQTRCLCtEQUErRCxpQkFBaUI7QUFDNUc7QUFDQSxvQ0FBb0MsTUFBTSwrQkFBK0IsWUFBWTtBQUNyRixtQ0FBbUMsTUFBTSxtQ0FBbUMsWUFBWTtBQUN4RixnQ0FBZ0M7QUFDaEM7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQSxtSUFBbUksU0FBUztBQUM1STtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtSUFBbUksU0FBUztBQUM1STtBQUNBO0FBQ0EsbUlBQW1JLFNBQVM7QUFDNUk7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixRQUFRO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BsaXZlYmxvY2tzL2NsaWVudC9saWIvZXNtL2F1dGhlbnRpY2F0aW9uLmpzPzVjNWEiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XG4gICAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9XG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcbiAgICB9KTtcbn07XG5mdW5jdGlvbiBmZXRjaEF1dGhvcml6ZShlbmRwb2ludCwgcm9vbSkge1xuICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgIGNvbnN0IHJlcyA9IHlpZWxkIGZldGNoKGVuZHBvaW50LCB7XG4gICAgICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxuICAgICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgICAgICAgICByb29tLFxuICAgICAgICAgICAgfSksXG4gICAgICAgIH0pO1xuICAgICAgICBpZiAoIXJlcy5vaykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEF1dGhlbnRpY2F0aW9uRXJyb3IoYEF1dGhlbnRpY2F0aW9uIGVycm9yLiBMaXZlYmxvY2tzIGNvdWxkIG5vdCBwYXJzZSB0aGUgcmVzcG9uc2Ugb2YgeW91ciBhdXRoZW50aWNhdGlvbiBcIiR7ZW5kcG9pbnR9XCJgKTtcbiAgICAgICAgfVxuICAgICAgICBsZXQgYXV0aFJlc3BvbnNlID0gbnVsbDtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGF1dGhSZXNwb25zZSA9IHlpZWxkIHJlcy5qc29uKCk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGVyKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgQXV0aGVudGljYXRpb25FcnJvcihgQXV0aGVudGljYXRpb24gZXJyb3IuIExpdmVibG9ja3MgY291bGQgbm90IHBhcnNlIHRoZSByZXNwb25zZSBvZiB5b3VyIGF1dGhlbnRpY2F0aW9uIFwiJHtlbmRwb2ludH1cImApO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0eXBlb2YgYXV0aFJlc3BvbnNlLnRva2VuICE9PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgQXV0aGVudGljYXRpb25FcnJvcihgQXV0aGVudGljYXRpb24gZXJyb3IuIExpdmVibG9ja3MgY291bGQgbm90IHBhcnNlIHRoZSByZXNwb25zZSBvZiB5b3VyIGF1dGhlbnRpY2F0aW9uIFwiJHtlbmRwb2ludH1cImApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBhdXRoUmVzcG9uc2UudG9rZW47XG4gICAgfSk7XG59XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBhdXRoKGVuZHBvaW50LCByb29tKSB7XG4gICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBlbmRwb2ludCA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgcmV0dXJuIGZldGNoQXV0aG9yaXplKGVuZHBvaW50LCByb29tKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodHlwZW9mIGVuZHBvaW50ID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgIGNvbnN0IHsgdG9rZW4gfSA9IHlpZWxkIGVuZHBvaW50KHJvb20pO1xuICAgICAgICAgICAgLy8gVE9ETzogVmFsaWRhdGlvblxuICAgICAgICAgICAgcmV0dXJuIHRva2VuO1xuICAgICAgICB9XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkF1dGhlbnRpY2F0aW9uIGVycm9yLiBMaXZlYmxvY2tzIGNvdWxkIG5vdCBwYXJzZSB0aGUgcmVzcG9uc2Ugb2YgeW91ciBhdXRoZW50aWNhdGlvbiBlbmRwb2ludFwiKTtcbiAgICB9KTtcbn1cbmNsYXNzIEF1dGhlbnRpY2F0aW9uRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gICAgY29uc3RydWN0b3IobWVzc2FnZSkge1xuICAgICAgICBzdXBlcihtZXNzYWdlKTtcbiAgICB9XG59XG5leHBvcnQgZnVuY3Rpb24gcGFyc2VUb2tlbih0b2tlbikge1xuICAgIGNvbnN0IHRva2VuUGFydHMgPSB0b2tlbi5zcGxpdChcIi5cIik7XG4gICAgaWYgKHRva2VuUGFydHMubGVuZ3RoICE9PSAzKSB7XG4gICAgICAgIHRocm93IG5ldyBBdXRoZW50aWNhdGlvbkVycm9yKGBBdXRoZW50aWNhdGlvbiBlcnJvci4gTGl2ZWJsb2NrcyBjb3VsZCBub3QgcGFyc2UgdGhlIHJlc3BvbnNlIG9mIHlvdXIgYXV0aGVudGljYXRpb24gZW5kcG9pbnRgKTtcbiAgICB9XG4gICAgY29uc3QgZGF0YSA9IEpTT04ucGFyc2UoYXRvYih0b2tlblBhcnRzWzFdKSk7XG4gICAgaWYgKHR5cGVvZiBkYXRhLmFjdG9yICE9PSBcIm51bWJlclwiKSB7XG4gICAgICAgIHRocm93IG5ldyBBdXRoZW50aWNhdGlvbkVycm9yKGBBdXRoZW50aWNhdGlvbiBlcnJvci4gTGl2ZWJsb2NrcyBjb3VsZCBub3QgcGFyc2UgdGhlIHJlc3BvbnNlIG9mIHlvdXIgYXV0aGVudGljYXRpb24gZW5kcG9pbnRgKTtcbiAgICB9XG4gICAgcmV0dXJuIGRhdGE7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@liveblocks/client/lib/esm/authentication.js\n");

/***/ }),

/***/ "./node_modules/@liveblocks/client/lib/esm/client.js":
/*!***********************************************************!*\
  !*** ./node_modules/@liveblocks/client/lib/esm/client.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createClient\": function() { return /* binding */ createClient; }\n/* harmony export */ });\n/* harmony import */ var _room__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./room */ \"./node_modules/@liveblocks/client/lib/esm/room.js\");\n\n/**\n * Create a client that will be responsible to communicate with liveblocks servers.\n *\n * ### Example\n * ```\n * const client = createClient({\n *   authEndpoint: \"/api/auth\"\n * });\n *\n * // It's also possible to use a function to call your authentication endpoint.\n * // Useful to add additional headers or use an API wrapper (like Firebase functions)\n * const client = createClient({\n *   authEndpoint: async (room) => {\n *     const response = await fetch(\"/api/auth\", {\n *       method: \"POST\",\n *       headers: {\n *          Authentication: \"token\",\n *          \"Content-Type\": \"application/json\"\n *       },\n *       body: JSON.stringify({ room })\n *     });\n *\n *     return await response.json();\n *   }\n * });\n * ```\n */\nfunction createClient(options) {\n    if (typeof options.throttle === \"number\") {\n        if (options.throttle < 80 || options.throttle > 1000) {\n            throw new Error(\"Liveblocks client throttle should be between 80 and 1000 ms\");\n        }\n    }\n    const rooms = new Map();\n    function getRoom(roomId) {\n        const internalRoom = rooms.get(roomId);\n        return internalRoom ? internalRoom.room : null;\n    }\n    function enter(roomId, initialPresence) {\n        let internalRoom = rooms.get(roomId);\n        if (internalRoom) {\n            return internalRoom.room;\n        }\n        internalRoom = (0,_room__WEBPACK_IMPORTED_MODULE_0__.createRoom)(roomId, Object.assign(Object.assign({}, options), { initialPresence }));\n        rooms.set(roomId, internalRoom);\n        internalRoom.connect();\n        return internalRoom.room;\n    }\n    function leave(roomId) {\n        let room = rooms.get(roomId);\n        if (room) {\n            room.disconnect();\n            rooms.delete(roomId);\n        }\n    }\n    if (typeof window !== \"undefined\") {\n        // TODO: Expose a way to clear these\n        window.addEventListener(\"online\", () => {\n            for (const [, room] of rooms) {\n                room.onNavigatorOnline();\n            }\n        });\n    }\n    if (typeof document !== \"undefined\") {\n        document.addEventListener(\"visibilitychange\", () => {\n            for (const [, room] of rooms) {\n                room.onVisibilityChange(document.visibilityState);\n            }\n        });\n    }\n    return {\n        getRoom,\n        enter,\n        leave,\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGxpdmVibG9ja3MvY2xpZW50L2xpYi9lc20vY2xpZW50LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQW9DO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWLGdDQUFnQyxNQUFNO0FBQ3RDLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLGlEQUFVLHVDQUF1QyxjQUFjLGlCQUFpQjtBQUN2RztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGxpdmVibG9ja3MvY2xpZW50L2xpYi9lc20vY2xpZW50LmpzP2Y4ZDIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlUm9vbSB9IGZyb20gXCIuL3Jvb21cIjtcbi8qKlxuICogQ3JlYXRlIGEgY2xpZW50IHRoYXQgd2lsbCBiZSByZXNwb25zaWJsZSB0byBjb21tdW5pY2F0ZSB3aXRoIGxpdmVibG9ja3Mgc2VydmVycy5cbiAqXG4gKiAjIyMgRXhhbXBsZVxuICogYGBgXG4gKiBjb25zdCBjbGllbnQgPSBjcmVhdGVDbGllbnQoe1xuICogICBhdXRoRW5kcG9pbnQ6IFwiL2FwaS9hdXRoXCJcbiAqIH0pO1xuICpcbiAqIC8vIEl0J3MgYWxzbyBwb3NzaWJsZSB0byB1c2UgYSBmdW5jdGlvbiB0byBjYWxsIHlvdXIgYXV0aGVudGljYXRpb24gZW5kcG9pbnQuXG4gKiAvLyBVc2VmdWwgdG8gYWRkIGFkZGl0aW9uYWwgaGVhZGVycyBvciB1c2UgYW4gQVBJIHdyYXBwZXIgKGxpa2UgRmlyZWJhc2UgZnVuY3Rpb25zKVxuICogY29uc3QgY2xpZW50ID0gY3JlYXRlQ2xpZW50KHtcbiAqICAgYXV0aEVuZHBvaW50OiBhc3luYyAocm9vbSkgPT4ge1xuICogICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goXCIvYXBpL2F1dGhcIiwge1xuICogICAgICAgbWV0aG9kOiBcIlBPU1RcIixcbiAqICAgICAgIGhlYWRlcnM6IHtcbiAqICAgICAgICAgIEF1dGhlbnRpY2F0aW9uOiBcInRva2VuXCIsXG4gKiAgICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIlxuICogICAgICAgfSxcbiAqICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsgcm9vbSB9KVxuICogICAgIH0pO1xuICpcbiAqICAgICByZXR1cm4gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICogICB9XG4gKiB9KTtcbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQ2xpZW50KG9wdGlvbnMpIHtcbiAgICBpZiAodHlwZW9mIG9wdGlvbnMudGhyb3R0bGUgPT09IFwibnVtYmVyXCIpIHtcbiAgICAgICAgaWYgKG9wdGlvbnMudGhyb3R0bGUgPCA4MCB8fCBvcHRpb25zLnRocm90dGxlID4gMTAwMCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTGl2ZWJsb2NrcyBjbGllbnQgdGhyb3R0bGUgc2hvdWxkIGJlIGJldHdlZW4gODAgYW5kIDEwMDAgbXNcIik7XG4gICAgICAgIH1cbiAgICB9XG4gICAgY29uc3Qgcm9vbXMgPSBuZXcgTWFwKCk7XG4gICAgZnVuY3Rpb24gZ2V0Um9vbShyb29tSWQpIHtcbiAgICAgICAgY29uc3QgaW50ZXJuYWxSb29tID0gcm9vbXMuZ2V0KHJvb21JZCk7XG4gICAgICAgIHJldHVybiBpbnRlcm5hbFJvb20gPyBpbnRlcm5hbFJvb20ucm9vbSA6IG51bGw7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGVudGVyKHJvb21JZCwgaW5pdGlhbFByZXNlbmNlKSB7XG4gICAgICAgIGxldCBpbnRlcm5hbFJvb20gPSByb29tcy5nZXQocm9vbUlkKTtcbiAgICAgICAgaWYgKGludGVybmFsUm9vbSkge1xuICAgICAgICAgICAgcmV0dXJuIGludGVybmFsUm9vbS5yb29tO1xuICAgICAgICB9XG4gICAgICAgIGludGVybmFsUm9vbSA9IGNyZWF0ZVJvb20ocm9vbUlkLCBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIG9wdGlvbnMpLCB7IGluaXRpYWxQcmVzZW5jZSB9KSk7XG4gICAgICAgIHJvb21zLnNldChyb29tSWQsIGludGVybmFsUm9vbSk7XG4gICAgICAgIGludGVybmFsUm9vbS5jb25uZWN0KCk7XG4gICAgICAgIHJldHVybiBpbnRlcm5hbFJvb20ucm9vbTtcbiAgICB9XG4gICAgZnVuY3Rpb24gbGVhdmUocm9vbUlkKSB7XG4gICAgICAgIGxldCByb29tID0gcm9vbXMuZ2V0KHJvb21JZCk7XG4gICAgICAgIGlmIChyb29tKSB7XG4gICAgICAgICAgICByb29tLmRpc2Nvbm5lY3QoKTtcbiAgICAgICAgICAgIHJvb21zLmRlbGV0ZShyb29tSWQpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGlmICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIC8vIFRPRE86IEV4cG9zZSBhIHdheSB0byBjbGVhciB0aGVzZVxuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcIm9ubGluZVwiLCAoKSA9PiB7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IFssIHJvb21dIG9mIHJvb21zKSB7XG4gICAgICAgICAgICAgICAgcm9vbS5vbk5hdmlnYXRvck9ubGluZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBkb2N1bWVudCAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwidmlzaWJpbGl0eWNoYW5nZVwiLCAoKSA9PiB7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IFssIHJvb21dIG9mIHJvb21zKSB7XG4gICAgICAgICAgICAgICAgcm9vbS5vblZpc2liaWxpdHlDaGFuZ2UoZG9jdW1lbnQudmlzaWJpbGl0eVN0YXRlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIGdldFJvb20sXG4gICAgICAgIGVudGVyLFxuICAgICAgICBsZWF2ZSxcbiAgICB9O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@liveblocks/client/lib/esm/client.js\n");

/***/ }),

/***/ "./node_modules/@liveblocks/client/lib/esm/doc.js":
/*!********************************************************!*\
  !*** ./node_modules/@liveblocks/client/lib/esm/doc.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createRecord\": function() { return /* binding */ createRecord; },\n/* harmony export */   \"createList\": function() { return /* binding */ createList; },\n/* harmony export */   \"Doc\": function() { return /* binding */ Doc; }\n/* harmony export */ });\n/* harmony import */ var _live__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./live */ \"./node_modules/@liveblocks/client/lib/esm/live.js\");\n/* harmony import */ var _position__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./position */ \"./node_modules/@liveblocks/client/lib/esm/position.js\");\n\n\nconst RECORD = Symbol(\"liveblocks.record\");\nconst LIST = Symbol(\"liveblocks.list\");\nfunction createRecord(id, data) {\n    return Object.assign({ id, $$type: RECORD }, data);\n}\nfunction createList(id, items = []) {\n    return {\n        id,\n        $$type: LIST,\n        length: items.length,\n        toArray: () => items,\n        map: (callback) => items.map(callback),\n    };\n}\nfunction noop() { }\nclass Doc {\n    constructor(root, _cache, _emit) {\n        this.root = root;\n        this._cache = _cache;\n        this._emit = _emit;\n    }\n    static empty(id = \"root\", emit = noop) {\n        const root = {\n            id,\n            $$type: RECORD,\n        };\n        return new Doc(root, { links: new Map(), listCache: new Map() }, emit);\n    }\n    static createFromRoot(data, id = \"root\", emit = noop) {\n        let doc = Doc.empty(id, emit);\n        doc = doc.updateRecord(doc.root.id, data);\n        return doc;\n    }\n    static load(root, emit = noop) {\n        let doc = Doc.empty(root.id, emit);\n        return doc.dispatch({\n            type: _live__WEBPACK_IMPORTED_MODULE_0__.OpType.RecordUpdate,\n            id: root.id,\n            data: root.data,\n        });\n    }\n    get data() {\n        return this.root;\n    }\n    dispatch(op, shouldEmit = false) {\n        if (shouldEmit) {\n            this._emit(op);\n        }\n        if (op.id === this.root.id) {\n            const node = dispatch(this.root, op, this._cache, []);\n            return new Doc(node, this._cache, this._emit);\n        }\n        else {\n            const links = getAllLinks(op.id, this.root.id, this._cache.links);\n            const node = dispatch(this.root, op, this._cache, links);\n            return new Doc(node, this._cache, this._emit);\n        }\n    }\n    getChild(id) {\n        if (id === this.root.id) {\n            return this.root;\n        }\n        const allLinks = getAllLinks(id, this.root.id, this._cache.links);\n        return getChildDeep(this.root, id, allLinks, this._cache);\n    }\n    updateRecord(id, overrides) {\n        const currentRecord = this.getChild(id);\n        if (currentRecord == null) {\n            throw new Error(`Record with id \"${id}\" does not exist`);\n        }\n        let data = {};\n        for (const key in overrides) {\n            const value = overrides[key];\n            data[key] = serialize(value);\n        }\n        const op = {\n            id: currentRecord.id,\n            type: _live__WEBPACK_IMPORTED_MODULE_0__.OpType.RecordUpdate,\n            data,\n        };\n        return this.dispatch(op, true);\n    }\n    pushItem(id, item) {\n        const list = this.getChild(id);\n        if (list == null) {\n            throw new Error(`List with id \"${id}\" does not exist`);\n        }\n        if (list.$$type !== LIST) {\n            throw new Error(`Node with id \"${id}\" is not a list`);\n        }\n        if (!isRecord(item)) {\n            throw new Error(\"List can't only have Record as children\");\n        }\n        const data = serialize(item);\n        if (list.length === 0) {\n            return this.dispatch({\n                type: _live__WEBPACK_IMPORTED_MODULE_0__.OpType.ListInsert,\n                id: list.id,\n                position: (0,_position__WEBPACK_IMPORTED_MODULE_1__.makePosition)(),\n                data,\n            }, true);\n        }\n        const items = sortedListItems(getListItems(this._cache, id));\n        const [tailPosition] = items[items.length - 1];\n        const position = (0,_position__WEBPACK_IMPORTED_MODULE_1__.makePosition)(tailPosition);\n        const operation = {\n            type: _live__WEBPACK_IMPORTED_MODULE_0__.OpType.ListInsert,\n            id: list.id,\n            position,\n            data,\n        };\n        return this.dispatch(operation, true);\n    }\n    moveItem(id, index, targetIndex) {\n        const list = this.getChild(id);\n        if (list == null) {\n            throw new Error(`List with id \"${id}\" does not exist`);\n        }\n        if (list.$$type !== LIST) {\n            throw new Error(`Node with id \"${id}\" is not a list`);\n        }\n        const items = sortedListItems(getListItems(this._cache, id));\n        if (targetIndex < 0) {\n            throw new Error(\"targetIndex cannot be less than 0\");\n        }\n        if (targetIndex >= items.length) {\n            throw new Error(\"targetIndex cannot be greater or equal than the list length\");\n        }\n        if (index < 0) {\n            throw new Error(\"index cannot be less than 0\");\n        }\n        if (index >= items.length) {\n            throw new Error(\"index cannot be greater or equal than the list length\");\n        }\n        if (index === targetIndex) {\n            return this;\n        }\n        let beforePosition = null;\n        let afterPosition = null;\n        if (index < targetIndex) {\n            afterPosition =\n                targetIndex === items.length - 1\n                    ? undefined\n                    : items[targetIndex + 1][0];\n            beforePosition = items[targetIndex][0];\n        }\n        else {\n            afterPosition = items[targetIndex][0];\n            beforePosition =\n                targetIndex === 0 ? undefined : items[targetIndex - 1][0];\n        }\n        const position = (0,_position__WEBPACK_IMPORTED_MODULE_1__.makePosition)(beforePosition, afterPosition);\n        const [, item] = items[index];\n        return this.dispatch({\n            type: _live__WEBPACK_IMPORTED_MODULE_0__.OpType.ListMove,\n            id: list.id,\n            itemId: item.id,\n            position,\n        }, true);\n    }\n    deleteItem(id, index) {\n        const list = this.getChild(id);\n        if (list == null) {\n            throw new Error(`List with id \"${id}\" does not exist`);\n        }\n        if (list.$$type !== LIST) {\n            throw new Error(`Node with id \"${id}\" is not a list`);\n        }\n        const items = sortedListItems(getListItems(this._cache, id));\n        const [, item] = items[index];\n        return this.dispatch({\n            type: _live__WEBPACK_IMPORTED_MODULE_0__.OpType.ListRemove,\n            id: list.id,\n            itemId: item.id,\n        }, true);\n    }\n    deleteItemById(id, itemId) {\n        const list = this.getChild(id);\n        if (list == null) {\n            throw new Error(`List with id \"${id}\" does not exist`);\n        }\n        if (list.$$type !== LIST) {\n            throw new Error(`Node with id \"${id}\" is not a list`);\n        }\n        const itemsMap = getListItems(this._cache, id);\n        let item = null;\n        for (const [, crdt] of itemsMap) {\n            if (crdt.id === itemId) {\n                item = crdt;\n                break;\n            }\n        }\n        if (item == null) {\n            throw new Error(`List with id \"${id}\" does not have an item with id \"${itemId}\"`);\n        }\n        return this.dispatch({\n            type: _live__WEBPACK_IMPORTED_MODULE_0__.OpType.ListRemove,\n            id: list.id,\n            itemId: item.id,\n        }, true);\n    }\n}\nfunction getAllLinks(id, rootId, links) {\n    let currentId = id;\n    const result = [];\n    do {\n        const link = links.get(currentId);\n        if (link == null) {\n            throw new Error(`Can't find link for id \"${currentId}\"`);\n        }\n        currentId = link.parentId;\n        result.push(link);\n    } while (currentId !== rootId);\n    return result;\n}\nfunction deserializeList(serialized, cache) {\n    const listItems = new Map();\n    for (const position in serialized.data) {\n        const item = deserialize(serialized.data[position], cache);\n        if (!isRecord(item)) {\n            throw new Error(\"TODO\");\n        }\n        listItems.set(position, item);\n        cache.links.set(item.id, { parentId: serialized.id, parentKey: position });\n    }\n    cache.listCache.set(serialized.id, listItems);\n    return createList(serialized.id, listItemsToArray(listItems));\n}\nfunction getListItems(cache, listId) {\n    const items = cache.listCache.get(listId);\n    if (items == null) {\n        throw new Error(`Can't find list cache for id \"${listId}\"`);\n    }\n    return items;\n}\nfunction deserializeRecord(serialized, cache) {\n    const result = {\n        id: serialized.id,\n        $$type: RECORD,\n    };\n    for (const key in serialized.data) {\n        const item = deserialize(serialized.data[key], cache);\n        if (isCrdt(item)) {\n            cache.links.set(item.id, {\n                parentId: serialized.id,\n                parentKey: key,\n            });\n        }\n        result[key] = item;\n    }\n    return result;\n}\nfunction deserialize(serialized, cache) {\n    switch (serialized.type) {\n        case _live__WEBPACK_IMPORTED_MODULE_0__.CrdtType.Register: {\n            return serialized.data;\n        }\n        case _live__WEBPACK_IMPORTED_MODULE_0__.CrdtType.Record: {\n            return deserializeRecord(serialized, cache);\n        }\n        case _live__WEBPACK_IMPORTED_MODULE_0__.CrdtType.List: {\n            return deserializeList(serialized, cache);\n        }\n        default: {\n            throw new Error(\"TODO\");\n        }\n    }\n}\nfunction dispatchOnRecord(record, op, cache, links) {\n    if (links.length === 0) {\n        if (record.id !== op.id) {\n            throw new Error(\"TODO\");\n        }\n        switch (op.type) {\n            case _live__WEBPACK_IMPORTED_MODULE_0__.OpType.RecordUpdate: {\n                return updateRecord(record, op, cache);\n            }\n            default: {\n                console.warn(\"Unsupported operation\");\n                return record;\n            }\n        }\n    }\n    const currentLink = links.pop();\n    const child = record[currentLink.parentKey];\n    const newNode = dispatch(child, op, cache, links);\n    return Object.assign(Object.assign({}, record), { [currentLink.parentKey]: newNode });\n}\nfunction dispatchOnList(list, op, cache, links) {\n    if (links.length === 0) {\n        if (list.id !== op.id) {\n            throw new Error(\"TODO\");\n        }\n        switch (op.type) {\n            case _live__WEBPACK_IMPORTED_MODULE_0__.OpType.ListInsert: {\n                return listInsert(list, op, cache);\n            }\n            case _live__WEBPACK_IMPORTED_MODULE_0__.OpType.ListMove: {\n                return listMove(list, op, cache);\n            }\n            case _live__WEBPACK_IMPORTED_MODULE_0__.OpType.ListRemove: {\n                return listDelete(list, op, cache);\n            }\n            default: {\n                console.warn(\"Unsupported operation\");\n                return list;\n            }\n        }\n    }\n    const currentLink = links.pop();\n    const position = currentLink.parentKey;\n    const items = getListItems(cache, list.id);\n    const item = items.get(position);\n    if (item == null) {\n        throw new Error(\"TODO\");\n    }\n    const newItem = dispatch(item, op, cache, links);\n    items.set(position, newItem);\n    return createList(list.id, listItemsToArray(items));\n}\nfunction dispatch(node, op, cache, links) {\n    switch (node.$$type) {\n        case RECORD:\n            return dispatchOnRecord(node, op, cache, links);\n        case LIST:\n            return dispatchOnList(node, op, cache, links);\n        default: {\n            throw new Error(\"Unknown CRDT\");\n        }\n    }\n}\nfunction updateRecord(node, op, cache) {\n    const result = Object.assign({}, node);\n    for (const key in op.data) {\n        const value = op.data[key];\n        const item = deserialize(value, cache);\n        if (isCrdt(item)) {\n            cache.links.set(item.id, { parentId: node.id, parentKey: key });\n        }\n        result[key] = item;\n    }\n    return result;\n}\nfunction listInsert(list, op, cache) {\n    const items = getListItems(cache, list.id);\n    const item = deserialize(op.data, cache);\n    if (isCrdt(item)) {\n        items.set(op.position, item);\n        cache.links.set(item.id, { parentId: list.id, parentKey: op.position });\n    }\n    return createList(list.id, listItemsToArray(items));\n}\nfunction listMove(list, op, cache) {\n    const items = getListItems(cache, list.id);\n    const link = getLinkOrThrow(cache, op.itemId);\n    const item = items.get(link.parentKey);\n    if (item == null) {\n        throw new Error(\"TODO\");\n    }\n    // Delete old position cache entry\n    items.delete(link.parentKey);\n    // Insert new position in cache\n    items.set(op.position, item);\n    // Update link\n    cache.links.set(op.itemId, { parentId: list.id, parentKey: op.position });\n    return createList(list.id, listItemsToArray(items));\n}\nfunction getLinkOrThrow(cache, id) {\n    const link = cache.links.get(id);\n    if (link == null) {\n        throw new Error(`Can't find link with id \"${id}\"`);\n    }\n    return link;\n}\nfunction listDelete(list, op, cache) {\n    const items = getListItems(cache, list.id);\n    const link = getLinkOrThrow(cache, op.itemId);\n    items.delete(link.parentKey);\n    cache.links.delete(op.itemId);\n    return createList(list.id, listItemsToArray(items));\n}\nfunction listItemsToArray(items) {\n    return sortedListItems(items).map((entry) => entry[1]);\n}\nfunction sortedListItems(items) {\n    return Array.from(items.entries()).sort((entryA, entryB) => (0,_position__WEBPACK_IMPORTED_MODULE_1__.compare)({ position: entryA[0] }, { position: entryB[0] }));\n}\nfunction getChildDeep(node, id, links, cache) {\n    let currentNode = node;\n    while (currentNode.id !== id) {\n        const link = links.pop();\n        if (link == null || link.parentId !== currentNode.id) {\n            throw new Error(\"TODO\");\n        }\n        if (currentNode.$$type === RECORD) {\n            currentNode = currentNode[link.parentKey];\n        }\n        else {\n            const listItems = getListItems(cache, currentNode.id);\n            const item = listItems.get(link.parentKey);\n            if (item == null) {\n                throw new Error(\"TODO\");\n            }\n            currentNode = item;\n        }\n    }\n    return currentNode;\n}\nfunction isRecord(value) {\n    return value != null && typeof value === \"object\" && value.$$type === RECORD;\n}\nfunction isList(value) {\n    return value != null && typeof value === \"object\" && value.$$type === LIST;\n}\nfunction isCrdt(value) {\n    return isRecord(value) || isList(value);\n}\nfunction serializeRecord(record) {\n    const serializedData = {};\n    for (const key in record) {\n        if (key !== \"id\" && key !== \"$$type\") {\n            const value = record[key]; // TODO: Find out why typescript does not like that\n            serializedData[key] = serialize(value);\n        }\n    }\n    return {\n        id: record.id,\n        type: _live__WEBPACK_IMPORTED_MODULE_0__.CrdtType.Record,\n        data: serializedData,\n    };\n}\nfunction serializeList(list) {\n    return {\n        id: list.id,\n        type: _live__WEBPACK_IMPORTED_MODULE_0__.CrdtType.List,\n        data: {},\n    };\n}\nfunction serialize(value) {\n    if (isRecord(value)) {\n        return serializeRecord(value);\n    }\n    else if (isList(value)) {\n        return serializeList(value);\n    }\n    else {\n        return { type: _live__WEBPACK_IMPORTED_MODULE_0__.CrdtType.Register, data: value };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@liveblocks/client/lib/esm/doc.js\n");

/***/ }),

/***/ "./node_modules/@liveblocks/client/lib/esm/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@liveblocks/client/lib/esm/index.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createClient\": function() { return /* reexport safe */ _client__WEBPACK_IMPORTED_MODULE_0__.createClient; },\n/* harmony export */   \"LiveStorageState\": function() { return /* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_1__.LiveStorageState; }\n/* harmony export */ });\n/* harmony import */ var _client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./client */ \"./node_modules/@liveblocks/client/lib/esm/client.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./types */ \"./node_modules/@liveblocks/client/lib/esm/types.js\");\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGxpdmVibG9ja3MvY2xpZW50L2xpYi9lc20vaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUF3QztBQUNHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AbGl2ZWJsb2Nrcy9jbGllbnQvbGliL2VzbS9pbmRleC5qcz9iOGRiIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IGNyZWF0ZUNsaWVudCB9IGZyb20gXCIuL2NsaWVudFwiO1xuZXhwb3J0IHsgTGl2ZVN0b3JhZ2VTdGF0ZSB9IGZyb20gXCIuL3R5cGVzXCI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@liveblocks/client/lib/esm/index.js\n");

/***/ }),

/***/ "./node_modules/@liveblocks/client/lib/esm/live.js":
/*!*********************************************************!*\
  !*** ./node_modules/@liveblocks/client/lib/esm/live.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ServerMessageType\": function() { return /* binding */ ServerMessageType; },\n/* harmony export */   \"ClientMessageType\": function() { return /* binding */ ClientMessageType; },\n/* harmony export */   \"CrdtType\": function() { return /* binding */ CrdtType; },\n/* harmony export */   \"OpType\": function() { return /* binding */ OpType; },\n/* harmony export */   \"WebsocketCloseCodes\": function() { return /* binding */ WebsocketCloseCodes; }\n/* harmony export */ });\nvar ServerMessageType;\n(function (ServerMessageType) {\n    ServerMessageType[ServerMessageType[\"UpdatePresence\"] = 100] = \"UpdatePresence\";\n    ServerMessageType[ServerMessageType[\"UserJoined\"] = 101] = \"UserJoined\";\n    ServerMessageType[ServerMessageType[\"UserLeft\"] = 102] = \"UserLeft\";\n    ServerMessageType[ServerMessageType[\"Event\"] = 103] = \"Event\";\n    ServerMessageType[ServerMessageType[\"RoomState\"] = 104] = \"RoomState\";\n    ServerMessageType[ServerMessageType[\"InitialStorageState\"] = 200] = \"InitialStorageState\";\n    ServerMessageType[ServerMessageType[\"UpdateStorage\"] = 201] = \"UpdateStorage\";\n})(ServerMessageType || (ServerMessageType = {}));\nvar ClientMessageType;\n(function (ClientMessageType) {\n    ClientMessageType[ClientMessageType[\"UpdatePresence\"] = 100] = \"UpdatePresence\";\n    ClientMessageType[ClientMessageType[\"ClientEvent\"] = 103] = \"ClientEvent\";\n    ClientMessageType[ClientMessageType[\"FetchStorage\"] = 200] = \"FetchStorage\";\n    ClientMessageType[ClientMessageType[\"UpdateStorage\"] = 201] = \"UpdateStorage\";\n})(ClientMessageType || (ClientMessageType = {}));\nvar CrdtType;\n(function (CrdtType) {\n    CrdtType[CrdtType[\"Record\"] = 0] = \"Record\";\n    CrdtType[CrdtType[\"List\"] = 1] = \"List\";\n    CrdtType[CrdtType[\"Register\"] = 2] = \"Register\";\n})(CrdtType || (CrdtType = {}));\nvar OpType;\n(function (OpType) {\n    OpType[OpType[\"Init\"] = 100] = \"Init\";\n    OpType[OpType[\"ListInsert\"] = 200] = \"ListInsert\";\n    OpType[OpType[\"ListMove\"] = 201] = \"ListMove\";\n    OpType[OpType[\"ListRemove\"] = 202] = \"ListRemove\";\n    OpType[OpType[\"RecordUpdate\"] = 300] = \"RecordUpdate\";\n})(OpType || (OpType = {}));\nvar WebsocketCloseCodes;\n(function (WebsocketCloseCodes) {\n    WebsocketCloseCodes[WebsocketCloseCodes[\"CLOSE_ABNORMAL\"] = 1006] = \"CLOSE_ABNORMAL\";\n    WebsocketCloseCodes[WebsocketCloseCodes[\"INVALID_MESSAGE_FORMAT\"] = 4000] = \"INVALID_MESSAGE_FORMAT\";\n    WebsocketCloseCodes[WebsocketCloseCodes[\"NOT_ALLOWED\"] = 4001] = \"NOT_ALLOWED\";\n    WebsocketCloseCodes[WebsocketCloseCodes[\"MAX_NUMBER_OF_MESSAGES_PER_SECONDS\"] = 4002] = \"MAX_NUMBER_OF_MESSAGES_PER_SECONDS\";\n    WebsocketCloseCodes[WebsocketCloseCodes[\"MAX_NUMBER_OF_CONCURRENT_CONNECTIONS\"] = 4003] = \"MAX_NUMBER_OF_CONCURRENT_CONNECTIONS\";\n    WebsocketCloseCodes[WebsocketCloseCodes[\"MAX_NUMBER_OF_MESSAGES_PER_DAY_PER_APP\"] = 4004] = \"MAX_NUMBER_OF_MESSAGES_PER_DAY_PER_APP\";\n    WebsocketCloseCodes[WebsocketCloseCodes[\"MAX_NUMBER_OF_CONCURRENT_CONNECTIONS_PER_ROOM\"] = 4005] = \"MAX_NUMBER_OF_CONCURRENT_CONNECTIONS_PER_ROOM\";\n})(WebsocketCloseCodes || (WebsocketCloseCodes = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGxpdmVibG9ja3MvY2xpZW50L2xpYi9lc20vbGl2ZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsOENBQThDO0FBQ3hDO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsOENBQThDO0FBQ3hDO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDRCQUE0QjtBQUN0QjtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsd0JBQXdCO0FBQ2xCO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsa0RBQWtEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AbGl2ZWJsb2Nrcy9jbGllbnQvbGliL2VzbS9saXZlLmpzPzRhZGUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHZhciBTZXJ2ZXJNZXNzYWdlVHlwZTtcbihmdW5jdGlvbiAoU2VydmVyTWVzc2FnZVR5cGUpIHtcbiAgICBTZXJ2ZXJNZXNzYWdlVHlwZVtTZXJ2ZXJNZXNzYWdlVHlwZVtcIlVwZGF0ZVByZXNlbmNlXCJdID0gMTAwXSA9IFwiVXBkYXRlUHJlc2VuY2VcIjtcbiAgICBTZXJ2ZXJNZXNzYWdlVHlwZVtTZXJ2ZXJNZXNzYWdlVHlwZVtcIlVzZXJKb2luZWRcIl0gPSAxMDFdID0gXCJVc2VySm9pbmVkXCI7XG4gICAgU2VydmVyTWVzc2FnZVR5cGVbU2VydmVyTWVzc2FnZVR5cGVbXCJVc2VyTGVmdFwiXSA9IDEwMl0gPSBcIlVzZXJMZWZ0XCI7XG4gICAgU2VydmVyTWVzc2FnZVR5cGVbU2VydmVyTWVzc2FnZVR5cGVbXCJFdmVudFwiXSA9IDEwM10gPSBcIkV2ZW50XCI7XG4gICAgU2VydmVyTWVzc2FnZVR5cGVbU2VydmVyTWVzc2FnZVR5cGVbXCJSb29tU3RhdGVcIl0gPSAxMDRdID0gXCJSb29tU3RhdGVcIjtcbiAgICBTZXJ2ZXJNZXNzYWdlVHlwZVtTZXJ2ZXJNZXNzYWdlVHlwZVtcIkluaXRpYWxTdG9yYWdlU3RhdGVcIl0gPSAyMDBdID0gXCJJbml0aWFsU3RvcmFnZVN0YXRlXCI7XG4gICAgU2VydmVyTWVzc2FnZVR5cGVbU2VydmVyTWVzc2FnZVR5cGVbXCJVcGRhdGVTdG9yYWdlXCJdID0gMjAxXSA9IFwiVXBkYXRlU3RvcmFnZVwiO1xufSkoU2VydmVyTWVzc2FnZVR5cGUgfHwgKFNlcnZlck1lc3NhZ2VUeXBlID0ge30pKTtcbmV4cG9ydCB2YXIgQ2xpZW50TWVzc2FnZVR5cGU7XG4oZnVuY3Rpb24gKENsaWVudE1lc3NhZ2VUeXBlKSB7XG4gICAgQ2xpZW50TWVzc2FnZVR5cGVbQ2xpZW50TWVzc2FnZVR5cGVbXCJVcGRhdGVQcmVzZW5jZVwiXSA9IDEwMF0gPSBcIlVwZGF0ZVByZXNlbmNlXCI7XG4gICAgQ2xpZW50TWVzc2FnZVR5cGVbQ2xpZW50TWVzc2FnZVR5cGVbXCJDbGllbnRFdmVudFwiXSA9IDEwM10gPSBcIkNsaWVudEV2ZW50XCI7XG4gICAgQ2xpZW50TWVzc2FnZVR5cGVbQ2xpZW50TWVzc2FnZVR5cGVbXCJGZXRjaFN0b3JhZ2VcIl0gPSAyMDBdID0gXCJGZXRjaFN0b3JhZ2VcIjtcbiAgICBDbGllbnRNZXNzYWdlVHlwZVtDbGllbnRNZXNzYWdlVHlwZVtcIlVwZGF0ZVN0b3JhZ2VcIl0gPSAyMDFdID0gXCJVcGRhdGVTdG9yYWdlXCI7XG59KShDbGllbnRNZXNzYWdlVHlwZSB8fCAoQ2xpZW50TWVzc2FnZVR5cGUgPSB7fSkpO1xuZXhwb3J0IHZhciBDcmR0VHlwZTtcbihmdW5jdGlvbiAoQ3JkdFR5cGUpIHtcbiAgICBDcmR0VHlwZVtDcmR0VHlwZVtcIlJlY29yZFwiXSA9IDBdID0gXCJSZWNvcmRcIjtcbiAgICBDcmR0VHlwZVtDcmR0VHlwZVtcIkxpc3RcIl0gPSAxXSA9IFwiTGlzdFwiO1xuICAgIENyZHRUeXBlW0NyZHRUeXBlW1wiUmVnaXN0ZXJcIl0gPSAyXSA9IFwiUmVnaXN0ZXJcIjtcbn0pKENyZHRUeXBlIHx8IChDcmR0VHlwZSA9IHt9KSk7XG5leHBvcnQgdmFyIE9wVHlwZTtcbihmdW5jdGlvbiAoT3BUeXBlKSB7XG4gICAgT3BUeXBlW09wVHlwZVtcIkluaXRcIl0gPSAxMDBdID0gXCJJbml0XCI7XG4gICAgT3BUeXBlW09wVHlwZVtcIkxpc3RJbnNlcnRcIl0gPSAyMDBdID0gXCJMaXN0SW5zZXJ0XCI7XG4gICAgT3BUeXBlW09wVHlwZVtcIkxpc3RNb3ZlXCJdID0gMjAxXSA9IFwiTGlzdE1vdmVcIjtcbiAgICBPcFR5cGVbT3BUeXBlW1wiTGlzdFJlbW92ZVwiXSA9IDIwMl0gPSBcIkxpc3RSZW1vdmVcIjtcbiAgICBPcFR5cGVbT3BUeXBlW1wiUmVjb3JkVXBkYXRlXCJdID0gMzAwXSA9IFwiUmVjb3JkVXBkYXRlXCI7XG59KShPcFR5cGUgfHwgKE9wVHlwZSA9IHt9KSk7XG5leHBvcnQgdmFyIFdlYnNvY2tldENsb3NlQ29kZXM7XG4oZnVuY3Rpb24gKFdlYnNvY2tldENsb3NlQ29kZXMpIHtcbiAgICBXZWJzb2NrZXRDbG9zZUNvZGVzW1dlYnNvY2tldENsb3NlQ29kZXNbXCJDTE9TRV9BQk5PUk1BTFwiXSA9IDEwMDZdID0gXCJDTE9TRV9BQk5PUk1BTFwiO1xuICAgIFdlYnNvY2tldENsb3NlQ29kZXNbV2Vic29ja2V0Q2xvc2VDb2Rlc1tcIklOVkFMSURfTUVTU0FHRV9GT1JNQVRcIl0gPSA0MDAwXSA9IFwiSU5WQUxJRF9NRVNTQUdFX0ZPUk1BVFwiO1xuICAgIFdlYnNvY2tldENsb3NlQ29kZXNbV2Vic29ja2V0Q2xvc2VDb2Rlc1tcIk5PVF9BTExPV0VEXCJdID0gNDAwMV0gPSBcIk5PVF9BTExPV0VEXCI7XG4gICAgV2Vic29ja2V0Q2xvc2VDb2Rlc1tXZWJzb2NrZXRDbG9zZUNvZGVzW1wiTUFYX05VTUJFUl9PRl9NRVNTQUdFU19QRVJfU0VDT05EU1wiXSA9IDQwMDJdID0gXCJNQVhfTlVNQkVSX09GX01FU1NBR0VTX1BFUl9TRUNPTkRTXCI7XG4gICAgV2Vic29ja2V0Q2xvc2VDb2Rlc1tXZWJzb2NrZXRDbG9zZUNvZGVzW1wiTUFYX05VTUJFUl9PRl9DT05DVVJSRU5UX0NPTk5FQ1RJT05TXCJdID0gNDAwM10gPSBcIk1BWF9OVU1CRVJfT0ZfQ09OQ1VSUkVOVF9DT05ORUNUSU9OU1wiO1xuICAgIFdlYnNvY2tldENsb3NlQ29kZXNbV2Vic29ja2V0Q2xvc2VDb2Rlc1tcIk1BWF9OVU1CRVJfT0ZfTUVTU0FHRVNfUEVSX0RBWV9QRVJfQVBQXCJdID0gNDAwNF0gPSBcIk1BWF9OVU1CRVJfT0ZfTUVTU0FHRVNfUEVSX0RBWV9QRVJfQVBQXCI7XG4gICAgV2Vic29ja2V0Q2xvc2VDb2Rlc1tXZWJzb2NrZXRDbG9zZUNvZGVzW1wiTUFYX05VTUJFUl9PRl9DT05DVVJSRU5UX0NPTk5FQ1RJT05TX1BFUl9ST09NXCJdID0gNDAwNV0gPSBcIk1BWF9OVU1CRVJfT0ZfQ09OQ1VSUkVOVF9DT05ORUNUSU9OU19QRVJfUk9PTVwiO1xufSkoV2Vic29ja2V0Q2xvc2VDb2RlcyB8fCAoV2Vic29ja2V0Q2xvc2VDb2RlcyA9IHt9KSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@liveblocks/client/lib/esm/live.js\n");

/***/ }),

/***/ "./node_modules/@liveblocks/client/lib/esm/position.js":
/*!*************************************************************!*\
  !*** ./node_modules/@liveblocks/client/lib/esm/position.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"min\": function() { return /* binding */ min; },\n/* harmony export */   \"max\": function() { return /* binding */ max; },\n/* harmony export */   \"mid\": function() { return /* binding */ mid; },\n/* harmony export */   \"middle\": function() { return /* binding */ middle; },\n/* harmony export */   \"makePosition\": function() { return /* binding */ makePosition; },\n/* harmony export */   \"posCodes\": function() { return /* binding */ posCodes; },\n/* harmony export */   \"pos\": function() { return /* binding */ pos; },\n/* harmony export */   \"compare\": function() { return /* binding */ compare; }\n/* harmony export */ });\nconst min = 32;\nconst max = 127;\nconst mid = 79;\nfunction middle(a, b) {\n    return (a + b) / 2;\n}\nfunction makePosition(before, after) {\n    // No children\n    if (before == null && after == null) {\n        return pos([min + 1]);\n    }\n    // Insert at the end\n    if (before != null && after == null) {\n        return getNextPosition(before);\n    }\n    // Insert at the start\n    if (before == null && after != null) {\n        return getPreviousPosition(after);\n    }\n    return pos(makePositionFromCodes(posCodes(before), posCodes(after)));\n}\nfunction getPreviousPosition(after) {\n    const result = [];\n    const afterCodes = posCodes(after);\n    for (let i = 0; i < afterCodes.length; i++) {\n        const code = afterCodes[i];\n        if (code <= min + 1) {\n            result.push(min);\n            if (afterCodes.length - 1 === i) {\n                result.push(max - 1);\n                break;\n            }\n        }\n        else {\n            result.push(code - 1);\n            break;\n        }\n    }\n    return pos(result);\n}\nfunction getNextPosition(before) {\n    const result = [];\n    const beforeCodes = posCodes(before);\n    for (let i = 0; i < beforeCodes.length; i++) {\n        const code = beforeCodes[i];\n        if (code === max - 1) {\n            result.push(code);\n            if (beforeCodes.length - 1 === i) {\n                result.push(min + 1);\n                break;\n            }\n        }\n        else {\n            result.push(code + 1);\n            break;\n        }\n    }\n    return pos(result);\n}\nfunction makePositionFromCodes(before, after) {\n    let index = 0;\n    const result = [];\n    while (true) {\n        const beforeDigit = before[index] || min;\n        const afterDigit = after[index] || max;\n        if (beforeDigit > afterDigit) {\n            throw new Error(`Impossible to generate position between ${before} and ${after}`);\n        }\n        if (beforeDigit === afterDigit) {\n            result.push(beforeDigit);\n            index++;\n            continue;\n        }\n        if (afterDigit - beforeDigit === 1) {\n            result.push(beforeDigit);\n            result.push(...makePositionFromCodes(before.slice(index + 1), []));\n            break;\n        }\n        const mid = beforeDigit + Math.floor((afterDigit - beforeDigit) / 2);\n        result.push(mid);\n        break;\n    }\n    return result;\n}\nfunction posCodes(str) {\n    const codes = [];\n    for (let i = 0; i < str.length; i++) {\n        codes.push(str.charCodeAt(i));\n    }\n    return codes;\n}\nfunction pos(codes) {\n    return String.fromCharCode(...codes);\n}\nfunction compare(itemA, itemB) {\n    const aCodes = posCodes(itemA.position);\n    const bCodes = posCodes(itemB.position);\n    const maxLength = Math.max(aCodes.length, bCodes.length);\n    for (let i = 0; i < maxLength; i++) {\n        const a = aCodes[i] == null ? min : aCodes[i];\n        const b = bCodes[i] == null ? min : bCodes[i];\n        if (a === b) {\n            continue;\n        }\n        else {\n            return a - b;\n        }\n    }\n    throw new Error(`Impossible to compare similar position \"${itemA.position}\" and \"${itemB.position}\"`);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGxpdmVibG9ja3MvY2xpZW50L2xpYi9lc20vcG9zaXRpb24uanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBTztBQUNBO0FBQ0E7QUFDQTtBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsdUJBQXVCO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQix3QkFBd0I7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1RUFBdUUsUUFBUSxNQUFNLE1BQU07QUFDM0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxvQkFBb0IsZ0JBQWdCO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsZUFBZTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrREFBK0QsZUFBZSxTQUFTLGVBQWU7QUFDdEciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BsaXZlYmxvY2tzL2NsaWVudC9saWIvZXNtL3Bvc2l0aW9uLmpzPzBhNjYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IG1pbiA9IDMyO1xuZXhwb3J0IGNvbnN0IG1heCA9IDEyNztcbmV4cG9ydCBjb25zdCBtaWQgPSA3OTtcbmV4cG9ydCBmdW5jdGlvbiBtaWRkbGUoYSwgYikge1xuICAgIHJldHVybiAoYSArIGIpIC8gMjtcbn1cbmV4cG9ydCBmdW5jdGlvbiBtYWtlUG9zaXRpb24oYmVmb3JlLCBhZnRlcikge1xuICAgIC8vIE5vIGNoaWxkcmVuXG4gICAgaWYgKGJlZm9yZSA9PSBudWxsICYmIGFmdGVyID09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIHBvcyhbbWluICsgMV0pO1xuICAgIH1cbiAgICAvLyBJbnNlcnQgYXQgdGhlIGVuZFxuICAgIGlmIChiZWZvcmUgIT0gbnVsbCAmJiBhZnRlciA9PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBnZXROZXh0UG9zaXRpb24oYmVmb3JlKTtcbiAgICB9XG4gICAgLy8gSW5zZXJ0IGF0IHRoZSBzdGFydFxuICAgIGlmIChiZWZvcmUgPT0gbnVsbCAmJiBhZnRlciAhPSBudWxsKSB7XG4gICAgICAgIHJldHVybiBnZXRQcmV2aW91c1Bvc2l0aW9uKGFmdGVyKTtcbiAgICB9XG4gICAgcmV0dXJuIHBvcyhtYWtlUG9zaXRpb25Gcm9tQ29kZXMocG9zQ29kZXMoYmVmb3JlKSwgcG9zQ29kZXMoYWZ0ZXIpKSk7XG59XG5mdW5jdGlvbiBnZXRQcmV2aW91c1Bvc2l0aW9uKGFmdGVyKSB7XG4gICAgY29uc3QgcmVzdWx0ID0gW107XG4gICAgY29uc3QgYWZ0ZXJDb2RlcyA9IHBvc0NvZGVzKGFmdGVyKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGFmdGVyQ29kZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgY29uc3QgY29kZSA9IGFmdGVyQ29kZXNbaV07XG4gICAgICAgIGlmIChjb2RlIDw9IG1pbiArIDEpIHtcbiAgICAgICAgICAgIHJlc3VsdC5wdXNoKG1pbik7XG4gICAgICAgICAgICBpZiAoYWZ0ZXJDb2Rlcy5sZW5ndGggLSAxID09PSBpKSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0LnB1c2gobWF4IC0gMSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXN1bHQucHVzaChjb2RlIC0gMSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcG9zKHJlc3VsdCk7XG59XG5mdW5jdGlvbiBnZXROZXh0UG9zaXRpb24oYmVmb3JlKSB7XG4gICAgY29uc3QgcmVzdWx0ID0gW107XG4gICAgY29uc3QgYmVmb3JlQ29kZXMgPSBwb3NDb2RlcyhiZWZvcmUpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYmVmb3JlQ29kZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgY29uc3QgY29kZSA9IGJlZm9yZUNvZGVzW2ldO1xuICAgICAgICBpZiAoY29kZSA9PT0gbWF4IC0gMSkge1xuICAgICAgICAgICAgcmVzdWx0LnB1c2goY29kZSk7XG4gICAgICAgICAgICBpZiAoYmVmb3JlQ29kZXMubGVuZ3RoIC0gMSA9PT0gaSkge1xuICAgICAgICAgICAgICAgIHJlc3VsdC5wdXNoKG1pbiArIDEpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmVzdWx0LnB1c2goY29kZSArIDEpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHBvcyhyZXN1bHQpO1xufVxuZnVuY3Rpb24gbWFrZVBvc2l0aW9uRnJvbUNvZGVzKGJlZm9yZSwgYWZ0ZXIpIHtcbiAgICBsZXQgaW5kZXggPSAwO1xuICAgIGNvbnN0IHJlc3VsdCA9IFtdO1xuICAgIHdoaWxlICh0cnVlKSB7XG4gICAgICAgIGNvbnN0IGJlZm9yZURpZ2l0ID0gYmVmb3JlW2luZGV4XSB8fCBtaW47XG4gICAgICAgIGNvbnN0IGFmdGVyRGlnaXQgPSBhZnRlcltpbmRleF0gfHwgbWF4O1xuICAgICAgICBpZiAoYmVmb3JlRGlnaXQgPiBhZnRlckRpZ2l0KSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEltcG9zc2libGUgdG8gZ2VuZXJhdGUgcG9zaXRpb24gYmV0d2VlbiAke2JlZm9yZX0gYW5kICR7YWZ0ZXJ9YCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGJlZm9yZURpZ2l0ID09PSBhZnRlckRpZ2l0KSB7XG4gICAgICAgICAgICByZXN1bHQucHVzaChiZWZvcmVEaWdpdCk7XG4gICAgICAgICAgICBpbmRleCsrO1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGFmdGVyRGlnaXQgLSBiZWZvcmVEaWdpdCA9PT0gMSkge1xuICAgICAgICAgICAgcmVzdWx0LnB1c2goYmVmb3JlRGlnaXQpO1xuICAgICAgICAgICAgcmVzdWx0LnB1c2goLi4ubWFrZVBvc2l0aW9uRnJvbUNvZGVzKGJlZm9yZS5zbGljZShpbmRleCArIDEpLCBbXSkpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgbWlkID0gYmVmb3JlRGlnaXQgKyBNYXRoLmZsb29yKChhZnRlckRpZ2l0IC0gYmVmb3JlRGlnaXQpIC8gMik7XG4gICAgICAgIHJlc3VsdC5wdXNoKG1pZCk7XG4gICAgICAgIGJyZWFrO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuZXhwb3J0IGZ1bmN0aW9uIHBvc0NvZGVzKHN0cikge1xuICAgIGNvbnN0IGNvZGVzID0gW107XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzdHIubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgY29kZXMucHVzaChzdHIuY2hhckNvZGVBdChpKSk7XG4gICAgfVxuICAgIHJldHVybiBjb2Rlcztcbn1cbmV4cG9ydCBmdW5jdGlvbiBwb3MoY29kZXMpIHtcbiAgICByZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZSguLi5jb2Rlcyk7XG59XG5leHBvcnQgZnVuY3Rpb24gY29tcGFyZShpdGVtQSwgaXRlbUIpIHtcbiAgICBjb25zdCBhQ29kZXMgPSBwb3NDb2RlcyhpdGVtQS5wb3NpdGlvbik7XG4gICAgY29uc3QgYkNvZGVzID0gcG9zQ29kZXMoaXRlbUIucG9zaXRpb24pO1xuICAgIGNvbnN0IG1heExlbmd0aCA9IE1hdGgubWF4KGFDb2Rlcy5sZW5ndGgsIGJDb2Rlcy5sZW5ndGgpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbWF4TGVuZ3RoOyBpKyspIHtcbiAgICAgICAgY29uc3QgYSA9IGFDb2Rlc1tpXSA9PSBudWxsID8gbWluIDogYUNvZGVzW2ldO1xuICAgICAgICBjb25zdCBiID0gYkNvZGVzW2ldID09IG51bGwgPyBtaW4gOiBiQ29kZXNbaV07XG4gICAgICAgIGlmIChhID09PSBiKSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBhIC0gYjtcbiAgICAgICAgfVxuICAgIH1cbiAgICB0aHJvdyBuZXcgRXJyb3IoYEltcG9zc2libGUgdG8gY29tcGFyZSBzaW1pbGFyIHBvc2l0aW9uIFwiJHtpdGVtQS5wb3NpdGlvbn1cIiBhbmQgXCIke2l0ZW1CLnBvc2l0aW9ufVwiYCk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@liveblocks/client/lib/esm/position.js\n");

/***/ }),

/***/ "./node_modules/@liveblocks/client/lib/esm/room.js":
/*!*********************************************************!*\
  !*** ./node_modules/@liveblocks/client/lib/esm/room.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"makeStateMachine\": function() { return /* binding */ makeStateMachine; },\n/* harmony export */   \"defaultState\": function() { return /* binding */ defaultState; },\n/* harmony export */   \"createRoom\": function() { return /* binding */ createRoom; }\n/* harmony export */ });\n/* harmony import */ var _doc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./doc */ \"./node_modules/@liveblocks/client/lib/esm/doc.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./types */ \"./node_modules/@liveblocks/client/lib/esm/types.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils */ \"./node_modules/@liveblocks/client/lib/esm/utils.js\");\n/* harmony import */ var _authentication__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./authentication */ \"./node_modules/@liveblocks/client/lib/esm/authentication.js\");\n/* harmony import */ var _live__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./live */ \"./node_modules/@liveblocks/client/lib/esm/live.js\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n\n\n\nconst BACKOFF_RETRY_DELAYS = [250, 500, 1000, 2000, 4000, 8000, 10000];\nconst HEARTBEAT_INTERVAL = 30000;\n// const WAKE_UP_CHECK_INTERVAL = 2000;\nconst PONG_TIMEOUT = 2000;\nfunction isValidRoomEventType(value) {\n    return (value === \"storage\" ||\n        value === \"my-presence\" ||\n        value === \"others\" ||\n        value === \"event\" ||\n        value === \"error\" ||\n        value === \"connection\");\n}\nfunction makeIdFactory(connectionId) {\n    let count = 0;\n    return () => `${connectionId}:${count++}`;\n}\nfunction makeOthers(presenceMap) {\n    const array = Object.values(presenceMap);\n    return {\n        get count() {\n            return array.length;\n        },\n        map(callback) {\n            return array.map(callback);\n        },\n        toArray() {\n            return array;\n        },\n    };\n}\nfunction log(...params) {\n    return;\n    console.log(...params, new Date().toString());\n}\nfunction makeStateMachine(state, context, mockedEffects) {\n    const effects = mockedEffects || {\n        authenticate() {\n            return __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const token = yield (0,_authentication__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(context.authEndpoint, context.room);\n                    const parsedToken = (0,_authentication__WEBPACK_IMPORTED_MODULE_3__.parseToken)(token);\n                    const socket = new WebSocket(`${context.liveblocksServer}/?token=${token}`);\n                    socket.addEventListener(\"message\", onMessage);\n                    socket.addEventListener(\"open\", onOpen);\n                    socket.addEventListener(\"close\", onClose);\n                    socket.addEventListener(\"error\", onError);\n                    authenticationSuccess(parsedToken, socket);\n                }\n                catch (er) {\n                    authenticationFailure(er);\n                }\n            });\n        },\n        send(messageOrMessages) {\n            if (state.socket == null) {\n                throw new Error(\"Can't send message if socket is null\");\n            }\n            state.socket.send(JSON.stringify(messageOrMessages));\n        },\n        delayFlush(delay) {\n            return setTimeout(tryFlushing, delay);\n        },\n        startHeartbeatInterval() {\n            return setInterval(heartbeat, HEARTBEAT_INTERVAL);\n        },\n        schedulePongTimeout() {\n            return setTimeout(pongTimeout, PONG_TIMEOUT);\n        },\n        scheduleReconnect(delay) {\n            return setTimeout(connect, delay);\n        },\n    };\n    function subscribe(type, listener) {\n        if (!isValidRoomEventType(type)) {\n            throw new Error(`\"${type}\" is not a valid event name`);\n        }\n        state.listeners[type].push(listener);\n    }\n    function unsubscribe(event, callback) {\n        if (!isValidRoomEventType(event)) {\n            throw new Error(`\"${event}\" is not a valid event name`);\n        }\n        const callbacks = state.listeners[event];\n        (0,_utils__WEBPACK_IMPORTED_MODULE_2__.remove)(callbacks, callback);\n    }\n    function getConnectionState() {\n        return state.connection.state;\n    }\n    function getSelf() {\n        return state.connection.state === \"open\" ||\n            state.connection.state === \"connecting\"\n            ? {\n                connectionId: state.connection.id,\n                id: state.connection.userId,\n                info: state.connection.userInfo,\n                presence: getPresence(),\n            }\n            : null;\n    }\n    function connect() {\n        if (typeof window === \"undefined\") {\n            return;\n        }\n        if (state.connection.state !== \"closed\" &&\n            state.connection.state !== \"unavailable\") {\n            return null;\n        }\n        updateConnection({ state: \"authenticating\" });\n        effects.authenticate();\n    }\n    function updatePresence(overrides) {\n        const newPresence = Object.assign(Object.assign({}, state.me), overrides);\n        if (state.flushData.presence == null) {\n            state.flushData.presence = overrides;\n        }\n        else {\n            for (const key in overrides) {\n                state.flushData.presence[key] = overrides[key];\n            }\n        }\n        state.me = newPresence;\n        tryFlushing();\n        for (const listener of state.listeners[\"my-presence\"]) {\n            listener(state.me);\n        }\n    }\n    function authenticationSuccess(token, socket) {\n        updateConnection({\n            state: \"connecting\",\n            id: token.actor,\n            userInfo: token.info,\n            userId: token.id,\n        });\n        state.idFactory = makeIdFactory(token.actor);\n        state.socket = socket;\n    }\n    function authenticationFailure(error) {\n        console.error(error);\n        updateConnection({ state: \"unavailable\" });\n        state.numberOfRetry++;\n        state.timeoutHandles.reconnect = effects.scheduleReconnect(getRetryDelay());\n    }\n    function onVisibilityChange(visibilityState) {\n        if (visibilityState === \"visible\" && state.connection.state === \"open\") {\n            log(\"Heartbeat after visibility change\");\n            heartbeat();\n        }\n    }\n    function onUpdatePresenceMessage(message) {\n        const user = state.users[message.actor];\n        if (user == null) {\n            state.users[message.actor] = {\n                connectionId: message.actor,\n                presence: message.data,\n            };\n        }\n        else {\n            state.users[message.actor] = {\n                id: user.id,\n                info: user.info,\n                connectionId: message.actor,\n                presence: Object.assign(Object.assign({}, user.presence), message.data),\n            };\n        }\n        updateUsers({\n            type: \"update\",\n            updates: message.data,\n            user: state.users[message.actor],\n        });\n    }\n    function updateUsers(event) {\n        state.others = makeOthers(state.users);\n        for (const listener of state.listeners[\"others\"]) {\n            listener(state.others, event);\n        }\n    }\n    function onUserLeftMessage(message) {\n        const userLeftMessage = message;\n        const user = state.users[userLeftMessage.actor];\n        if (user) {\n            delete state.users[userLeftMessage.actor];\n            updateUsers({ type: \"leave\", user });\n        }\n    }\n    function onRoomStateMessage(message) {\n        const newUsers = {};\n        for (const key in message.users) {\n            const connectionId = Number.parseInt(key);\n            const user = message.users[key];\n            newUsers[connectionId] = {\n                connectionId,\n                info: user.info,\n                id: user.id,\n            };\n        }\n        state.users = newUsers;\n        updateUsers({ type: \"reset\" });\n    }\n    function onNavigatorOnline() {\n        if (state.connection.state === \"unavailable\") {\n            log(\"Try to reconnect after connectivity change\");\n            reconnect();\n        }\n    }\n    function onEvent(message) {\n        for (const listener of state.listeners.event) {\n            listener({ connectionId: message.actor, event: message.event });\n        }\n    }\n    function onUserJoinedMessage(message) {\n        state.users[message.actor] = {\n            connectionId: message.actor,\n            info: message.info,\n            id: message.id,\n        };\n        updateUsers({ type: \"enter\", user: state.users[message.actor] });\n        if (state.me) {\n            // Send current presence to new user\n            // TODO: Consider storing it on the backend\n            state.flushData.messages.push({\n                type: _live__WEBPACK_IMPORTED_MODULE_4__.ClientMessageType.UpdatePresence,\n                data: state.me,\n                targetActor: message.actor,\n            });\n            tryFlushing();\n        }\n    }\n    function onMessage(event) {\n        if (event.data === \"pong\") {\n            clearTimeout(state.timeoutHandles.pongTimeout);\n            return;\n        }\n        const message = JSON.parse(event.data);\n        switch (message.type) {\n            case _live__WEBPACK_IMPORTED_MODULE_4__.ServerMessageType.InitialStorageState: {\n                onInitialStorageState(message);\n                break;\n            }\n            case _live__WEBPACK_IMPORTED_MODULE_4__.ServerMessageType.UpdateStorage: {\n                onStorageUpdates(message);\n                break;\n            }\n            case _live__WEBPACK_IMPORTED_MODULE_4__.ServerMessageType.UserJoined: {\n                onUserJoinedMessage(message);\n                break;\n            }\n            case _live__WEBPACK_IMPORTED_MODULE_4__.ServerMessageType.UpdatePresence: {\n                onUpdatePresenceMessage(message);\n                break;\n            }\n            case _live__WEBPACK_IMPORTED_MODULE_4__.ServerMessageType.Event: {\n                onEvent(message);\n                break;\n            }\n            case _live__WEBPACK_IMPORTED_MODULE_4__.ServerMessageType.UserLeft: {\n                onUserLeftMessage(message);\n                break;\n            }\n            case _live__WEBPACK_IMPORTED_MODULE_4__.ServerMessageType.RoomState: {\n                onRoomStateMessage(message);\n                break;\n            }\n        }\n    }\n    // function onWakeUp() {\n    //   // Sometimes, the browser can put the webpage on pause (computer is on sleep mode for example)\n    //   // The client will not know that the server has probably close the connection even if the readyState is Open\n    //   // One way to detect this kind of pause is to ensure that a setInterval is not taking more than the delay it was configured with\n    //   if (state.connection.state === \"open\") {\n    //     log(\"Try to reconnect after laptop wake up\");\n    //     reconnect();\n    //   }\n    // }\n    function onClose(event) {\n        state.socket = null;\n        clearTimeout(state.timeoutHandles.pongTimeout);\n        clearInterval(state.intervalHandles.heartbeat);\n        if (state.timeoutHandles.flush) {\n            clearTimeout(state.timeoutHandles.flush);\n        }\n        clearTimeout(state.timeoutHandles.reconnect);\n        state.users = {};\n        updateUsers({ type: \"reset\" });\n        if (event.code >= 4000 && event.code <= 4100) {\n            updateConnection({ state: \"failed\" });\n            const error = new LiveblocksError(event.reason, event.code);\n            for (const listener of state.listeners.error) {\n                listener(error);\n            }\n        }\n        else if (event.wasClean === false) {\n            updateConnection({ state: \"unavailable\" });\n            state.numberOfRetry++;\n            state.timeoutHandles.reconnect = effects.scheduleReconnect(getRetryDelay());\n        }\n        else {\n            updateConnection({ state: \"closed\" });\n        }\n    }\n    function updateConnection(connection) {\n        state.connection = connection;\n        for (const listener of state.listeners.connection) {\n            listener(connection.state);\n        }\n    }\n    function getRetryDelay() {\n        return BACKOFF_RETRY_DELAYS[state.numberOfRetry < BACKOFF_RETRY_DELAYS.length\n            ? state.numberOfRetry\n            : BACKOFF_RETRY_DELAYS.length - 1];\n    }\n    function onError() { }\n    function onOpen() {\n        clearInterval(state.intervalHandles.heartbeat);\n        state.intervalHandles.heartbeat = effects.startHeartbeatInterval();\n        if (state.connection.state === \"connecting\") {\n            updateConnection(Object.assign(Object.assign({}, state.connection), { state: \"open\" }));\n            state.numberOfRetry = 0;\n            tryFlushing();\n        }\n        else {\n            // TODO\n        }\n    }\n    function heartbeat() {\n        if (state.socket == null) {\n            // Should never happen, because we clear the pong timeout when the connection is dropped explictly\n            return;\n        }\n        clearTimeout(state.timeoutHandles.pongTimeout);\n        state.timeoutHandles.pongTimeout = effects.schedulePongTimeout();\n        if (state.socket.readyState === WebSocket.OPEN) {\n            state.socket.send(\"ping\");\n        }\n    }\n    function pongTimeout() {\n        log(\"Pong timeout. Trying to reconnect.\");\n        reconnect();\n    }\n    function reconnect() {\n        if (state.socket) {\n            state.socket.removeEventListener(\"open\", onOpen);\n            state.socket.removeEventListener(\"message\", onMessage);\n            state.socket.removeEventListener(\"close\", onClose);\n            state.socket.removeEventListener(\"error\", onError);\n            state.socket.close();\n            state.socket = null;\n        }\n        updateConnection({ state: \"unavailable\" });\n        clearTimeout(state.timeoutHandles.pongTimeout);\n        if (state.timeoutHandles.flush) {\n            clearTimeout(state.timeoutHandles.flush);\n        }\n        clearTimeout(state.timeoutHandles.reconnect);\n        clearInterval(state.intervalHandles.heartbeat);\n        connect();\n    }\n    function tryFlushing() {\n        if (state.socket == null) {\n            return;\n        }\n        if (state.socket.readyState !== WebSocket.OPEN) {\n            return;\n        }\n        const now = Date.now();\n        const elapsedTime = now - state.lastFlushTime;\n        if (elapsedTime > context.throttleDelay) {\n            const messages = flushDataToMessages(state);\n            if (messages.length === 0) {\n                return;\n            }\n            effects.send(messages);\n            state.flushData = {\n                messages: [],\n                storageOperations: [],\n                presence: null,\n            };\n            state.lastFlushTime = now;\n        }\n        else {\n            if (state.timeoutHandles.flush != null) {\n                clearTimeout(state.timeoutHandles.flush);\n            }\n            state.timeoutHandles.flush = effects.delayFlush(context.throttleDelay - (now - state.lastFlushTime));\n        }\n    }\n    function flushDataToMessages(state) {\n        const messages = [];\n        if (state.flushData.presence) {\n            messages.push({\n                type: _live__WEBPACK_IMPORTED_MODULE_4__.ClientMessageType.UpdatePresence,\n                data: state.flushData.presence,\n            });\n        }\n        for (const event of state.flushData.messages) {\n            messages.push(event);\n        }\n        if (state.flushData.storageOperations.length > 0) {\n            messages.push({\n                type: _live__WEBPACK_IMPORTED_MODULE_4__.ClientMessageType.UpdateStorage,\n                ops: state.flushData.storageOperations,\n            });\n        }\n        return messages;\n    }\n    function disconnect() {\n        if (state.socket) {\n            state.socket.removeEventListener(\"open\", onOpen);\n            state.socket.removeEventListener(\"message\", onMessage);\n            state.socket.removeEventListener(\"close\", onClose);\n            state.socket.removeEventListener(\"error\", onError);\n            state.socket.close();\n            state.socket = null;\n        }\n        updateConnection({ state: \"closed\" });\n        if (state.timeoutHandles.flush) {\n            clearTimeout(state.timeoutHandles.flush);\n        }\n        clearTimeout(state.timeoutHandles.reconnect);\n        clearTimeout(state.timeoutHandles.pongTimeout);\n        clearInterval(state.intervalHandles.heartbeat);\n        state.users = {};\n        updateUsers({ type: \"reset\" });\n        clearListeners();\n    }\n    function clearListeners() {\n        for (const key in state.listeners) {\n            state.listeners[key] = [];\n        }\n    }\n    function getPresence() {\n        return state.me;\n    }\n    function getOthers() {\n        return state.others;\n    }\n    function broadcastEvent(event) {\n        if (state.socket == null) {\n            return;\n        }\n        state.flushData.messages.push({\n            type: _live__WEBPACK_IMPORTED_MODULE_4__.ClientMessageType.ClientEvent,\n            event,\n        });\n        tryFlushing();\n    }\n    /**\n     * STORAGE\n     */\n    function onStorageUpdates(message) {\n        if (state.doc == null) {\n            // TODO: Cache updates in case they are coming while root is queried\n            return;\n        }\n        updateDoc(message.ops.reduce((doc, op) => doc.dispatch(op), state.doc));\n    }\n    function updateDoc(doc) {\n        state.doc = doc;\n        if (doc) {\n            for (const listener of state.listeners.storage) {\n                listener(getStorage());\n            }\n        }\n    }\n    function getStorage() {\n        if (state.storageState === _types__WEBPACK_IMPORTED_MODULE_1__.LiveStorageState.Loaded) {\n            return {\n                state: state.storageState,\n                root: state.doc.root,\n            };\n        }\n        return {\n            state: state.storageState,\n        };\n    }\n    function onInitialStorageState(message) {\n        state.storageState = _types__WEBPACK_IMPORTED_MODULE_1__.LiveStorageState.Loaded;\n        if (message.root == null) {\n            const rootId = makeId();\n            state.doc = _doc__WEBPACK_IMPORTED_MODULE_0__.Doc.empty(rootId, (op) => dispatch(op));\n            updateDoc(state.doc.updateRecord(rootId, state.initialStorageFactory({\n                createRecord: (data) => createRecord(data),\n                createList: () => createList(),\n            })));\n        }\n        else {\n            updateDoc(_doc__WEBPACK_IMPORTED_MODULE_0__.Doc.load(message.root, (op) => dispatch(op)));\n        }\n    }\n    function makeId() {\n        if (state.idFactory == null) {\n            throw new Error(\"Can't generate id. Id factory is missing.\");\n        }\n        return state.idFactory();\n    }\n    function dispatch(op) {\n        state.flushData.storageOperations.push(op);\n        tryFlushing();\n    }\n    function createRecord(data) {\n        return (0,_doc__WEBPACK_IMPORTED_MODULE_0__.createRecord)(makeId(), data);\n    }\n    function createList() {\n        return (0,_doc__WEBPACK_IMPORTED_MODULE_0__.createList)(makeId());\n    }\n    function fetchStorage(initialStorageFactory) {\n        state.initialStorageFactory = initialStorageFactory;\n        state.storageState = _types__WEBPACK_IMPORTED_MODULE_1__.LiveStorageState.Loading;\n        state.flushData.messages.push({ type: _live__WEBPACK_IMPORTED_MODULE_4__.ClientMessageType.FetchStorage });\n        tryFlushing();\n    }\n    function updateRecord(record, overrides) {\n        updateDoc(state.doc.updateRecord(record.id, overrides));\n    }\n    function pushItem(list, item) {\n        updateDoc(state.doc.pushItem(list.id, item));\n    }\n    function deleteItem(list, index) {\n        updateDoc(state.doc.deleteItem(list.id, index));\n    }\n    function deleteItemById(list, itemId) {\n        updateDoc(state.doc.deleteItemById(list.id, itemId));\n    }\n    function moveItem(list, index, targetIndex) {\n        updateDoc(state.doc.moveItem(list.id, index, targetIndex));\n    }\n    return {\n        // Internal\n        onOpen,\n        onClose,\n        onMessage,\n        authenticationSuccess,\n        heartbeat,\n        onNavigatorOnline,\n        // onWakeUp,\n        onVisibilityChange,\n        // Core\n        connect,\n        disconnect,\n        subscribe,\n        unsubscribe,\n        // Presence\n        updatePresence,\n        broadcastEvent,\n        // Storage\n        fetchStorage,\n        createRecord,\n        updateRecord,\n        createList,\n        pushItem,\n        deleteItem,\n        deleteItemById,\n        moveItem,\n        selectors: {\n            // Core\n            getConnectionState,\n            getSelf,\n            // Presence\n            getPresence,\n            getOthers,\n            // Storage\n            getStorage,\n        },\n    };\n}\nfunction defaultState(me) {\n    return {\n        connection: { state: \"closed\" },\n        socket: null,\n        listeners: {\n            storage: [],\n            event: [],\n            others: [],\n            \"my-presence\": [],\n            error: [],\n            connection: [],\n        },\n        numberOfRetry: 0,\n        lastFlushTime: 0,\n        timeoutHandles: {\n            flush: null,\n            reconnect: 0,\n            pongTimeout: 0,\n        },\n        flushData: {\n            presence: me == null ? {} : me,\n            messages: [],\n            storageOperations: [],\n        },\n        intervalHandles: {\n            heartbeat: 0,\n        },\n        me: me == null ? {} : me,\n        users: {},\n        others: makeOthers({}),\n        storageState: _types__WEBPACK_IMPORTED_MODULE_1__.LiveStorageState.NotInitialized,\n        initialStorageFactory: null,\n        doc: null,\n        idFactory: null,\n    };\n}\nfunction createRoom(name, options) {\n    const throttleDelay = options.throttle || 100;\n    const liveblocksServer = options.liveblocksServer || \"wss://liveblocks.net\";\n    const authEndpoint = options.authEndpoint;\n    const state = defaultState(options.initialPresence);\n    const machine = makeStateMachine(state, {\n        throttleDelay,\n        liveblocksServer,\n        authEndpoint,\n        room: name,\n    });\n    const room = {\n        /////////////\n        // Core    //\n        /////////////\n        getConnectionState: machine.selectors.getConnectionState,\n        getSelf: machine.selectors.getSelf,\n        subscribe: machine.subscribe,\n        unsubscribe: machine.unsubscribe,\n        /////////////\n        // Storage //\n        /////////////\n        getStorage: machine.selectors.getStorage,\n        fetchStorage: machine.fetchStorage,\n        createRecord: machine.createRecord,\n        createList: machine.createList,\n        updateRecord: machine.updateRecord,\n        pushItem: machine.pushItem,\n        deleteItem: machine.deleteItem,\n        deleteItemById: machine.deleteItemById,\n        moveItem: machine.moveItem,\n        //////////////\n        // Presence //\n        //////////////\n        getPresence: machine.selectors.getPresence,\n        updatePresence: machine.updatePresence,\n        getOthers: machine.selectors.getOthers,\n        broadcastEvent: machine.broadcastEvent,\n    };\n    return {\n        connect: machine.connect,\n        disconnect: machine.disconnect,\n        onNavigatorOnline: machine.onNavigatorOnline,\n        onVisibilityChange: machine.onVisibilityChange,\n        room,\n    };\n}\nclass LiveblocksError extends Error {\n    constructor(message, code) {\n        super(message);\n        this.code = code;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@liveblocks/client/lib/esm/room.js\n");

/***/ }),

/***/ "./node_modules/@liveblocks/client/lib/esm/types.js":
/*!**********************************************************!*\
  !*** ./node_modules/@liveblocks/client/lib/esm/types.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"LiveStorageState\": function() { return /* binding */ LiveStorageState; }\n/* harmony export */ });\nvar LiveStorageState;\n(function (LiveStorageState) {\n    LiveStorageState[LiveStorageState[\"NotInitialized\"] = 0] = \"NotInitialized\";\n    LiveStorageState[LiveStorageState[\"Loading\"] = 1] = \"Loading\";\n    LiveStorageState[LiveStorageState[\"Loaded\"] = 2] = \"Loaded\";\n})(LiveStorageState || (LiveStorageState = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGxpdmVibG9ja3MvY2xpZW50L2xpYi9lc20vdHlwZXMuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDRDQUE0QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGxpdmVibG9ja3MvY2xpZW50L2xpYi9lc20vdHlwZXMuanM/MDZmOSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgdmFyIExpdmVTdG9yYWdlU3RhdGU7XG4oZnVuY3Rpb24gKExpdmVTdG9yYWdlU3RhdGUpIHtcbiAgICBMaXZlU3RvcmFnZVN0YXRlW0xpdmVTdG9yYWdlU3RhdGVbXCJOb3RJbml0aWFsaXplZFwiXSA9IDBdID0gXCJOb3RJbml0aWFsaXplZFwiO1xuICAgIExpdmVTdG9yYWdlU3RhdGVbTGl2ZVN0b3JhZ2VTdGF0ZVtcIkxvYWRpbmdcIl0gPSAxXSA9IFwiTG9hZGluZ1wiO1xuICAgIExpdmVTdG9yYWdlU3RhdGVbTGl2ZVN0b3JhZ2VTdGF0ZVtcIkxvYWRlZFwiXSA9IDJdID0gXCJMb2FkZWRcIjtcbn0pKExpdmVTdG9yYWdlU3RhdGUgfHwgKExpdmVTdG9yYWdlU3RhdGUgPSB7fSkpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@liveblocks/client/lib/esm/types.js\n");

/***/ }),

/***/ "./node_modules/@liveblocks/client/lib/esm/utils.js":
/*!**********************************************************!*\
  !*** ./node_modules/@liveblocks/client/lib/esm/utils.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"remove\": function() { return /* binding */ remove; }\n/* harmony export */ });\nfunction remove(array, item) {\n    for (let i = 0; i < array.length; i++) {\n        if (array[i] === item) {\n            array.splice(i, 1);\n            break;\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGxpdmVibG9ja3MvY2xpZW50L2xpYi9lc20vdXRpbHMuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1Asb0JBQW9CLGtCQUFrQjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BsaXZlYmxvY2tzL2NsaWVudC9saWIvZXNtL3V0aWxzLmpzP2Q0ODAiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIHJlbW92ZShhcnJheSwgaXRlbSkge1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYXJyYXkubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWYgKGFycmF5W2ldID09PSBpdGVtKSB7XG4gICAgICAgICAgICBhcnJheS5zcGxpY2UoaSwgMSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@liveblocks/client/lib/esm/utils.js\n");

/***/ }),

/***/ "./node_modules/@liveblocks/react/lib/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/@liveblocks/react/lib/index.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\nvar ServerMessageType;\n(function (ServerMessageType) {\n    ServerMessageType[ServerMessageType[\"UpdatePresence\"] = 100] = \"UpdatePresence\";\n    ServerMessageType[ServerMessageType[\"UserJoined\"] = 101] = \"UserJoined\";\n    ServerMessageType[ServerMessageType[\"UserLeft\"] = 102] = \"UserLeft\";\n    ServerMessageType[ServerMessageType[\"Event\"] = 103] = \"Event\";\n    ServerMessageType[ServerMessageType[\"RoomState\"] = 104] = \"RoomState\";\n    ServerMessageType[ServerMessageType[\"InitialStorageState\"] = 200] = \"InitialStorageState\";\n    ServerMessageType[ServerMessageType[\"UpdateStorage\"] = 201] = \"UpdateStorage\";\n})(ServerMessageType || (ServerMessageType = {}));\nvar ClientMessageType;\n(function (ClientMessageType) {\n    ClientMessageType[ClientMessageType[\"UpdatePresence\"] = 100] = \"UpdatePresence\";\n    ClientMessageType[ClientMessageType[\"ClientEvent\"] = 103] = \"ClientEvent\";\n    ClientMessageType[ClientMessageType[\"FetchStorage\"] = 200] = \"FetchStorage\";\n    ClientMessageType[ClientMessageType[\"UpdateStorage\"] = 201] = \"UpdateStorage\";\n})(ClientMessageType || (ClientMessageType = {}));\nvar CrdtType;\n(function (CrdtType) {\n    CrdtType[CrdtType[\"Record\"] = 0] = \"Record\";\n    CrdtType[CrdtType[\"List\"] = 1] = \"List\";\n    CrdtType[CrdtType[\"Register\"] = 2] = \"Register\";\n})(CrdtType || (CrdtType = {}));\nvar OpType;\n(function (OpType) {\n    OpType[OpType[\"Init\"] = 100] = \"Init\";\n    OpType[OpType[\"ListInsert\"] = 200] = \"ListInsert\";\n    OpType[OpType[\"ListMove\"] = 201] = \"ListMove\";\n    OpType[OpType[\"ListRemove\"] = 202] = \"ListRemove\";\n    OpType[OpType[\"RecordUpdate\"] = 300] = \"RecordUpdate\";\n})(OpType || (OpType = {}));\nvar WebsocketCloseCodes;\n(function (WebsocketCloseCodes) {\n    WebsocketCloseCodes[WebsocketCloseCodes[\"CLOSE_ABNORMAL\"] = 1006] = \"CLOSE_ABNORMAL\";\n    WebsocketCloseCodes[WebsocketCloseCodes[\"INVALID_MESSAGE_FORMAT\"] = 4000] = \"INVALID_MESSAGE_FORMAT\";\n    WebsocketCloseCodes[WebsocketCloseCodes[\"NOT_ALLOWED\"] = 4001] = \"NOT_ALLOWED\";\n    WebsocketCloseCodes[WebsocketCloseCodes[\"MAX_NUMBER_OF_MESSAGES_PER_SECONDS\"] = 4002] = \"MAX_NUMBER_OF_MESSAGES_PER_SECONDS\";\n    WebsocketCloseCodes[WebsocketCloseCodes[\"MAX_NUMBER_OF_CONCURRENT_CONNECTIONS\"] = 4003] = \"MAX_NUMBER_OF_CONCURRENT_CONNECTIONS\";\n    WebsocketCloseCodes[WebsocketCloseCodes[\"MAX_NUMBER_OF_MESSAGES_PER_DAY_PER_APP\"] = 4004] = \"MAX_NUMBER_OF_MESSAGES_PER_DAY_PER_APP\";\n    WebsocketCloseCodes[WebsocketCloseCodes[\"MAX_NUMBER_OF_CONCURRENT_CONNECTIONS_PER_ROOM\"] = 4005] = \"MAX_NUMBER_OF_CONCURRENT_CONNECTIONS_PER_ROOM\";\n})(WebsocketCloseCodes || (WebsocketCloseCodes = {}));\n\nvar LiveStorageState;\n(function (LiveStorageState) {\n    LiveStorageState[LiveStorageState[\"NotInitialized\"] = 0] = \"NotInitialized\";\n    LiveStorageState[LiveStorageState[\"Loading\"] = 1] = \"Loading\";\n    LiveStorageState[LiveStorageState[\"Loaded\"] = 2] = \"Loaded\";\n})(LiveStorageState || (LiveStorageState = {}));\n\n( false) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n( false) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\nvar ClientContext = React.createContext(null);\r\nvar RoomContext = React.createContext(null);\r\n/**\r\n * Makes the Liveblocks client available in the component hierarchy below.\r\n */\r\nfunction LiveblocksProvider(props) {\r\n    return (React.createElement(ClientContext.Provider, { value: props.client }, props.children));\r\n}\r\n/**\r\n * Returns the client of the nearest LiveblocksProvider above in the react component tree\r\n */\r\nfunction useClient() {\r\n    var client = React.useContext(ClientContext);\r\n    if (client == null) {\r\n        throw new Error(\"LiveblocksProvider is missing from the react tree\");\r\n    }\r\n    return client;\r\n}\r\n/**\r\n * Makes a Room available in the component hierarchy below.\r\n * When this component is unmounted, the current user leave the room.\r\n * That means that you can't have 2 RoomProvider with the same room id in your react tree.\r\n */\r\nfunction RoomProvider(_a) {\r\n    var id = _a.id, children = _a.children, defaultPresence = _a.defaultPresence;\r\n    var client = useClient();\r\n    React.useEffect(function () {\r\n        return function () {\r\n            client.leave(id);\r\n        };\r\n    }, [client, id]);\r\n    var room = client.getRoom(id) ||\r\n        client.enter(id, defaultPresence ? defaultPresence() : undefined);\r\n    return React.createElement(RoomContext.Provider, { value: room }, children);\r\n}\r\n/**\r\n * Returns the room of the nearest RoomProvider above in the react component tree\r\n */\r\nfunction useRoom() {\r\n    var room = React.useContext(RoomContext);\r\n    if (room == null) {\r\n        throw new Error(\"RoomProvider is missing from the react tree\");\r\n    }\r\n    return room;\r\n}\r\n/**\r\n * Returns the presence of the current user of the current room, and a function to update it.\r\n * It is different from the setState function returned by the useState hook from React.\r\n * You don't need to pass the full presence object to update it.\r\n *\r\n * ### Example\r\n * ``` typescript\r\n * import { useMyPresence } from \"@liveblocks/react\";\r\n *\r\n * const [myPresence, updateMyPresence] = useMyPresence();\r\n * updateMyPresence({ x: 0 });\r\n * updateMyPresence({ y: 0 });\r\n *\r\n * // At the next render, \"myPresence\" will be equal to \"{ x: 0, y: 0 }\"\r\n * ```\r\n */\r\nfunction useMyPresence() {\r\n    var room = useRoom();\r\n    var presence = room.getPresence();\r\n    var _a = React.useState(0), update = _a[1];\r\n    React.useEffect(function () {\r\n        function onMyPresenceChange() {\r\n            update(function (x) { return x + 1; });\r\n        }\r\n        room.subscribe(\"my-presence\", onMyPresenceChange);\r\n        return function () {\r\n            room.unsubscribe(\"my-presence\", onMyPresenceChange);\r\n        };\r\n    }, [room]);\r\n    var setPresence = React.useCallback(function (overrides) { return room.updatePresence(overrides); }, [room]);\r\n    return [presence, setPresence];\r\n}\r\n/**\r\n * useUpdateMyPresence is similar to useMyPresence but it only returns the function to update the current user presence.\r\n * If you don't use the current user presence in your component, but you need to update it (e.g. live cursor), it's better to use useUpdateMyPresence to avoid unnecessary renders.\r\n *\r\n * ### Example\r\n * ``` typescript\r\n * import { useUpdateMyPresence } from \"@liveblocks/react\";\r\n *\r\n * const updateMyPresence = useUpdateMyPresence();\r\n * updateMyPresence({ x: 0 });\r\n * updateMyPresence({ y: 0 });\r\n *\r\n * // At the next render, the presence of the current user will be equal to \"{ x: 0, y: 0 }\"\r\n * ```\r\n */\r\nfunction useUpdateMyPresence() {\r\n    var room = useRoom();\r\n    return React.useCallback(function (overrides) {\r\n        room.updatePresence(overrides);\r\n    }, [room]);\r\n}\r\n/**\r\n * Returns an object that lets you get information about all the the users currently connected in the room.\r\n *\r\n * ### Example\r\n * ``` typescript\r\n * import { useOthers } from \"@liveblocks/react\";\r\n *\r\n * const others = useOthers();\r\n *\r\n * // Example to map all cursors in jsx\r\n * {\r\n *   others.map(({ connectionId, presence }) => {\r\n *     if(presence == null || presence.cursor == null) {\r\n *       return null;\r\n *     }\r\n *     return <Cursor key={connectionId} cursor={presence.cursor} />\r\n *   })\r\n * }\r\n * ```\r\n */\r\nfunction useOthers() {\r\n    var room = useRoom();\r\n    var _a = React.useState(0), update = _a[1];\r\n    React.useEffect(function () {\r\n        function onOthersChange() {\r\n            update(function (x) { return x + 1; });\r\n        }\r\n        room.subscribe(\"others\", onOthersChange);\r\n        return function () {\r\n            room.subscribe(\"others\", onOthersChange);\r\n        };\r\n    }, [room]);\r\n    return room.getOthers();\r\n}\r\n/**\r\n * Returns a callback that lets you broadcast custom events to other users in the room\r\n *\r\n * ### Example\r\n * ``` typescript\r\n * import { useBroadcastEvent } from \"@liveblocks/react\";\r\n *\r\n * const broadcast = useBroadcastEvent();\r\n *\r\n * broadcast({ type: \"CUSTOM_EVENT\", data: { x: 0, y: 0 } });\r\n * ```\r\n */\r\nfunction useBroadcastEvent() {\r\n    var room = useRoom();\r\n    return React.useCallback(function (event) {\r\n        room.broadcastEvent(event);\r\n    }, [room]);\r\n}\r\n/**\r\n * useErrorListener is a react hook that lets you react to potential room connection errors.\r\n *\r\n * ### Example\r\n * ``` typescript\r\n * import { useErrorListener } from \"@liveblocks/react\";\r\n *\r\n * useErrorListener(er => {\r\n *   console.error(er);\r\n * })\r\n * ```\r\n */\r\nfunction useErrorListener(callback) {\r\n    var room = useRoom();\r\n    var savedCallback = React.useRef(callback);\r\n    React.useEffect(function () {\r\n        savedCallback.current = callback;\r\n    });\r\n    React.useEffect(function () {\r\n        var listener = function (e) { return savedCallback.current(e); };\r\n        room.subscribe(\"error\", listener);\r\n        return function () {\r\n            room.unsubscribe(\"error\", listener);\r\n        };\r\n    }, [room]);\r\n}\r\n/**\r\n * useEventListener is a react hook that lets you react to event broadcasted by other users in the room.\r\n *\r\n * ### Example\r\n * ``` typescript\r\n * import { useEventListener } from \"@liveblocks/react\";\r\n *\r\n * useEventListener(({ connectionId, event }) => {\r\n *   if (event.type === \"CUSTOM_EVENT\") {\r\n *     // Do something\r\n *   }\r\n * });\r\n * ```\r\n */\r\nfunction useEventListener(callback) {\r\n    var room = useRoom();\r\n    var savedCallback = React.useRef(callback);\r\n    React.useEffect(function () {\r\n        savedCallback.current = callback;\r\n    });\r\n    React.useEffect(function () {\r\n        var listener = function (e) {\r\n            return savedCallback.current(e);\r\n        };\r\n        room.subscribe(\"event\", listener);\r\n        return function () {\r\n            room.unsubscribe(\"event\", listener);\r\n        };\r\n    }, [room]);\r\n}\r\n/**\r\n * Gets the current user once it is connected to the room.\r\n *\r\n * ### Example\r\n * ``` typescript\r\n * import { useSelf } from \"@liveblocks/react\";\r\n *\r\n * const user = useSelf();\r\n * ```\r\n */\r\nfunction useSelf() {\r\n    var room = useRoom();\r\n    var _a = React.useState(0), update = _a[1];\r\n    React.useEffect(function () {\r\n        function onChange() {\r\n            update(function (x) { return x + 1; });\r\n        }\r\n        room.subscribe(\"my-presence\", onChange);\r\n        room.subscribe(\"connection\", onChange);\r\n        return function () {\r\n            room.unsubscribe(\"my-presence\", onChange);\r\n            room.unsubscribe(\"connection\", onChange);\r\n        };\r\n    }, [room]);\r\n    return room.getSelf();\r\n}\r\nfunction useStorage(initialStorage) {\r\n    var room = useRoom();\r\n    var storage = room.getStorage();\r\n    var _a = React.useState(0), update = _a[1];\r\n    React.useEffect(function () {\r\n        function onStorageChange() {\r\n            update(function (x) { return x + 1; });\r\n        }\r\n        room.fetchStorage(initialStorage);\r\n        room.subscribe(\"storage\", onStorageChange);\r\n        return function () {\r\n            room.unsubscribe(\"storage\", onStorageChange);\r\n        };\r\n    }, [room]);\r\n    var root = storage.state === LiveStorageState.Loaded\r\n        ? storage.root\r\n        : null;\r\n    var actions = useStorageActions();\r\n    return [root, actions];\r\n}\r\nfunction useStorageActions() {\r\n    var room = useRoom();\r\n    return React.useMemo(function () {\r\n        function createRecord(data) {\r\n            return room.createRecord(data);\r\n        }\r\n        function updateRecord(record, overrides) {\r\n            return room.updateRecord(record, overrides);\r\n        }\r\n        function createList() {\r\n            return room.createList();\r\n        }\r\n        function moveItem(list, index, targetIndex) {\r\n            return room.moveItem(list, index, targetIndex);\r\n        }\r\n        function deleteItem(list, index) {\r\n            return room.deleteItem(list, index);\r\n        }\r\n        function deleteItemById(list, itemId) {\r\n            return room.deleteItemById(list, itemId);\r\n        }\r\n        function pushItem(list, item) {\r\n            return room.pushItem(list, item);\r\n        }\r\n        return {\r\n            createRecord: createRecord,\r\n            updateRecord: updateRecord,\r\n            createList: createList,\r\n            moveItem: moveItem,\r\n            deleteItem: deleteItem,\r\n            deleteItemById: deleteItemById,\r\n            pushItem: pushItem,\r\n        };\r\n    }, [room]);\r\n}\n\nexports.LiveblocksProvider = LiveblocksProvider;\nexports.RoomProvider = RoomProvider;\nexports.useBroadcastEvent = useBroadcastEvent;\nexports.useErrorListener = useErrorListener;\nexports.useEventListener = useEventListener;\nexports.useMyPresence = useMyPresence;\nexports.useOthers = useOthers;\nexports.useSelf = useSelf;\nexports.useStorage = useStorage;\nexports.useStorageActions = useStorageActions;\nexports.useUpdateMyPresence = useUpdateMyPresence;\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@liveblocks/react/lib/index.js\n");

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F_app&absolutePagePath=private-next-pages%2F_app!":
/*!*******************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F_app&absolutePagePath=private-next-pages%2F_app! ***!
  \*******************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/_app\",\n      function () {\n        return __webpack_require__(/*! private-next-pages/_app */ \"./pages/_app.js\");\n      }\n    ]);\n    if(true) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/_app\"])\n      });\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWNsaWVudC1wYWdlcy1sb2FkZXIuanM/cGFnZT0lMkZfYXBwJmFic29sdXRlUGFnZVBhdGg9cHJpdmF0ZS1uZXh0LXBhZ2VzJTJGX2FwcCEuanMiLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUJBQU8sQ0FBQyxnREFBeUI7QUFDaEQ7QUFDQTtBQUNBLE9BQU8sSUFBVTtBQUNqQixNQUFNLFVBQVU7QUFDaEI7QUFDQSxPQUFPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvPzYzZWQiXSwic291cmNlc0NvbnRlbnQiOlsiXG4gICAgKHdpbmRvdy5fX05FWFRfUCA9IHdpbmRvdy5fX05FWFRfUCB8fCBbXSkucHVzaChbXG4gICAgICBcIi9fYXBwXCIsXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiByZXF1aXJlKFwicHJpdmF0ZS1uZXh0LXBhZ2VzL19hcHBcIik7XG4gICAgICB9XG4gICAgXSk7XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgd2luZG93Ll9fTkVYVF9QLnB1c2goW1wiL19hcHBcIl0pXG4gICAgICB9KTtcbiAgICB9XG4gICJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F_app&absolutePagePath=private-next-pages%2F_app!\n");

/***/ }),

/***/ "./pages/_app.js":
/*!***********************!*\
  !*** ./pages/_app.js ***!
  \***********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _home_svn_ryanparag_com_node_modules_next_dist_compiled_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/next/dist/compiled/@babel/runtime/helpers/esm/defineProperty */ \"./node_modules/next/dist/compiled/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _liveblocks_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @liveblocks/client */ \"./node_modules/@liveblocks/client/lib/esm/index.js\");\n/* harmony import */ var _liveblocks_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @liveblocks/react */ \"./node_modules/@liveblocks/react/lib/index.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__);\n\nvar _jsxFileName = \"/home/svn/ryanparag.com/pages/_app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0,_home_svn_ryanparag_com_node_modules_next_dist_compiled_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n\n\n\nvar client = (0,_liveblocks_client__WEBPACK_IMPORTED_MODULE_1__.createClient)({\n  authEndpoint: \"/api/liveblocks\"\n});\n\nfunction MyApp(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)(_liveblocks_react__WEBPACK_IMPORTED_MODULE_2__.LiveblocksProvider, {\n    client: client,\n    children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)(Component, _objectSpread({}, pageProps), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n\n_c = MyApp;\n/* harmony default export */ __webpack_exports__[\"default\"] = (MyApp);\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9fYXBwLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBOztBQUVBLElBQU1FLE1BQU0sR0FBR0YsZ0VBQVksQ0FBQztBQUMxQkcsRUFBQUEsWUFBWSxFQUFFO0FBRFksQ0FBRCxDQUEzQjs7QUFJQSxTQUFTQyxLQUFULE9BQXlDO0FBQUEsTUFBeEJDLFNBQXdCLFFBQXhCQSxTQUF3QjtBQUFBLE1BQWJDLFNBQWEsUUFBYkEsU0FBYTtBQUN2QyxzQkFDRSw4REFBQyxpRUFBRDtBQUFvQixVQUFNLEVBQUVKLE1BQTVCO0FBQUEsMkJBQ0UsOERBQUMsU0FBRCxvQkFBZUksU0FBZjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBREY7QUFBQTtBQUFBO0FBQUE7QUFBQSxVQURGO0FBS0Q7O0tBTlFGO0FBUVQsK0RBQWVBLEtBQWYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vcGFnZXMvX2FwcC5qcz9lMGFkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUNsaWVudCB9IGZyb20gXCJAbGl2ZWJsb2Nrcy9jbGllbnRcIjtcbmltcG9ydCB7IExpdmVibG9ja3NQcm92aWRlciB9IGZyb20gXCJAbGl2ZWJsb2Nrcy9yZWFjdFwiO1xuXG5jb25zdCBjbGllbnQgPSBjcmVhdGVDbGllbnQoe1xuICBhdXRoRW5kcG9pbnQ6IFwiL2FwaS9saXZlYmxvY2tzXCIsXG59KTtcblxuZnVuY3Rpb24gTXlBcHAoeyBDb21wb25lbnQsIHBhZ2VQcm9wcyB9KSB7XG4gIHJldHVybiAoXG4gICAgPExpdmVibG9ja3NQcm92aWRlciBjbGllbnQ9e2NsaWVudH0+XG4gICAgICA8Q29tcG9uZW50IHsuLi5wYWdlUHJvcHN9IC8+XG4gICAgPC9MaXZlYmxvY2tzUHJvdmlkZXI+XG4gICk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IE15QXBwOyJdLCJuYW1lcyI6WyJjcmVhdGVDbGllbnQiLCJMaXZlYmxvY2tzUHJvdmlkZXIiLCJjbGllbnQiLCJhdXRoRW5kcG9pbnQiLCJNeUFwcCIsIkNvbXBvbmVudCIsInBhZ2VQcm9wcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./pages/_app.js\n");

/***/ }),

/***/ "./node_modules/react/cjs/react-jsx-dev-runtime.development.js":
/*!*********************************************************************!*\
  !*** ./node_modules/react/cjs/react-jsx-dev-runtime.development.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("/** @license React v17.0.2\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nvar _assign = __webpack_require__(/*! object-assign */ \"./node_modules/next/dist/build/polyfills/object-assign.js\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar REACT_ELEMENT_TYPE = 0xeac7;\nvar REACT_PORTAL_TYPE = 0xeaca;\nexports.Fragment = 0xeacb;\nvar REACT_STRICT_MODE_TYPE = 0xeacc;\nvar REACT_PROFILER_TYPE = 0xead2;\nvar REACT_PROVIDER_TYPE = 0xeacd;\nvar REACT_CONTEXT_TYPE = 0xeace;\nvar REACT_FORWARD_REF_TYPE = 0xead0;\nvar REACT_SUSPENSE_TYPE = 0xead1;\nvar REACT_SUSPENSE_LIST_TYPE = 0xead8;\nvar REACT_MEMO_TYPE = 0xead3;\nvar REACT_LAZY_TYPE = 0xead4;\nvar REACT_BLOCK_TYPE = 0xead9;\nvar REACT_SERVER_BLOCK_TYPE = 0xeada;\nvar REACT_FUNDAMENTAL_TYPE = 0xead5;\nvar REACT_SCOPE_TYPE = 0xead7;\nvar REACT_OPAQUE_ID_TYPE = 0xeae0;\nvar REACT_DEBUG_TRACING_MODE_TYPE = 0xeae1;\nvar REACT_OFFSCREEN_TYPE = 0xeae2;\nvar REACT_LEGACY_HIDDEN_TYPE = 0xeae3;\n\nif (typeof Symbol === 'function' && Symbol.for) {\n  var symbolFor = Symbol.for;\n  REACT_ELEMENT_TYPE = symbolFor('react.element');\n  REACT_PORTAL_TYPE = symbolFor('react.portal');\n  exports.Fragment = symbolFor('react.fragment');\n  REACT_STRICT_MODE_TYPE = symbolFor('react.strict_mode');\n  REACT_PROFILER_TYPE = symbolFor('react.profiler');\n  REACT_PROVIDER_TYPE = symbolFor('react.provider');\n  REACT_CONTEXT_TYPE = symbolFor('react.context');\n  REACT_FORWARD_REF_TYPE = symbolFor('react.forward_ref');\n  REACT_SUSPENSE_TYPE = symbolFor('react.suspense');\n  REACT_SUSPENSE_LIST_TYPE = symbolFor('react.suspense_list');\n  REACT_MEMO_TYPE = symbolFor('react.memo');\n  REACT_LAZY_TYPE = symbolFor('react.lazy');\n  REACT_BLOCK_TYPE = symbolFor('react.block');\n  REACT_SERVER_BLOCK_TYPE = symbolFor('react.server.block');\n  REACT_FUNDAMENTAL_TYPE = symbolFor('react.fundamental');\n  REACT_SCOPE_TYPE = symbolFor('react.scope');\n  REACT_OPAQUE_ID_TYPE = symbolFor('react.opaque.id');\n  REACT_DEBUG_TRACING_MODE_TYPE = symbolFor('react.debug_trace_mode');\n  REACT_OFFSCREEN_TYPE = symbolFor('react.offscreen');\n  REACT_LEGACY_HIDDEN_TYPE = symbolFor('react.legacy_hidden');\n}\n\nvar MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    printWarning('error', format, args);\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    }\n\n    var argsWithFormat = args.map(function (item) {\n      return '' + item;\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// Filter certain DOM attributes (e.g. src, href) if their values are empty strings.\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === exports.Fragment || type === REACT_PROFILER_TYPE || type === REACT_DEBUG_TRACING_MODE_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || type === REACT_LEGACY_HIDDEN_TYPE || enableScopeAPI ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_BLOCK_TYPE || type[0] === REACT_SERVER_BLOCK_TYPE) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var functionName = innerType.displayName || innerType.name || '';\n  return outerType.displayName || (functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName);\n}\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n}\n\nfunction getComponentName(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case exports.Fragment:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        return getComponentName(type.type);\n\n      case REACT_BLOCK_TYPE:\n        return getComponentName(type._render);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentName(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n    }\n  }\n\n  return null;\n}\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: _assign({}, props, {\n          value: prevLog\n        }),\n        info: _assign({}, props, {\n          value: prevInfo\n        }),\n        warn: _assign({}, props, {\n          value: prevWarn\n        }),\n        error: _assign({}, props, {\n          value: prevError\n        }),\n        group: _assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: _assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: _assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if (!fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at ');\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_BLOCK_TYPE:\n        return describeFunctionComponentFrame(type._render);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(Object.prototype.hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentName(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentName(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingRef = function () {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingRef.isReactWarning = true;\n    Object.defineProperty(props, 'ref', {\n      get: warnAboutAccessingRef,\n      configurable: true\n    });\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV(type, config, maybeKey, source, self) {\n  {\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      ref = config.ref;\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n  }\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\nfunction isValidElement(object) {\n  {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner$1.current) {\n      var name = getComponentName(ReactCurrentOwner$1.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  {\n    if (source !== undefined) {\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n      var lineNumber = source.lineNumber;\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n    }\n\n    return '';\n  }\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentName(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object') {\n      return;\n    }\n\n    if (Array.isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else if (node) {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentName(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentName(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\n\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n  {\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n\n    if (!validType) {\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var sourceInfo = getSourceInfoErrorAddendum(source);\n\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (Array.isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentName(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n\n    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    } // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n\n    if (validType) {\n      var children = props.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (Array.isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    if (type === exports.Fragment) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n} // These two functions exist to still get child warnings in dev\n\nvar jsxDEV$1 =  jsxWithValidation ;\n\nexports.jsxDEV = jsxDEV$1;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react/cjs/react-jsx-dev-runtime.development.js\n");

/***/ }),

/***/ "./node_modules/react/jsx-dev-runtime.js":
/*!***********************************************!*\
  !*** ./node_modules/react/jsx-dev-runtime.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"./node_modules/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSx1SkFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2pzeC1kZXYtcnVudGltZS5qcz81Nzc3Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1qc3gtZGV2LXJ1bnRpbWUucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/react/jsx-dev-runtime.js\n");

/***/ }),

/***/ "./node_modules/next/dist/compiled/@babel/runtime/helpers/esm/defineProperty.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/@babel/runtime/helpers/esm/defineProperty.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ _defineProperty; }\n/* harmony export */ });\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxJQUFJO0FBQ0o7QUFDQTs7QUFFQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkuanM/MjUzMCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7XG4gIGlmIChrZXkgaW4gb2JqKSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7XG4gICAgICB2YWx1ZTogdmFsdWUsXG4gICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgd3JpdGFibGU6IHRydWVcbiAgICB9KTtcbiAgfSBlbHNlIHtcbiAgICBvYmpba2V5XSA9IHZhbHVlO1xuICB9XG5cbiAgcmV0dXJuIG9iajtcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/@babel/runtime/helpers/esm/defineProperty.js\n");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["main"], function() { return __webpack_exec__("./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F_app&absolutePagePath=private-next-pages%2F_app!"), __webpack_exec__("./node_modules/next/dist/client/router.js"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);